// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: cloud/planton/apis/v1/code2cloud/develop/sourcecode/server/rpc/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

///code-server command controller
public protocol Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerCommandControllerClientInterface {

    ///create code-server
    @available(iOS 13, *)
    func `create`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>

    ///update an existing code-server
    @available(iOS 13, *)
    func `update`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>

    ///delete an existing code-server
    @available(iOS 13, *)
    func `delete`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerId, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>

    ///restore a deleted code server
    @available(iOS 13, *)
    func `restore`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>

    ///synchronize code projects from the server.
    @available(iOS 13, *)
    func `synchronizeCodeProjects`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerId, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>

    ///attach a machine account to a code server by adding client-id and client-secret as
    ///variables on organization on github or group on gitlab etc
    @available(iOS 13, *)
    func `attachMachineAccountByCodeServerID`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_AttachMachineAccountByCodeServerIdCommandInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerCommandControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerCommandControllerClient: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerCommandControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `create`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController/create", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `update`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController/update", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `delete`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerId, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController/delete", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `restore`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController/restore", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `synchronizeCodeProjects`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerId, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController/synchronizeCodeProjects", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `attachMachineAccountByCodeServerID`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_AttachMachineAccountByCodeServerIdCommandInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController/attachMachineAccountByCodeServerId", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let create = Connect.MethodSpec(name: "create", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController", type: .unary)
            public static let update = Connect.MethodSpec(name: "update", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController", type: .unary)
            public static let delete = Connect.MethodSpec(name: "delete", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController", type: .unary)
            public static let restore = Connect.MethodSpec(name: "restore", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController", type: .unary)
            public static let synchronizeCodeProjects = Connect.MethodSpec(name: "synchronizeCodeProjects", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController", type: .unary)
            public static let attachMachineAccountByCodeServerID = Connect.MethodSpec(name: "attachMachineAccountByCodeServerId", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerCommandController", type: .unary)
        }
    }
}

///code server query controller
public protocol Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerQueryControllerClientInterface {

    ///list all code servers on planton cloud for the requested page. This is intended for use on portal.
    @available(iOS 13, *)
    func `list`(request: Cloud_Planton_Apis_V1_Commons_Rpc_Pagination_PageInfo, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerList>

    ///look up a code server using code server id
    @available(iOS 13, *)
    func `getByID`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerId, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer>

    ///find code servers by product id.
    ///response contains only objects that the authenticated user account id has viewer access to.
    @available(iOS 13, *)
    func `findByProductID`(request: Cloud_Planton_Apis_V1_Resourcemanager_Product_Rpc_ProductId, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServers>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerQueryControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerQueryControllerClient: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerQueryControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `list`(request: Cloud_Planton_Apis_V1_Commons_Rpc_Pagination_PageInfo, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerList> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerQueryController/list", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `getByID`(request: Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServerId, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServer> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerQueryController/getById", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `findByProductID`(request: Cloud_Planton_Apis_V1_Resourcemanager_Product_Rpc_ProductId, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_CodeServers> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerQueryController/findByProductId", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let list = Connect.MethodSpec(name: "list", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerQueryController", type: .unary)
            public static let getByID = Connect.MethodSpec(name: "getById", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerQueryController", type: .unary)
            public static let findByProductID = Connect.MethodSpec(name: "findByProductId", service: "cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.rpc.CodeServerQueryController", type: .unary)
        }
    }
}
