// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: cloud/planton/apis/v1/integration/kubernetes/proxy/certificate/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

public protocol Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_CertificateProxyQueryControllerClientInterface {

    @available(iOS 13, *)
    func `getCertificateByNamespaceByName`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_GetCertificateByNamespaceByNameQueryInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Resource_Certificate>

    @available(iOS 13, *)
    func `findCertificates`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_FindCertificatesQueryInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Resource_Certificates>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_CertificateProxyQueryControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_CertificateProxyQueryControllerClient: Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_CertificateProxyQueryControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `getCertificateByNamespaceByName`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_GetCertificateByNamespaceByNameQueryInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Resource_Certificate> {
        return await self.client.unary(path: "cloud.planton.apis.v1.integration.kubernetes.proxy.certificate.CertificateProxyQueryController/getCertificateByNamespaceByName", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `findCertificates`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Proxy_Certificate_FindCertificatesQueryInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Resource_Certificates> {
        return await self.client.unary(path: "cloud.planton.apis.v1.integration.kubernetes.proxy.certificate.CertificateProxyQueryController/findCertificates", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let getCertificateByNamespaceByName = Connect.MethodSpec(name: "getCertificateByNamespaceByName", service: "cloud.planton.apis.v1.integration.kubernetes.proxy.certificate.CertificateProxyQueryController", type: .unary)
            public static let findCertificates = Connect.MethodSpec(name: "findCertificates", service: "cloud.planton.apis.v1.integration.kubernetes.proxy.certificate.CertificateProxyQueryController", type: .unary)
        }
    }
}
