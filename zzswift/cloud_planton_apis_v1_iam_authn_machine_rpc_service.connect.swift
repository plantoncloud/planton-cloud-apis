// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: cloud/planton/apis/v1/iam/authn/machine/rpc/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

///machine authentication query controller
public protocol Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_MachineAuthenticationQueryControllerClientInterface {

    /// get an access token in exchange for a valid machine identity account client credentials
    @available(iOS 13, *)
    func `getAccessToken`(request: Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_GetMachineAccessTokenQueryInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_AccessToken>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_MachineAuthenticationQueryControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_MachineAuthenticationQueryControllerClient: Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_MachineAuthenticationQueryControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `getAccessToken`(request: Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_GetMachineAccessTokenQueryInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Iam_Authn_Machine_Rpc_AccessToken> {
        return await self.client.unary(path: "cloud.planton.apis.v1.iam.authn.machine.rpc.MachineAuthenticationQueryController/getAccessToken", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let getAccessToken = Connect.MethodSpec(name: "getAccessToken", service: "cloud.planton.apis.v1.iam.authn.machine.rpc.MachineAuthenticationQueryController", type: .unary)
        }
    }
}
