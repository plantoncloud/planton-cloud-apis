// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: cloud/planton/apis/v1/search/resource/rpc/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// SearchQueryController is a service that provides search functionality
/// related to specific companies and products.
/// It defines an RPC method, SearchByText, which accepts a text-based search
/// input and returns a response.
public protocol Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchQueryControllerClientInterface {

    /// SearchByText is an RPC method that takes a SearchByTextInput message
    /// containing the company identifier, product identifier, and search text.
    /// This method is responsible for performing a text-based search query
    /// related to the specified company and product, and it returns a response
    /// containing the search results.
    @available(iOS 13, *)
    func `searchByText`(request: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchByTextInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Search_Resource_Rpc_ResourceList>

    /// This method returns a `ResourceList` message, which encapsulates a list of resources that match
    /// the input search parameters. Each resource in the list should match the specified resource type,
    /// and be associated with the specified company and product.
    @available(iOS 13, *)
    func `searchByResourceType`(request: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchByResourceTypeInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Search_Resource_Rpc_ResourceList>

    /// This method returns a `ResourceList` message, which encapsulates a list of identities that match
    /// the input search parameters. Each identity in the list should be associated with the specified company
    /// and match the specified email or part thereof.
    @available(iOS 13, *)
    func `searchIdentityAccountByEmail`(request: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchIdentityAccountByEmailInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Search_Resource_Rpc_ResourceList>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchQueryControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchQueryControllerClient: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchQueryControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `searchByText`(request: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchByTextInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Search_Resource_Rpc_ResourceList> {
        return await self.client.unary(path: "cloud.planton.apis.v1.search.resource.rpc.SearchQueryController/searchByText", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `searchByResourceType`(request: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchByResourceTypeInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Search_Resource_Rpc_ResourceList> {
        return await self.client.unary(path: "cloud.planton.apis.v1.search.resource.rpc.SearchQueryController/searchByResourceType", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `searchIdentityAccountByEmail`(request: Cloud_Planton_Apis_V1_Search_Resource_Rpc_SearchIdentityAccountByEmailInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Search_Resource_Rpc_ResourceList> {
        return await self.client.unary(path: "cloud.planton.apis.v1.search.resource.rpc.SearchQueryController/searchIdentityAccountByEmail", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let searchByText = Connect.MethodSpec(name: "searchByText", service: "cloud.planton.apis.v1.search.resource.rpc.SearchQueryController", type: .unary)
            public static let searchByResourceType = Connect.MethodSpec(name: "searchByResourceType", service: "cloud.planton.apis.v1.search.resource.rpc.SearchQueryController", type: .unary)
            public static let searchIdentityAccountByEmail = Connect.MethodSpec(name: "searchIdentityAccountByEmail", service: "cloud.planton.apis.v1.search.resource.rpc.SearchQueryController", type: .unary)
        }
    }
}
