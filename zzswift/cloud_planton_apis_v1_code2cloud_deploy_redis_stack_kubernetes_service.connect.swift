// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: cloud/planton/apis/v1/code2cloud/deploy/redis/stack/kubernetes/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

public protocol Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackControllerClientInterface {

    @available(iOS 13, *)
    func `execute`(headers: Connect.Headers) -> any Connect.ServerOnlyAsyncStreamInterface<Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackInput, Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackResponse>

    @available(iOS 13, *)
    func `getStackOutputs`(request: Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackOutputs>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackControllerClient: Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `execute`(headers: Connect.Headers = [:]) -> any Connect.ServerOnlyAsyncStreamInterface<Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackInput, Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackResponse> {
        return self.client.serverOnlyStream(path: "cloud.planton.apis.v1.code2cloud.deploy.redis.stack.kubernetes.RedisClusterKubernetesStackController/execute", headers: headers)
    }

    @available(iOS 13, *)
    public func `getStackOutputs`(request: Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Code2cloud_Deploy_Redis_Stack_Kubernetes_RedisClusterKubernetesStackOutputs> {
        return await self.client.unary(path: "cloud.planton.apis.v1.code2cloud.deploy.redis.stack.kubernetes.RedisClusterKubernetesStackController/getStackOutputs", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let execute = Connect.MethodSpec(name: "execute", service: "cloud.planton.apis.v1.code2cloud.deploy.redis.stack.kubernetes.RedisClusterKubernetesStackController", type: .serverStream)
            public static let getStackOutputs = Connect.MethodSpec(name: "getStackOutputs", service: "cloud.planton.apis.v1.code2cloud.deploy.redis.stack.kubernetes.RedisClusterKubernetesStackController", type: .unary)
        }
    }
}
