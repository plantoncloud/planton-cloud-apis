// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: cloud/planton/apis/v1/code2cloud/deploy/kubecluster/rpc/enums/enums.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// provider for kubernetes
public enum Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_KubernetesProvider: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0

  ///https://cloud.google.com/kubernetes-engine
  case gcpGke // = 1

  ///https://aws.amazon.com/eks/
  case awsEks // = 2

  ///https://azure.microsoft.com/en-us/products/kubernetes-service
  case azureAks // = 3

  ///https://docs.digitalocean.com/products/kubernetes/
  case digitalOceanDoks // = 4
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .gcpGke
    case 2: self = .awsEks
    case 3: self = .azureAks
    case 4: self = .digitalOceanDoks
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .gcpGke: return 1
    case .awsEks: return 2
    case .azureAks: return 3
    case .digitalOceanDoks: return 4
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_KubernetesProvider: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_KubernetesProvider] = [
    .unspecified,
    .gcpGke,
    .awsEks,
    .azureAks,
    .digitalOceanDoks,
  ]
}

#endif  // swift(>=4.2)

/// the recommended best practice to use uppercase entry names and prefix the entry with enum name have been intentionally ignored to as the values of the entries are intended to be used to name the gke release channel.
public enum Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeReleaseChannel: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case regular // = 1
  case stable // = 2
  case rapid // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .regular
    case 2: self = .stable
    case 3: self = .rapid
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .regular: return 1
    case .stable: return 2
    case .rapid: return 3
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeReleaseChannel: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeReleaseChannel] = [
    .unspecified,
    .regular,
    .stable,
    .rapid,
  ]
}

#endif  // swift(>=4.2)

/// a pair of cidr blocks is considered as a secondary range set
/// a given range set can only be used for creating one cluster
/// a maximum of 15 clusters can be created in each environment with this allocation
/// 15 clusters should meet all the near term requirements.
/// more enums can be added later using the left out cidr blocks from 10.0.0.0/15 chunk
public enum Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeKubePodServiceSecondaryRangeCidrSetNum: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case one // = 1
  case two // = 2
  case three // = 3
  case four // = 4
  case five // = 5
  case six // = 6
  case seven // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .one
    case 2: self = .two
    case 3: self = .three
    case 4: self = .four
    case 5: self = .five
    case 6: self = .six
    case 7: self = .seven
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .one: return 1
    case .two: return 2
    case .three: return 3
    case .four: return 4
    case .five: return 5
    case .six: return 6
    case .seven: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeKubePodServiceSecondaryRangeCidrSetNum: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeKubePodServiceSecondaryRangeCidrSetNum] = [
    .unspecified,
    .one,
    .two,
    .three,
    .four,
    .five,
    .six,
    .seven,
  ]
}

#endif  // swift(>=4.2)

public enum Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_AwsEksWorkersManagementMode: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case awsEkaWorkersManagementModeUnspecified // = 0
  case ec2 // = 1
  case fargate // = 2
  case managedNodeGroups // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .awsEkaWorkersManagementModeUnspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .awsEkaWorkersManagementModeUnspecified
    case 1: self = .ec2
    case 2: self = .fargate
    case 3: self = .managedNodeGroups
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .awsEkaWorkersManagementModeUnspecified: return 0
    case .ec2: return 1
    case .fargate: return 2
    case .managedNodeGroups: return 3
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_AwsEksWorkersManagementMode: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_AwsEksWorkersManagementMode] = [
    .awsEkaWorkersManagementModeUnspecified,
    .ec2,
    .fargate,
    .managedNodeGroups,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_KubernetesProvider: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeReleaseChannel: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeKubePodServiceSecondaryRangeCidrSetNum: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_AwsEksWorkersManagementMode: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_KubernetesProvider: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "KUBERNETES_PROVIDER_UNSPECIFIED"),
    1: .same(proto: "GCP_GKE"),
    2: .same(proto: "AWS_EKS"),
    3: .same(proto: "AZURE_AKS"),
    4: .same(proto: "DIGITAL_OCEAN_DOKS"),
  ]
}

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeReleaseChannel: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "GKE_RELEASE_CHANNEL_UNSPECIFIED"),
    1: .same(proto: "REGULAR"),
    2: .same(proto: "STABLE"),
    3: .same(proto: "RAPID"),
  ]
}

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_GkeKubePodServiceSecondaryRangeCidrSetNum: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "GKE_KUBE_POD_SERVICE_SECONDARY_RANGE_CIDR_SET_NUM_UNSPECIFIED"),
    1: .same(proto: "ONE"),
    2: .same(proto: "TWO"),
    3: .same(proto: "THREE"),
    4: .same(proto: "FOUR"),
    5: .same(proto: "FIVE"),
    6: .same(proto: "SIX"),
    7: .same(proto: "SEVEN"),
  ]
}

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Kubecluster_Rpc_Enums_AwsEksWorkersManagementMode: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "AWS_EKA_WORKERS_MANAGEMENT_MODE_UNSPECIFIED"),
    1: .same(proto: "EC2"),
    2: .same(proto: "FARGATE"),
    3: .same(proto: "MANAGED_NODE_GROUPS"),
  ]
}
