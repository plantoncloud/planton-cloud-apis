// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: cloud/planton/apis/v1/code2cloud/develop/sourcecode/server/rpc/enums/enums.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_CodeServerProvider: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case github // = 1
  case gitlab // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .github
    case 2: self = .gitlab
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .github: return 1
    case .gitlab: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_CodeServerProvider: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_CodeServerProvider] = [
    .unspecified,
    .github,
    .gitlab,
  ]
}

#endif  // swift(>=4.2)

public enum Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_GithubAppInstallOwnerType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case githubAppInstallationOwnerTypeUnspecified // = 0
  case githubAppInstallationOwnerTypeUser // = 1
  case githubAppInstallationOwnerOrg // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .githubAppInstallationOwnerTypeUnspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .githubAppInstallationOwnerTypeUnspecified
    case 1: self = .githubAppInstallationOwnerTypeUser
    case 2: self = .githubAppInstallationOwnerOrg
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .githubAppInstallationOwnerTypeUnspecified: return 0
    case .githubAppInstallationOwnerTypeUser: return 1
    case .githubAppInstallationOwnerOrg: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_GithubAppInstallOwnerType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_GithubAppInstallOwnerType] = [
    .githubAppInstallationOwnerTypeUnspecified,
    .githubAppInstallationOwnerTypeUser,
    .githubAppInstallationOwnerOrg,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_CodeServerProvider: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_GithubAppInstallOwnerType: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_CodeServerProvider: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "CODE_SERVER_PROVIDER_UNSPECIFIED"),
    1: .same(proto: "CODE_SERVER_PROVIDER_GITHUB"),
    2: .same(proto: "CODE_SERVER_PROVIDER_GITLAB"),
  ]
}

extension Cloud_Planton_Apis_V1_Code2cloud_Develop_Sourcecode_Server_Rpc_Enums_GithubAppInstallOwnerType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "GITHUB_APP_INSTALLATION_OWNER_TYPE_UNSPECIFIED"),
    1: .same(proto: "GITHUB_APP_INSTALLATION_OWNER_TYPE_USER"),
    2: .same(proto: "GITHUB_APP_INSTALLATION_OWNER_ORG"),
  ]
}
