// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: cloud/planton/apis/v1/integration/kubernetes/cost/rpc/service.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// cost allocation command controller
public protocol Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationCommandControllerClientInterface {

    /// create cost allocations
    @available(iOS 13, *)
    func `create`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocations, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocations>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationCommandControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationCommandControllerClient: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationCommandControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `create`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocations, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocations> {
        return await self.client.unary(path: "cloud.planton.apis.v1.integration.kubernetes.cost.rpc.CostAllocationCommandController/create", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let create = Connect.MethodSpec(name: "create", service: "cloud.planton.apis.v1.integration.kubernetes.cost.rpc.CostAllocationCommandController", type: .unary)
        }
    }
}

/// cost allocation query controller
public protocol Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationQueryControllerClientInterface {

    /// Get Cost allocation data by search filters
    /// This returns a paginated list of cost allocation data
    /// Filters include start and end date so company identifier product identifier environment identifier and posting environment identifier
    @available(iOS 13, *)
    func `listByCostAllocationFilters`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_ListByCostAllocationFiltersInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationList>

    /// get cost aggregate by timestamp for a given resource.
    /// example: Get month to date cost of a postgres cluster
    /// example: Get month to date cost of a kafka cluster
    @available(iOS 13, *)
    func `getCostAggregateByResourceID`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_GetCostAggregateInput, headers: Connect.Headers) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAggregate>
}

/// Concrete implementation of `Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationQueryControllerClientInterface`.
public final class Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationQueryControllerClient: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationQueryControllerClientInterface {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `listByCostAllocationFilters`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_ListByCostAllocationFiltersInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAllocationList> {
        return await self.client.unary(path: "cloud.planton.apis.v1.integration.kubernetes.cost.rpc.CostAllocationQueryController/listByCostAllocationFilters", request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `getCostAggregateByResourceID`(request: Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_GetCostAggregateInput, headers: Connect.Headers = [:]) async -> ResponseMessage<Cloud_Planton_Apis_V1_Integration_Kubernetes_Cost_Rpc_CostAggregate> {
        return await self.client.unary(path: "cloud.planton.apis.v1.integration.kubernetes.cost.rpc.CostAllocationQueryController/getCostAggregateByResourceId", request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let listByCostAllocationFilters = Connect.MethodSpec(name: "listByCostAllocationFilters", service: "cloud.planton.apis.v1.integration.kubernetes.cost.rpc.CostAllocationQueryController", type: .unary)
            public static let getCostAggregateByResourceID = Connect.MethodSpec(name: "getCostAggregateByResourceId", service: "cloud.planton.apis.v1.integration.kubernetes.cost.rpc.CostAllocationQueryController", type: .unary)
        }
    }
}
