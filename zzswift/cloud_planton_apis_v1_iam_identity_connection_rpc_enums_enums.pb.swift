// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: cloud/planton/apis/v1/iam/identity/connection/rpc/enums/enums.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_IdentityConnectionType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case saml // = 1
  case ldap // = 2
  case openid // = 3
  case adfs // = 4
  case oktaWorkforce // = 5
  case azureActiveDirectoryNative // = 6
  case pingFederate // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .saml
    case 2: self = .ldap
    case 3: self = .openid
    case 4: self = .adfs
    case 5: self = .oktaWorkforce
    case 6: self = .azureActiveDirectoryNative
    case 7: self = .pingFederate
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .saml: return 1
    case .ldap: return 2
    case .openid: return 3
    case .adfs: return 4
    case .oktaWorkforce: return 5
    case .azureActiveDirectoryNative: return 6
    case .pingFederate: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_IdentityConnectionType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_IdentityConnectionType] = [
    .unspecified,
    .saml,
    .ldap,
    .openid,
    .adfs,
    .oktaWorkforce,
    .azureActiveDirectoryNative,
    .pingFederate,
  ]
}

#endif  // swift(>=4.2)

public enum Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithm: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case rsaSha256 // = 1
  case rsaSha1 // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .rsaSha256
    case 2: self = .rsaSha1
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .rsaSha256: return 1
    case .rsaSha1: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithm: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithm] = [
    .unspecified,
    .rsaSha256,
    .rsaSha1,
  ]
}

#endif  // swift(>=4.2)

public enum Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithmDigest: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case sha256 // = 1
  case sha1 // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .sha256
    case 2: self = .sha1
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .sha256: return 1
    case .sha1: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithmDigest: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithmDigest] = [
    .unspecified,
    .sha256,
    .sha1,
  ]
}

#endif  // swift(>=4.2)

public enum Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlProtocolBinding: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case httpRedirect // = 1
  case httpPost // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .httpRedirect
    case 2: self = .httpPost
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .httpRedirect: return 1
    case .httpPost: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlProtocolBinding: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlProtocolBinding] = [
    .unspecified,
    .httpRedirect,
    .httpPost,
  ]
}

#endif  // swift(>=4.2)

public enum Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_MicrosoftIdentityApi: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case v1 // = 1
  case v2 // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .v1
    case 2: self = .v2
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .v1: return 1
    case .v2: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_MicrosoftIdentityApi: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_MicrosoftIdentityApi] = [
    .unspecified,
    .v1,
    .v2,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_IdentityConnectionType: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithm: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithmDigest: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlProtocolBinding: @unchecked Sendable {}
extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_MicrosoftIdentityApi: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_IdentityConnectionType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "IDENTITY_CONNECTION_TYPE_UNSPECIFIED"),
    1: .same(proto: "IDENTITY_CONNECTION_TYPE_SAML"),
    2: .same(proto: "IDENTITY_CONNECTION_TYPE_LDAP"),
    3: .same(proto: "IDENTITY_CONNECTION_TYPE_OPENID"),
    4: .same(proto: "IDENTITY_CONNECTION_TYPE_ADFS"),
    5: .same(proto: "IDENTITY_CONNECTION_TYPE_OKTA_WORKFORCE"),
    6: .same(proto: "IDENTITY_CONNECTION_TYPE_AZURE_ACTIVE_DIRECTORY_NATIVE"),
    7: .same(proto: "IDENTITY_CONNECTION_TYPE_PING_FEDERATE"),
  ]
}

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithm: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SAML_SIGN_REQUEST_ALGORITHM_UNSPECIFIED"),
    1: .same(proto: "SAML_SIGN_REQUEST_ALGORITHM_RSA_SHA256"),
    2: .same(proto: "SAML_SIGN_REQUEST_ALGORITHM_RSA_SHA1"),
  ]
}

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlSignRequestAlgorithmDigest: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SAML_SIGN_REQUEST_ALGORITHM_DIGEST_UNSPECIFIED"),
    1: .same(proto: "SAML_SIGN_REQUEST_ALGORITHM_DIGEST_SHA256"),
    2: .same(proto: "SAML_SIGN_REQUEST_ALGORITHM_DIGEST_SHA1"),
  ]
}

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_SamlProtocolBinding: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SAML_PROTOCOL_BINDING_UNSPECIFIED"),
    1: .same(proto: "SAML_PROTOCOL_BINDING_HTTP_REDIRECT"),
    2: .same(proto: "SAML_PROTOCOL_BINDING_HTTP_POST"),
  ]
}

extension Cloud_Planton_Apis_V1_Iam_Identity_Connection_Rpc_Enums_MicrosoftIdentityApi: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "MICROSOFT_IDENTITY_API_UNSPECIFIED"),
    1: .same(proto: "MICROSOFT_IDENTITY_API_V1"),
    2: .same(proto: "MICROSOFT_IDENTITY_API_V2"),
  ]
}
