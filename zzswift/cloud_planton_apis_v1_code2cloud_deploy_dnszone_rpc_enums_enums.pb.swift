// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: cloud/planton/apis/v1/code2cloud/deploy/dnszone/rpc/enums/enums.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// provider for dns-zone
public enum Cloud_Planton_Apis_V1_Code2cloud_Deploy_Dnszone_Rpc_Enums_DnsZoneProvider: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0

  ///https://cloud.google.com/dns
  case gcpCloudDns // = 1

  ///https://aws.amazon.com/route53/
  case awsRoute53 // = 2

  ///https://azure.microsoft.com/en-us/products/dns
  case azureDns // = 3

  ///https://docs.digitalocean.com/products/networking/dns/
  case digitalOceanDns // = 4
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .gcpCloudDns
    case 2: self = .awsRoute53
    case 3: self = .azureDns
    case 4: self = .digitalOceanDns
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .gcpCloudDns: return 1
    case .awsRoute53: return 2
    case .azureDns: return 3
    case .digitalOceanDns: return 4
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Dnszone_Rpc_Enums_DnsZoneProvider: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Code2cloud_Deploy_Dnszone_Rpc_Enums_DnsZoneProvider] = [
    .unspecified,
    .gcpCloudDns,
    .awsRoute53,
    .azureDns,
    .digitalOceanDns,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Dnszone_Rpc_Enums_DnsZoneProvider: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Cloud_Planton_Apis_V1_Code2cloud_Deploy_Dnszone_Rpc_Enums_DnsZoneProvider: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "DNS_ZONE_PROVIDER_UNSPECIFIED"),
    1: .same(proto: "GCP_CLOUD_DNS"),
    2: .same(proto: "AWS_ROUTE53"),
    3: .same(proto: "AZURE_DNS"),
    4: .same(proto: "DIGITAL_OCEAN_DNS"),
  ]
}
