// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: cloud/planton/apis/v1/commons/resource/enums/enums.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum Cloud_Planton_Apis_V1_Commons_Resource_Enums_ResourceType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unspecified // = 0
  case artifactStore // = 1
  case billing // = 2
  case cloudAccount // = 3
  case codeProject // = 4
  case codeServer // = 5
  case company // = 6
  case customEndpoint // = 7
  case dnsZone // = 8
  case environment // = 9
  case environmentSecret // = 10
  case environmentVariable // = 11
  case identityAccount // = 12
  case identityConnection // = 13
  case identityGroup // = 14
  case kafkaCluster // = 15
  case kubeCluster // = 16
  case microserviceInstance // = 17
  case platform // = 18
  case postgresCluster // = 19
  case product // = 20
  case redisCluster // = 21
  case solrCloud // = 22
  case standardEndpoint // = 23
  case storageBucket // = 24
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .artifactStore
    case 2: self = .billing
    case 3: self = .cloudAccount
    case 4: self = .codeProject
    case 5: self = .codeServer
    case 6: self = .company
    case 7: self = .customEndpoint
    case 8: self = .dnsZone
    case 9: self = .environment
    case 10: self = .environmentSecret
    case 11: self = .environmentVariable
    case 12: self = .identityAccount
    case 13: self = .identityConnection
    case 14: self = .identityGroup
    case 15: self = .kafkaCluster
    case 16: self = .kubeCluster
    case 17: self = .microserviceInstance
    case 18: self = .platform
    case 19: self = .postgresCluster
    case 20: self = .product
    case 21: self = .redisCluster
    case 22: self = .solrCloud
    case 23: self = .standardEndpoint
    case 24: self = .storageBucket
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .artifactStore: return 1
    case .billing: return 2
    case .cloudAccount: return 3
    case .codeProject: return 4
    case .codeServer: return 5
    case .company: return 6
    case .customEndpoint: return 7
    case .dnsZone: return 8
    case .environment: return 9
    case .environmentSecret: return 10
    case .environmentVariable: return 11
    case .identityAccount: return 12
    case .identityConnection: return 13
    case .identityGroup: return 14
    case .kafkaCluster: return 15
    case .kubeCluster: return 16
    case .microserviceInstance: return 17
    case .platform: return 18
    case .postgresCluster: return 19
    case .product: return 20
    case .redisCluster: return 21
    case .solrCloud: return 22
    case .standardEndpoint: return 23
    case .storageBucket: return 24
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Cloud_Planton_Apis_V1_Commons_Resource_Enums_ResourceType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Cloud_Planton_Apis_V1_Commons_Resource_Enums_ResourceType] = [
    .unspecified,
    .artifactStore,
    .billing,
    .cloudAccount,
    .codeProject,
    .codeServer,
    .company,
    .customEndpoint,
    .dnsZone,
    .environment,
    .environmentSecret,
    .environmentVariable,
    .identityAccount,
    .identityConnection,
    .identityGroup,
    .kafkaCluster,
    .kubeCluster,
    .microserviceInstance,
    .platform,
    .postgresCluster,
    .product,
    .redisCluster,
    .solrCloud,
    .standardEndpoint,
    .storageBucket,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Cloud_Planton_Apis_V1_Commons_Resource_Enums_ResourceType: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Cloud_Planton_Apis_V1_Commons_Resource_Enums_ResourceType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "RESOURCE_TYPE_UNSPECIFIED"),
    1: .same(proto: "artifact_store"),
    2: .same(proto: "billing"),
    3: .same(proto: "cloud_account"),
    4: .same(proto: "code_project"),
    5: .same(proto: "code_server"),
    6: .same(proto: "company"),
    7: .same(proto: "custom_endpoint"),
    8: .same(proto: "dns_zone"),
    9: .same(proto: "environment"),
    10: .same(proto: "environment_secret"),
    11: .same(proto: "environment_variable"),
    12: .same(proto: "identity_account"),
    13: .same(proto: "identity_connection"),
    14: .same(proto: "identity_group"),
    15: .same(proto: "kafka_cluster"),
    16: .same(proto: "kube_cluster"),
    17: .same(proto: "microservice_instance"),
    18: .same(proto: "platform"),
    19: .same(proto: "postgres_cluster"),
    20: .same(proto: "product"),
    21: .same(proto: "redis_cluster"),
    22: .same(proto: "solr_cloud"),
    23: .same(proto: "standard_endpoint"),
    24: .same(proto: "storage_bucket"),
  ]
}
