// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/code2cloud/v1/kubecluster/enums/kubernetesserviceportprotocol/kubernetes_service_port_protocol.proto

package kubernetesserviceportprotocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KubernetesServicePortProtocol defines the network protocol options for a Kubernetes Service's ports.
// This enum is used to specify the protocol for a service port in the Kubernetes API.
//
// Values:
//
//	unspecified - Default value if the protocol is not specified. This is typically interpreted
//	              as TCP by the Kubernetes system.
//	SCTP        - Represents the SCTP protocol for the port. SCTP is used for establishing
//	              association-oriented, reliable, sequenced transport of data with congestion control.
//	TCP         - Represents the TCP protocol for the port. TCP provides reliable, ordered,
//	              and error-checked delivery of a stream of octets between applications.
//	UDP         - Represents the UDP protocol for the port. UDP enables process-to-process
//	              communication and is suitable for purposes where error checking and correction
//	              is either not necessary or performed in the application.
type KubernetesServicePortProtocol int32

const (
	KubernetesServicePortProtocol_unspecified KubernetesServicePortProtocol = 0
	KubernetesServicePortProtocol_SCTP        KubernetesServicePortProtocol = 1
	KubernetesServicePortProtocol_TCP         KubernetesServicePortProtocol = 2
	KubernetesServicePortProtocol_UDP         KubernetesServicePortProtocol = 3
)

// Enum value maps for KubernetesServicePortProtocol.
var (
	KubernetesServicePortProtocol_name = map[int32]string{
		0: "unspecified",
		1: "SCTP",
		2: "TCP",
		3: "UDP",
	}
	KubernetesServicePortProtocol_value = map[string]int32{
		"unspecified": 0,
		"SCTP":        1,
		"TCP":         2,
		"UDP":         3,
	}
)

func (x KubernetesServicePortProtocol) Enum() *KubernetesServicePortProtocol {
	p := new(KubernetesServicePortProtocol)
	*p = x
	return p
}

func (x KubernetesServicePortProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesServicePortProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_enumTypes[0].Descriptor()
}

func (KubernetesServicePortProtocol) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_enumTypes[0]
}

func (x KubernetesServicePortProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesServicePortProtocol.Descriptor instead.
func (KubernetesServicePortProtocol) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescGZIP(), []int{0}
}

var File_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDesc = []byte{
	0x0a, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x50, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2a, 0x4c, 0x0a, 0x1d, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0f, 0x0a, 0x0b,
	0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x43, 0x54, 0x50, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x03, 0x42, 0xf3, 0x04, 0x0a, 0x5e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x22, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x80, 0x01, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xa2, 0x02, 0x08, 0x43, 0x50, 0x41, 0x43, 0x56, 0x4b, 0x45, 0x4b,
	0xaa, 0x02, 0x50, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x41, 0x70, 0x69, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x56, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0xca, 0x02, 0x50, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x5c, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xe2, 0x02, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x5c, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x57, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x43, 0x6f,
	0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x4b, 0x75,
	0x62, 0x65, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x3a, 0x45, 0x6e, 0x75, 0x6d, 0x73,
	0x3a, 0x3a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescData = file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDesc
)

func file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescData)
	})
	return file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDescData
}

var file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_goTypes = []interface{}{
	(KubernetesServicePortProtocol)(0), // 0: cloud.planton.apis.code2cloud.v1.kubecluster.enums.kubernetesserviceportprotocol.KubernetesServicePortProtocol
}
var file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_init()
}
func file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_init() {
	if File_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_depIdxs,
		EnumInfos:         file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_enumTypes,
	}.Build()
	File_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto = out.File
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_rawDesc = nil
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_goTypes = nil
	file_cloud_planton_apis_code2cloud_v1_kubecluster_enums_kubernetesserviceportprotocol_kubernetes_service_port_protocol_proto_depIdxs = nil
}
