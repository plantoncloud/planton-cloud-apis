// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: cloud/planton/apis/code2build/v1/cicd/service/query.proto

package service

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// CiCdQueryControllerClient is the client API for CiCdQueryController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CiCdQueryControllerClient interface {
}

type ciCdQueryControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewCiCdQueryControllerClient(cc grpc.ClientConnInterface) CiCdQueryControllerClient {
	return &ciCdQueryControllerClient{cc}
}

// CiCdQueryControllerServer is the server API for CiCdQueryController service.
// All implementations should embed UnimplementedCiCdQueryControllerServer
// for forward compatibility
type CiCdQueryControllerServer interface {
}

// UnimplementedCiCdQueryControllerServer should be embedded to have forward compatible implementations.
type UnimplementedCiCdQueryControllerServer struct {
}

// UnsafeCiCdQueryControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CiCdQueryControllerServer will
// result in compilation errors.
type UnsafeCiCdQueryControllerServer interface {
	mustEmbedUnimplementedCiCdQueryControllerServer()
}

func RegisterCiCdQueryControllerServer(s grpc.ServiceRegistrar, srv CiCdQueryControllerServer) {
	s.RegisterService(&CiCdQueryController_ServiceDesc, srv)
}

// CiCdQueryController_ServiceDesc is the grpc.ServiceDesc for CiCdQueryController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CiCdQueryController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.planton.apis.code2build.v1.cicd.service.CiCdQueryController",
	HandlerType: (*CiCdQueryControllerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "cloud/planton/apis/code2build/v1/cicd/service/query.proto",
}
