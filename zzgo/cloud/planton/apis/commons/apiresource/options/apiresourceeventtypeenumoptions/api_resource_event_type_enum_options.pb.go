// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto

package apiresourceeventtypeenumoptions

import (
	stackjoboperationtype "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/iac/v1/stackjob/enums/stackjoboperationtype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90000,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_fga_required",
		Tag:           "varint,90000,opt,name=is_fga_required",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90001,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_persist_required",
		Tag:           "varint,90001,opt,name=is_persist_required",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90002,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_search_indexing_required",
		Tag:           "varint,90002,opt,name=is_search_indexing_required",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90003,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_job_required",
		Tag:           "varint,90003,opt,name=is_stack_job_required",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*stackjoboperationtype.StackJobOperationType)(nil),
		Field:         90004,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.stack_job_operation_type",
		Tag:           "varint,90004,opt,name=stack_job_operation_type,enum=cloud.planton.apis.iac.v1.stackjob.enums.stackjoboperationtype.StackJobOperationType",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90005,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_create_stack_required",
		Tag:           "varint,90005,opt,name=is_create_stack_required",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90006,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_only_persist_required",
		Tag:           "varint,90006,opt,name=is_status_only_persist_required",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         90007,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name",
		Tag:           "bytes,90007,opt,name=display_name",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90008,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event",
		Tag:           "varint,90008,opt,name=is_spec_event",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90009,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_event",
		Tag:           "varint,90009,opt,name=is_status_event",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90010,
		Name:          "cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event",
		Tag:           "varint,90010,opt,name=is_stack_event",
		Filename:      "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional bool is_fga_required = 90000;
	E_IsFgaRequired = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[0]
	// optional bool is_persist_required = 90001;
	E_IsPersistRequired = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[1]
	// optional bool is_search_indexing_required = 90002;
	E_IsSearchIndexingRequired = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[2]
	// optional bool is_stack_job_required = 90003;
	E_IsStackJobRequired = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[3]
	// optional cloud.planton.apis.iac.v1.stackjob.enums.stackjoboperationtype.StackJobOperationType stack_job_operation_type = 90004;
	E_StackJobOperationType = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[4]
	// optional bool is_create_stack_required = 90005;
	E_IsCreateStackRequired = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[5]
	// optional bool is_status_only_persist_required = 90006;
	E_IsStatusOnlyPersistRequired = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[6]
	// optional string display_name = 90007;
	E_DisplayName = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[7]
	// optional bool is_spec_event = 90008;
	E_IsSpecEvent = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[8]
	// optional bool is_status_event = 90009;
	E_IsStatusEvent = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[9]
	// optional bool is_stack_event = 90010;
	E_IsStackEvent = &file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes[10]
)

var File_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_rawDesc = []byte{
	0x0a, 0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x65, 0x6e, 0x75, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x4e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65,
	0x65, 0x6e, 0x75, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x5d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f,
	0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x4e, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x66, 0x67, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x90, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x67,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x56, 0x0a, 0x13,
	0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x91, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x3a, 0x65, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x92, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x69, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x59, 0x0a, 0x15, 0x69,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x93, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x69, 0x73, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x3a, 0xb6, 0x01, 0x0a, 0x18, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x94, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x6a, 0x6f, 0x62, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a,
	0x6f, 0x62, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x3a,
	0x5f, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x95,
	0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x3a, 0x6c, 0x0a, 0x1f, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x96, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b,
	0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x49,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x97, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x4a, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x98, 0xbf,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x70, 0x65, 0x63, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x3a, 0x4e, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x99, 0xbf, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x3a, 0x4c, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9a, 0xbf, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0xe6, 0x04, 0x0a, 0x5c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75,
	0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x65, 0x6e, 0x75, 0x6d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x24, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x7e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x65, 0x6e, 0x75, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xa2, 0x02, 0x07, 0x43,
	0x50, 0x41, 0x43, 0x41, 0x4f, 0x41, 0xaa, 0x02, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x65, 0x6e, 0x75, 0x6d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xca, 0x02, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x65, 0x6e, 0x75,
	0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xe2, 0x02, 0x5a, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x65, 0x6e,
	0x75, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x54, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x3a, 0x3a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x65, 0x6e, 0x75, 0x6d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_goTypes = []interface{}{
	(*descriptorpb.EnumValueOptions)(nil),            // 0: google.protobuf.EnumValueOptions
	(stackjoboperationtype.StackJobOperationType)(0), // 1: cloud.planton.apis.iac.v1.stackjob.enums.stackjoboperationtype.StackJobOperationType
}
var file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_depIdxs = []int32{
	0,  // 0: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_fga_required:extendee -> google.protobuf.EnumValueOptions
	0,  // 1: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_persist_required:extendee -> google.protobuf.EnumValueOptions
	0,  // 2: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_search_indexing_required:extendee -> google.protobuf.EnumValueOptions
	0,  // 3: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_job_required:extendee -> google.protobuf.EnumValueOptions
	0,  // 4: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.stack_job_operation_type:extendee -> google.protobuf.EnumValueOptions
	0,  // 5: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_create_stack_required:extendee -> google.protobuf.EnumValueOptions
	0,  // 6: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_only_persist_required:extendee -> google.protobuf.EnumValueOptions
	0,  // 7: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name:extendee -> google.protobuf.EnumValueOptions
	0,  // 8: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event:extendee -> google.protobuf.EnumValueOptions
	0,  // 9: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_event:extendee -> google.protobuf.EnumValueOptions
	0,  // 10: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event:extendee -> google.protobuf.EnumValueOptions
	1,  // 11: cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.stack_job_operation_type:type_name -> cloud.planton.apis.iac.v1.stackjob.enums.stackjoboperationtype.StackJobOperationType
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	11, // [11:12] is the sub-list for extension type_name
	0,  // [0:11] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() {
	file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_init()
}
func file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_init() {
	if File_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 11,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_depIdxs,
		ExtensionInfos:    file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_extTypes,
	}.Build()
	File_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto = out.File
	file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_rawDesc = nil
	file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_goTypes = nil
	file_cloud_planton_apis_commons_apiresource_options_apiresourceeventtypeenumoptions_api_resource_event_type_enum_options_proto_depIdxs = nil
}
