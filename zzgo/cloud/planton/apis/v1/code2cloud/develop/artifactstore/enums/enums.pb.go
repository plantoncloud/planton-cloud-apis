// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/v1/code2cloud/develop/artifactstore/enums/enums.proto

package enums

import (
	_ "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/v1/commons/resource/enums/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtifactStoreEventType int32

const (
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_UNSPECIFIED                 ArtifactStoreEventType = 0
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STATE_CREATED               ArtifactStoreEventType = 1
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STATE_UPDATED               ArtifactStoreEventType = 2
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STATE_DELETED               ArtifactStoreEventType = 3
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STATE_RESTORED              ArtifactStoreEventType = 4
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_PROGRESS_UPDATED  ArtifactStoreEventType = 5
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_PREVIEW_REQUESTED ArtifactStoreEventType = 6
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_APPLY_REQUESTED   ArtifactStoreEventType = 7
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_APPLY_COMPLETED   ArtifactStoreEventType = 8
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_DESTROY_REQUESTED ArtifactStoreEventType = 9
	ArtifactStoreEventType_ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_DESTROY_COMPLETED ArtifactStoreEventType = 10
)

// Enum value maps for ArtifactStoreEventType.
var (
	ArtifactStoreEventType_name = map[int32]string{
		0:  "ARTIFACT_STORE_EVENT_TYPE_UNSPECIFIED",
		1:  "ARTIFACT_STORE_EVENT_TYPE_STATE_CREATED",
		2:  "ARTIFACT_STORE_EVENT_TYPE_STATE_UPDATED",
		3:  "ARTIFACT_STORE_EVENT_TYPE_STATE_DELETED",
		4:  "ARTIFACT_STORE_EVENT_TYPE_STATE_RESTORED",
		5:  "ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_PROGRESS_UPDATED",
		6:  "ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_PREVIEW_REQUESTED",
		7:  "ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_APPLY_REQUESTED",
		8:  "ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_APPLY_COMPLETED",
		9:  "ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_DESTROY_REQUESTED",
		10: "ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_DESTROY_COMPLETED",
	}
	ArtifactStoreEventType_value = map[string]int32{
		"ARTIFACT_STORE_EVENT_TYPE_UNSPECIFIED":                 0,
		"ARTIFACT_STORE_EVENT_TYPE_STATE_CREATED":               1,
		"ARTIFACT_STORE_EVENT_TYPE_STATE_UPDATED":               2,
		"ARTIFACT_STORE_EVENT_TYPE_STATE_DELETED":               3,
		"ARTIFACT_STORE_EVENT_TYPE_STATE_RESTORED":              4,
		"ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_PROGRESS_UPDATED":  5,
		"ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_PREVIEW_REQUESTED": 6,
		"ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_APPLY_REQUESTED":   7,
		"ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_APPLY_COMPLETED":   8,
		"ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_DESTROY_REQUESTED": 9,
		"ARTIFACT_STORE_EVENT_TYPE_STACK_JOB_DESTROY_COMPLETED": 10,
	}
)

func (x ArtifactStoreEventType) Enum() *ArtifactStoreEventType {
	p := new(ArtifactStoreEventType)
	*p = x
	return p
}

func (x ArtifactStoreEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactStoreEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[0].Descriptor()
}

func (ArtifactStoreEventType) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[0]
}

func (x ArtifactStoreEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactStoreEventType.Descriptor instead.
func (ArtifactStoreEventType) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{0}
}

type ArtifactStoreMavenRepoProvider int32

const (
	ArtifactStoreMavenRepoProvider_ARTIFACT_STORE_MAVEN_REPO_PROVIDER_UNSPECIFIED ArtifactStoreMavenRepoProvider = 0
	// https://cloud.google.com/artifact-registry
	ArtifactStoreMavenRepoProvider_ARTIFACT_STORE_MAVEN_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY ArtifactStoreMavenRepoProvider = 1
	// https://aws.amazon.com/codeartifact/
	ArtifactStoreMavenRepoProvider_ARTIFACT_STORE_MAVEN_REPO_PROVIDER_AWS_CODE_ARTIFACT ArtifactStoreMavenRepoProvider = 2
	// https://azure.microsoft.com/en-us/products/devops/artifacts
	ArtifactStoreMavenRepoProvider_ARTIFACT_STORE_MAVEN_REPO_PROVIDER_AZURE_ARTIFACTS ArtifactStoreMavenRepoProvider = 3
	// https://jfrog.com/artifactory/
	ArtifactStoreMavenRepoProvider_ARTIFACT_STORE_MAVEN_REPO_PROVIDER_JFROG_ARTIFACTORY ArtifactStoreMavenRepoProvider = 4
)

// Enum value maps for ArtifactStoreMavenRepoProvider.
var (
	ArtifactStoreMavenRepoProvider_name = map[int32]string{
		0: "ARTIFACT_STORE_MAVEN_REPO_PROVIDER_UNSPECIFIED",
		1: "ARTIFACT_STORE_MAVEN_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY",
		2: "ARTIFACT_STORE_MAVEN_REPO_PROVIDER_AWS_CODE_ARTIFACT",
		3: "ARTIFACT_STORE_MAVEN_REPO_PROVIDER_AZURE_ARTIFACTS",
		4: "ARTIFACT_STORE_MAVEN_REPO_PROVIDER_JFROG_ARTIFACTORY",
	}
	ArtifactStoreMavenRepoProvider_value = map[string]int32{
		"ARTIFACT_STORE_MAVEN_REPO_PROVIDER_UNSPECIFIED":           0,
		"ARTIFACT_STORE_MAVEN_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY": 1,
		"ARTIFACT_STORE_MAVEN_REPO_PROVIDER_AWS_CODE_ARTIFACT":     2,
		"ARTIFACT_STORE_MAVEN_REPO_PROVIDER_AZURE_ARTIFACTS":       3,
		"ARTIFACT_STORE_MAVEN_REPO_PROVIDER_JFROG_ARTIFACTORY":     4,
	}
)

func (x ArtifactStoreMavenRepoProvider) Enum() *ArtifactStoreMavenRepoProvider {
	p := new(ArtifactStoreMavenRepoProvider)
	*p = x
	return p
}

func (x ArtifactStoreMavenRepoProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactStoreMavenRepoProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[1].Descriptor()
}

func (ArtifactStoreMavenRepoProvider) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[1]
}

func (x ArtifactStoreMavenRepoProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactStoreMavenRepoProvider.Descriptor instead.
func (ArtifactStoreMavenRepoProvider) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{1}
}

type ArtifactStoreNpmRepoProvider int32

const (
	ArtifactStoreNpmRepoProvider_ARTIFACT_STORE_NPM_REPO_PROVIDER_UNSPECIFIED ArtifactStoreNpmRepoProvider = 0
	// https://cloud.google.com/artifact-registry
	ArtifactStoreNpmRepoProvider_ARTIFACT_STORE_NPM_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY ArtifactStoreNpmRepoProvider = 1
	// https://aws.amazon.com/codeartifact/
	ArtifactStoreNpmRepoProvider_ARTIFACT_STORE_NPM_REPO_PROVIDER_AWS_CODE_ARTIFACT ArtifactStoreNpmRepoProvider = 2
	// https://azure.microsoft.com/en-us/products/devops/artifacts
	ArtifactStoreNpmRepoProvider_ARTIFACT_STORE_NPM_REPO_PROVIDER_AZURE_ARTIFACTS ArtifactStoreNpmRepoProvider = 3
	// https://jfrog.com/artifactory/
	ArtifactStoreNpmRepoProvider_ARTIFACT_STORE_NPM_REPO_PROVIDER_JFROG_ARTIFACTORY ArtifactStoreNpmRepoProvider = 4
)

// Enum value maps for ArtifactStoreNpmRepoProvider.
var (
	ArtifactStoreNpmRepoProvider_name = map[int32]string{
		0: "ARTIFACT_STORE_NPM_REPO_PROVIDER_UNSPECIFIED",
		1: "ARTIFACT_STORE_NPM_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY",
		2: "ARTIFACT_STORE_NPM_REPO_PROVIDER_AWS_CODE_ARTIFACT",
		3: "ARTIFACT_STORE_NPM_REPO_PROVIDER_AZURE_ARTIFACTS",
		4: "ARTIFACT_STORE_NPM_REPO_PROVIDER_JFROG_ARTIFACTORY",
	}
	ArtifactStoreNpmRepoProvider_value = map[string]int32{
		"ARTIFACT_STORE_NPM_REPO_PROVIDER_UNSPECIFIED":           0,
		"ARTIFACT_STORE_NPM_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY": 1,
		"ARTIFACT_STORE_NPM_REPO_PROVIDER_AWS_CODE_ARTIFACT":     2,
		"ARTIFACT_STORE_NPM_REPO_PROVIDER_AZURE_ARTIFACTS":       3,
		"ARTIFACT_STORE_NPM_REPO_PROVIDER_JFROG_ARTIFACTORY":     4,
	}
)

func (x ArtifactStoreNpmRepoProvider) Enum() *ArtifactStoreNpmRepoProvider {
	p := new(ArtifactStoreNpmRepoProvider)
	*p = x
	return p
}

func (x ArtifactStoreNpmRepoProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactStoreNpmRepoProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[2].Descriptor()
}

func (ArtifactStoreNpmRepoProvider) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[2]
}

func (x ArtifactStoreNpmRepoProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactStoreNpmRepoProvider.Descriptor instead.
func (ArtifactStoreNpmRepoProvider) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{2}
}

type ArtifactStoreDockerRepoProvider int32

const (
	ArtifactStoreDockerRepoProvider_ARTIFACT_STORE_DOCKER_REPO_PROVIDER_UNSPECIFIED ArtifactStoreDockerRepoProvider = 0
	// https://cloud.google.com/artifact-registry
	ArtifactStoreDockerRepoProvider_ARTIFACT_STORE_DOCKER_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY ArtifactStoreDockerRepoProvider = 1
	// https://aws.amazon.com/codeartifact/
	ArtifactStoreDockerRepoProvider_ARTIFACT_STORE_DOCKER_REPO_PROVIDER_AWS_CODE_ARTIFACT ArtifactStoreDockerRepoProvider = 2
	// https://azure.microsoft.com/en-us/products/devops/artifacts
	ArtifactStoreDockerRepoProvider_ARTIFACT_STORE_DOCKER_REPO_PROVIDER_AZURE_ARTIFACTS ArtifactStoreDockerRepoProvider = 3
	// https://jfrog.com/artifactory/
	ArtifactStoreDockerRepoProvider_ARTIFACT_STORE_DOCKER_REPO_PROVIDER_JFROG_ARTIFACTORY ArtifactStoreDockerRepoProvider = 4
)

// Enum value maps for ArtifactStoreDockerRepoProvider.
var (
	ArtifactStoreDockerRepoProvider_name = map[int32]string{
		0: "ARTIFACT_STORE_DOCKER_REPO_PROVIDER_UNSPECIFIED",
		1: "ARTIFACT_STORE_DOCKER_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY",
		2: "ARTIFACT_STORE_DOCKER_REPO_PROVIDER_AWS_CODE_ARTIFACT",
		3: "ARTIFACT_STORE_DOCKER_REPO_PROVIDER_AZURE_ARTIFACTS",
		4: "ARTIFACT_STORE_DOCKER_REPO_PROVIDER_JFROG_ARTIFACTORY",
	}
	ArtifactStoreDockerRepoProvider_value = map[string]int32{
		"ARTIFACT_STORE_DOCKER_REPO_PROVIDER_UNSPECIFIED":           0,
		"ARTIFACT_STORE_DOCKER_REPO_PROVIDER_GCP_ARTIFACT_REGISTRY": 1,
		"ARTIFACT_STORE_DOCKER_REPO_PROVIDER_AWS_CODE_ARTIFACT":     2,
		"ARTIFACT_STORE_DOCKER_REPO_PROVIDER_AZURE_ARTIFACTS":       3,
		"ARTIFACT_STORE_DOCKER_REPO_PROVIDER_JFROG_ARTIFACTORY":     4,
	}
)

func (x ArtifactStoreDockerRepoProvider) Enum() *ArtifactStoreDockerRepoProvider {
	p := new(ArtifactStoreDockerRepoProvider)
	*p = x
	return p
}

func (x ArtifactStoreDockerRepoProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactStoreDockerRepoProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[3].Descriptor()
}

func (ArtifactStoreDockerRepoProvider) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[3]
}

func (x ArtifactStoreDockerRepoProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactStoreDockerRepoProvider.Descriptor instead.
func (ArtifactStoreDockerRepoProvider) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{3}
}

type ArtifactStoreGolangRepoProvider int32

const (
	ArtifactStoreGolangRepoProvider_ARTIFACT_STORE_GOLANG_REPO_PROVIDER_UNSPECIFIED ArtifactStoreGolangRepoProvider = 0
	// golang dependencies managed in private git repositories
	ArtifactStoreGolangRepoProvider_ARTIFACT_STORE_GOLANG_REPO_PROVIDER_GIT ArtifactStoreGolangRepoProvider = 1
)

// Enum value maps for ArtifactStoreGolangRepoProvider.
var (
	ArtifactStoreGolangRepoProvider_name = map[int32]string{
		0: "ARTIFACT_STORE_GOLANG_REPO_PROVIDER_UNSPECIFIED",
		1: "ARTIFACT_STORE_GOLANG_REPO_PROVIDER_GIT",
	}
	ArtifactStoreGolangRepoProvider_value = map[string]int32{
		"ARTIFACT_STORE_GOLANG_REPO_PROVIDER_UNSPECIFIED": 0,
		"ARTIFACT_STORE_GOLANG_REPO_PROVIDER_GIT":         1,
	}
)

func (x ArtifactStoreGolangRepoProvider) Enum() *ArtifactStoreGolangRepoProvider {
	p := new(ArtifactStoreGolangRepoProvider)
	*p = x
	return p
}

func (x ArtifactStoreGolangRepoProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactStoreGolangRepoProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[4].Descriptor()
}

func (ArtifactStoreGolangRepoProvider) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[4]
}

func (x ArtifactStoreGolangRepoProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactStoreGolangRepoProvider.Descriptor instead.
func (ArtifactStoreGolangRepoProvider) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{4}
}

// the recommended best practice to use uppercase entry names and prefix the entry with enum name have been intentionally ignored to as the values of the entries are intended to be used while creating repositories in google artifact registry.
type GcpArtifactRegistryRepoType int32

const (
	GcpArtifactRegistryRepoType_GCP_ARTIFACT_REGISTRY_REPO_TYPE_UNSPECIFIED GcpArtifactRegistryRepoType = 0
	GcpArtifactRegistryRepoType_DOCKER                                      GcpArtifactRegistryRepoType = 1
	GcpArtifactRegistryRepoType_NPM                                         GcpArtifactRegistryRepoType = 2
	GcpArtifactRegistryRepoType_MAVEN                                       GcpArtifactRegistryRepoType = 3
	GcpArtifactRegistryRepoType_PYTHON                                      GcpArtifactRegistryRepoType = 4
	GcpArtifactRegistryRepoType_GO                                          GcpArtifactRegistryRepoType = 5
)

// Enum value maps for GcpArtifactRegistryRepoType.
var (
	GcpArtifactRegistryRepoType_name = map[int32]string{
		0: "GCP_ARTIFACT_REGISTRY_REPO_TYPE_UNSPECIFIED",
		1: "DOCKER",
		2: "NPM",
		3: "MAVEN",
		4: "PYTHON",
		5: "GO",
	}
	GcpArtifactRegistryRepoType_value = map[string]int32{
		"GCP_ARTIFACT_REGISTRY_REPO_TYPE_UNSPECIFIED": 0,
		"DOCKER": 1,
		"NPM":    2,
		"MAVEN":  3,
		"PYTHON": 4,
		"GO":     5,
	}
)

func (x GcpArtifactRegistryRepoType) Enum() *GcpArtifactRegistryRepoType {
	p := new(GcpArtifactRegistryRepoType)
	*p = x
	return p
}

func (x GcpArtifactRegistryRepoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GcpArtifactRegistryRepoType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[5].Descriptor()
}

func (GcpArtifactRegistryRepoType) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[5]
}

func (x GcpArtifactRegistryRepoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GcpArtifactRegistryRepoType.Descriptor instead.
func (GcpArtifactRegistryRepoType) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{5}
}

type ArtifactStoreRepoIntegrationMode int32

const (
	ArtifactStoreRepoIntegrationMode_ARTIFACT_STORE_REPO_INTEGRATION_MODE_UNSPECIFIED ArtifactStoreRepoIntegrationMode = 0
	ArtifactStoreRepoIntegrationMode_ARTIFACT_STORE_REPO_INTEGRATION_MODE_CREATE      ArtifactStoreRepoIntegrationMode = 1
	ArtifactStoreRepoIntegrationMode_ARTIFACT_STORE_REPO_INTEGRATION_MODE_CONNECT     ArtifactStoreRepoIntegrationMode = 2
)

// Enum value maps for ArtifactStoreRepoIntegrationMode.
var (
	ArtifactStoreRepoIntegrationMode_name = map[int32]string{
		0: "ARTIFACT_STORE_REPO_INTEGRATION_MODE_UNSPECIFIED",
		1: "ARTIFACT_STORE_REPO_INTEGRATION_MODE_CREATE",
		2: "ARTIFACT_STORE_REPO_INTEGRATION_MODE_CONNECT",
	}
	ArtifactStoreRepoIntegrationMode_value = map[string]int32{
		"ARTIFACT_STORE_REPO_INTEGRATION_MODE_UNSPECIFIED": 0,
		"ARTIFACT_STORE_REPO_INTEGRATION_MODE_CREATE":      1,
		"ARTIFACT_STORE_REPO_INTEGRATION_MODE_CONNECT":     2,
	}
)

func (x ArtifactStoreRepoIntegrationMode) Enum() *ArtifactStoreRepoIntegrationMode {
	p := new(ArtifactStoreRepoIntegrationMode)
	*p = x
	return p
}

func (x ArtifactStoreRepoIntegrationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactStoreRepoIntegrationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[6].Descriptor()
}

func (ArtifactStoreRepoIntegrationMode) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes[6]
}

func (x ArtifactStoreRepoIntegrationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactStoreRepoIntegrationMode.Descriptor instead.
func (ArtifactStoreRepoIntegrationMode) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP(), []int{6}
}

var File_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDesc = []byte{
	0x0a, 0x48, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x1a, 0x5b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xd9, 0x05, 0x0a, 0x16, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x29, 0x0a, 0x25, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x41, 0x0a, 0x27, 0x41,
	0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x14, 0x80, 0xf9, 0x2b, 0x01, 0x88, 0xf9,
	0x2b, 0x01, 0x90, 0xf9, 0x2b, 0x01, 0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b, 0x03, 0x12, 0x3d,
	0x0a, 0x27, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x10, 0x88, 0xf9, 0x2b,
	0x01, 0x90, 0xf9, 0x2b, 0x01, 0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b, 0x03, 0x12, 0x3d, 0x0a,
	0x27, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x10, 0x88, 0xf9, 0x2b, 0x01,
	0x90, 0xf9, 0x2b, 0x01, 0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b, 0x04, 0x12, 0x3e, 0x0a, 0x28,
	0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x10, 0x88, 0xf9, 0x2b, 0x01,
	0x90, 0xf9, 0x2b, 0x01, 0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b, 0x03, 0x12, 0x3e, 0x0a, 0x34,
	0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f,
	0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x05, 0x1a, 0x04, 0x88, 0xf9, 0x2b, 0x01, 0x12, 0x43, 0x0a, 0x35,
	0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f,
	0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x06, 0x1a, 0x08, 0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b,
	0x02, 0x12, 0x45, 0x0a, 0x33, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x07, 0x1a, 0x0c, 0x88, 0xf9, 0x2b, 0x01,
	0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b, 0x03, 0x12, 0x3d, 0x0a, 0x33, 0x41, 0x52, 0x54, 0x49,
	0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4a, 0x4f, 0x42, 0x5f,
	0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10,
	0x08, 0x1a, 0x04, 0x88, 0xf9, 0x2b, 0x01, 0x12, 0x47, 0x0a, 0x35, 0x41, 0x52, 0x54, 0x49, 0x46,
	0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x44,
	0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44,
	0x10, 0x09, 0x1a, 0x0c, 0x88, 0xf9, 0x2b, 0x01, 0x98, 0xf9, 0x2b, 0x01, 0xa0, 0xf9, 0x2b, 0x04,
	0x12, 0x3f, 0x0a, 0x35, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x43, 0x4b, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x1a, 0x04, 0x88, 0xf9, 0x2b,
	0x01, 0x2a, 0xbe, 0x02, 0x0a, 0x1e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4d, 0x61, 0x76, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x2e, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3c, 0x0a, 0x38, 0x41, 0x52, 0x54, 0x49,
	0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x56, 0x45, 0x4e,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47,
	0x43, 0x50, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x59, 0x10, 0x01, 0x12, 0x38, 0x0a, 0x34, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41,
	0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x57, 0x53,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x10, 0x02,
	0x12, 0x36, 0x0a, 0x32, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x4d, 0x41, 0x56, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x52, 0x54,
	0x49, 0x46, 0x41, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12, 0x38, 0x0a, 0x34, 0x41, 0x52, 0x54, 0x49,
	0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4d, 0x41, 0x56, 0x45, 0x4e,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4a,
	0x46, 0x52, 0x4f, 0x47, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x59,
	0x10, 0x04, 0x2a, 0xb2, 0x02, 0x0a, 0x1c, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x4e, 0x70, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x2c, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x50, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x3a, 0x0a, 0x36, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43,
	0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x50, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x52,
	0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x10,
	0x01, 0x12, 0x36, 0x0a, 0x32, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x50, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x10, 0x02, 0x12, 0x34, 0x0a, 0x30, 0x41, 0x52, 0x54,
	0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x50, 0x4d, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x5a,
	0x55, 0x52, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12,
	0x36, 0x0a, 0x32, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x45, 0x5f, 0x4e, 0x50, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x44, 0x45, 0x52, 0x5f, 0x4a, 0x46, 0x52, 0x4f, 0x47, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41,
	0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x04, 0x2a, 0xc4, 0x02, 0x0a, 0x1f, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x2f, 0x41,
	0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x44, 0x4f,
	0x43, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x3d, 0x0a, 0x39, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x52, 0x54, 0x49,
	0x46, 0x41, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x10, 0x01, 0x12,
	0x39, 0x0a, 0x35, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x45, 0x5f, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x57, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x10, 0x02, 0x12, 0x37, 0x0a, 0x33, 0x41, 0x52,
	0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x44, 0x4f, 0x43,
	0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54,
	0x53, 0x10, 0x03, 0x12, 0x39, 0x0a, 0x35, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4a, 0x46, 0x52, 0x4f, 0x47,
	0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x04, 0x2a, 0x83,
	0x01, 0x0a, 0x1f, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x47, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x2f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53,
	0x54, 0x4f, 0x52, 0x45, 0x5f, 0x47, 0x4f, 0x4c, 0x41, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2b, 0x0a, 0x27, 0x41, 0x52, 0x54, 0x49, 0x46,
	0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x47, 0x4f, 0x4c, 0x41, 0x4e, 0x47,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47,
	0x49, 0x54, 0x10, 0x01, 0x2a, 0x82, 0x01, 0x0a, 0x1b, 0x47, 0x63, 0x70, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x2b, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x52, 0x54, 0x49,
	0x46, 0x41, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x50, 0x4d, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41,
	0x56, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4f, 0x10, 0x05, 0x2a, 0xbb, 0x01, 0x0a, 0x20, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34,
	0x0a, 0x30, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x30, 0x0a, 0x2c, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43,
	0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x02, 0x42, 0xe2, 0x03, 0x0a, 0x4a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x42, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x6c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x2f, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0xa2, 0x02, 0x08, 0x43, 0x50, 0x41, 0x56, 0x43, 0x44, 0x41, 0x45, 0xaa, 0x02, 0x3c,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x70,
	0x69, 0x73, 0x2e, 0x56, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0xca, 0x02, 0x3c, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69,
	0x73, 0x5c, 0x56, 0x31, 0x5c, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x5c, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0xe2, 0x02, 0x48, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x5c, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x3a, 0x3a, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x3a, 0x3a, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescData = file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDesc
)

func file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescData)
	})
	return file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDescData
}

var file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_goTypes = []interface{}{
	(ArtifactStoreEventType)(0),           // 0: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.ArtifactStoreEventType
	(ArtifactStoreMavenRepoProvider)(0),   // 1: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.ArtifactStoreMavenRepoProvider
	(ArtifactStoreNpmRepoProvider)(0),     // 2: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.ArtifactStoreNpmRepoProvider
	(ArtifactStoreDockerRepoProvider)(0),  // 3: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.ArtifactStoreDockerRepoProvider
	(ArtifactStoreGolangRepoProvider)(0),  // 4: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.ArtifactStoreGolangRepoProvider
	(GcpArtifactRegistryRepoType)(0),      // 5: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.GcpArtifactRegistryRepoType
	(ArtifactStoreRepoIntegrationMode)(0), // 6: cloud.planton.apis.v1.code2cloud.develop.artifactstore.enums.ArtifactStoreRepoIntegrationMode
}
var file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_init() }
func file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_init() {
	if File_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_depIdxs,
		EnumInfos:         file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_enumTypes,
	}.Build()
	File_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto = out.File
	file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_rawDesc = nil
	file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_goTypes = nil
	file_cloud_planton_apis_v1_code2cloud_develop_artifactstore_enums_enums_proto_depIdxs = nil
}
