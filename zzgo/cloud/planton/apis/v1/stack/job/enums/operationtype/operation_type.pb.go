// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/iac/v1/stackjob/enums/operationtype/operation_type.proto

package operationtype

import (
	_ "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/iac/v1/stackjob/enums/operationtype/stackjoboperationtypeoptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StackJobOperationType int32

const (
	StackJobOperationType_STACK_JOB_OPERATION_TYPE_UNSPECIFIED StackJobOperationType = 0
	StackJobOperationType_refresh                              StackJobOperationType = 1
	StackJobOperationType_apply_preview                        StackJobOperationType = 2
	StackJobOperationType_apply                                StackJobOperationType = 3
	StackJobOperationType_destroy_preview                      StackJobOperationType = 4
	StackJobOperationType_destroy                              StackJobOperationType = 5
)

// Enum value maps for StackJobOperationType.
var (
	StackJobOperationType_name = map[int32]string{
		0: "STACK_JOB_OPERATION_TYPE_UNSPECIFIED",
		1: "refresh",
		2: "apply_preview",
		3: "apply",
		4: "destroy_preview",
		5: "destroy",
	}
	StackJobOperationType_value = map[string]int32{
		"STACK_JOB_OPERATION_TYPE_UNSPECIFIED": 0,
		"refresh":                              1,
		"apply_preview":                        2,
		"apply":                                3,
		"destroy_preview":                      4,
		"destroy":                              5,
	}
)

func (x StackJobOperationType) Enum() *StackJobOperationType {
	p := new(StackJobOperationType)
	*p = x
	return p
}

func (x StackJobOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StackJobOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_enumTypes[0].Descriptor()
}

func (StackJobOperationType) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_enumTypes[0]
}

func (x StackJobOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StackJobOperationType.Descriptor instead.
func (StackJobOperationType) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescGZIP(), []int{0}
}

var File_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDesc = []byte{
	0x0a, 0x48, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x6a, 0x6f,
	0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x33, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x1a,
	0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x6a, 0x6f, 0x62,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xc4, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4a, 0x4f, 0x42, 0x5f,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x07,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x01, 0x1a, 0x04, 0x90, 0xb8, 0x18, 0x01, 0x12,
	0x1b, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x10, 0x02, 0x1a, 0x08, 0x90, 0xb8, 0x18, 0x01, 0x98, 0xb8, 0x18, 0x01, 0x12, 0x17, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x03, 0x1a, 0x0c, 0x90, 0xb8, 0x18, 0x01, 0x98, 0xb8, 0x18,
	0x01, 0xa8, 0xb8, 0x18, 0x01, 0x12, 0x1d, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x10, 0x04, 0x1a, 0x08, 0x90, 0xb8, 0x18, 0x01,
	0xa0, 0xb8, 0x18, 0x01, 0x12, 0x19, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x10,
	0x05, 0x1a, 0x0c, 0x90, 0xb8, 0x18, 0x01, 0xa0, 0xb8, 0x18, 0x01, 0xb0, 0xb8, 0x18, 0x01, 0x42,
	0xb4, 0x03, 0x0a, 0x41, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65,
	0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x6a, 0x6f,
	0x62, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x42, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x63, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65,
	0xa2, 0x02, 0x08, 0x43, 0x50, 0x41, 0x56, 0x53, 0x4a, 0x45, 0x4f, 0xaa, 0x02, 0x33, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x69, 0x73,
	0x2e, 0x56, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70,
	0x65, 0xca, 0x02, 0x33, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x5c,
	0x4a, 0x6f, 0x62, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x5c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0xe2, 0x02, 0x3f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x56, 0x31, 0x5c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x5c, 0x4a, 0x6f, 0x62, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x5c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x3a, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73,
	0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x3a, 0x3a, 0x4a, 0x6f, 0x62,
	0x3a, 0x3a, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x3a, 0x3a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescData = file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDesc
)

func file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescData)
	})
	return file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDescData
}

var file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_goTypes = []interface{}{
	(StackJobOperationType)(0), // 0: cloud.planton.apis.iac.v1.stack.job.enums.operationtype.StackJobOperationType
}
var file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_init() }
func file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_init() {
	if File_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_depIdxs,
		EnumInfos:         file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_enumTypes,
	}.Build()
	File_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto = out.File
	file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_rawDesc = nil
	file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_goTypes = nil
	file_cloud_planton_apis_v1_stack_job_enums_operationtype_operation_type_proto_depIdxs = nil
}
