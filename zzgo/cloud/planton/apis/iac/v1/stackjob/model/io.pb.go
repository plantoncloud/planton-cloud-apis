// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/iac/v1/stackjob/model/io.proto

package model

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	apiresourcekind "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/commons/apiresource/enums/apiresourcekind"
	_ "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions"
	rpc "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/commons/rpc"
	stackjoboperationtype "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/iac/v1/stackjob/enums/stackjoboperationtype"
	stackjobprogressstatustype "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/iac/v1/stackjob/enums/stackjobprogressstatustype"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// wrapper for stack-job id
type StackJobId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StackJobId) Reset() {
	*x = StackJobId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackJobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackJobId) ProtoMessage() {}

func (x *StackJobId) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackJobId.ProtoReflect.Descriptor instead.
func (*StackJobId) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{0}
}

func (x *StackJobId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// list stack-jobs by resource type and id query input
type ListStackJobsByFiltersQueryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// page info
	PageInfo *rpc.PageInfo `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	// id of the organization to filter the stack-jobs
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// id of the environment to filter the stack-jobs
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// type of resource
	ResourceKind apiresourcekind.ApiResourceKind `protobuf:"varint,4,opt,name=resource_kind,json=resourceKind,proto3,enum=cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind" json:"resource_kind,omitempty"`
	// id of the resource
	ResourceId string `protobuf:"bytes,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// stack operation type
	OperationType stackjoboperationtype.StackJobOperationType `protobuf:"varint,6,opt,name=operation_type,json=operationType,proto3,enum=cloud.planton.apis.iac.v1.stackjob.enums.operationtype.StackJobOperationType" json:"operation_type,omitempty"`
	// progress status of the stack-job
	ProgressStatus stackjobprogressstatustype.StackJobProgressStatusType `protobuf:"varint,7,opt,name=progress_status,json=progressStatus,proto3,enum=cloud.planton.apis.iac.v1.stackjob.enums.stackjobprogressstatustype.StackJobProgressStatusType" json:"progress_status,omitempty"`
}

func (x *ListStackJobsByFiltersQueryInput) Reset() {
	*x = ListStackJobsByFiltersQueryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStackJobsByFiltersQueryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStackJobsByFiltersQueryInput) ProtoMessage() {}

func (x *ListStackJobsByFiltersQueryInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStackJobsByFiltersQueryInput.ProtoReflect.Descriptor instead.
func (*ListStackJobsByFiltersQueryInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{1}
}

func (x *ListStackJobsByFiltersQueryInput) GetPageInfo() *rpc.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListStackJobsByFiltersQueryInput) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ListStackJobsByFiltersQueryInput) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ListStackJobsByFiltersQueryInput) GetResourceKind() apiresourcekind.ApiResourceKind {
	if x != nil {
		return x.ResourceKind
	}
	return apiresourcekind.ApiResourceKind(0)
}

func (x *ListStackJobsByFiltersQueryInput) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ListStackJobsByFiltersQueryInput) GetOperationType() stackjoboperationtype.StackJobOperationType {
	if x != nil {
		return x.OperationType
	}
	return stackjoboperationtype.StackJobOperationType(0)
}

func (x *ListStackJobsByFiltersQueryInput) GetProgressStatus() stackjobprogressstatustype.StackJobProgressStatusType {
	if x != nil {
		return x.ProgressStatus
	}
	return stackjobprogressstatustype.StackJobProgressStatusType(0)
}

// paginated list of stack-jobs
type StackJobList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// total number of pages
	TotalPages int32 `protobuf:"varint,1,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	// list of stack-jobs
	Entries []*StackJob `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *StackJobList) Reset() {
	*x = StackJobList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackJobList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackJobList) ProtoMessage() {}

func (x *StackJobList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackJobList.ProtoReflect.Descriptor instead.
func (*StackJobList) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{2}
}

func (x *StackJobList) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *StackJobList) GetEntries() []*StackJob {
	if x != nil {
		return x.Entries
	}
	return nil
}

// GetStackJobMinutesByOrganizationIdInput is intended for requests to retrieve the total minutes of stack job
// processing or usage associated with a given organization. It focuses on identifying the organization in question,
// facilitating the aggregation or reporting of stack job minutes at the organization level.
type GetStackJobMinutesByOrganizationIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// org_id uniquely identifies a organization within the system. The field is formatted as a string.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *GetStackJobMinutesByOrganizationIdInput) Reset() {
	*x = GetStackJobMinutesByOrganizationIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStackJobMinutesByOrganizationIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStackJobMinutesByOrganizationIdInput) ProtoMessage() {}

func (x *GetStackJobMinutesByOrganizationIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStackJobMinutesByOrganizationIdInput.ProtoReflect.Descriptor instead.
func (*GetStackJobMinutesByOrganizationIdInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{3}
}

func (x *GetStackJobMinutesByOrganizationIdInput) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// StackJobMinutesCurrentAndPreviousMonth represents the total minutes of stack job execution. it has both current and
// previous month aggregates.
type StackJobMinutesCurrentAndPreviousMonth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current_month_minutes indicates the total duration of the stack job execution in minutes in the current month.
	CurrentMonthMinutes float64 `protobuf:"fixed64,1,opt,name=current_month_minutes,json=currentMonthMinutes,proto3" json:"current_month_minutes,omitempty"`
	// previous_month_minutes indicates the total duration of the stack job execution in minutes in the current month.
	PreviousMonthMinutes float64 `protobuf:"fixed64,2,opt,name=previous_month_minutes,json=previousMonthMinutes,proto3" json:"previous_month_minutes,omitempty"`
}

func (x *StackJobMinutesCurrentAndPreviousMonth) Reset() {
	*x = StackJobMinutesCurrentAndPreviousMonth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StackJobMinutesCurrentAndPreviousMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackJobMinutesCurrentAndPreviousMonth) ProtoMessage() {}

func (x *StackJobMinutesCurrentAndPreviousMonth) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackJobMinutesCurrentAndPreviousMonth.ProtoReflect.Descriptor instead.
func (*StackJobMinutesCurrentAndPreviousMonth) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{4}
}

func (x *StackJobMinutesCurrentAndPreviousMonth) GetCurrentMonthMinutes() float64 {
	if x != nil {
		return x.CurrentMonthMinutes
	}
	return 0
}

func (x *StackJobMinutesCurrentAndPreviousMonth) GetPreviousMonthMinutes() float64 {
	if x != nil {
		return x.PreviousMonthMinutes
	}
	return 0
}

// GetPulumiResourceCountByOrganizationIdInput is used for making requests to obtain the count of Pulumi
// resources associated with a specified organization. The inclusion of the org_id field allows for
// targeted queries to assess the scope of Pulumi resource utilization within a particular organization,
// supporting resource management, auditing, and planning activities in cloud infrastructure and development operations.
type GetPulumiResourceCountByOrganizationIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// org_id uniquely identifies a organization within the system. The field is formatted as a string.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *GetPulumiResourceCountByOrganizationIdInput) Reset() {
	*x = GetPulumiResourceCountByOrganizationIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPulumiResourceCountByOrganizationIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPulumiResourceCountByOrganizationIdInput) ProtoMessage() {}

func (x *GetPulumiResourceCountByOrganizationIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPulumiResourceCountByOrganizationIdInput.ProtoReflect.Descriptor instead.
func (*GetPulumiResourceCountByOrganizationIdInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{5}
}

func (x *GetPulumiResourceCountByOrganizationIdInput) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// TotalPulumiResourceCount represents the aggregate count of Pulumi resources, typically returned
// in response to queries assessing the volume of Pulumi-managed resources within a specific context,
// such as a organization. This message is crucial for understanding the extent of Pulumi infrastructure
// deployment and utilization, aiding in resource management, planning, and optimization efforts
// for cloud infrastructure managed through Pulumi.
type TotalPulumiResourceCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// count is the total number of Pulumi resources.
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TotalPulumiResourceCount) Reset() {
	*x = TotalPulumiResourceCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalPulumiResourceCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalPulumiResourceCount) ProtoMessage() {}

func (x *TotalPulumiResourceCount) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalPulumiResourceCount.ProtoReflect.Descriptor instead.
func (*TotalPulumiResourceCount) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{6}
}

func (x *TotalPulumiResourceCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// GetPulumiResourceCountByContextInput is used to request the count of Pulumi resources
// associated with a specific organization and environments within the system. The system uniquely identifies
// companies and environments by their respective IDs, and this message is utilized to retrieve resource
// counts for targeted organization-environment combinations.
type GetPulumiResourceCountByContextInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// org_id uniquely identifies a organization within the system.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// environment_id uniquely identifies a environment associated with a organization within the system.
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *GetPulumiResourceCountByContextInput) Reset() {
	*x = GetPulumiResourceCountByContextInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPulumiResourceCountByContextInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPulumiResourceCountByContextInput) ProtoMessage() {}

func (x *GetPulumiResourceCountByContextInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPulumiResourceCountByContextInput.ProtoReflect.Descriptor instead.
func (*GetPulumiResourceCountByContextInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{7}
}

func (x *GetPulumiResourceCountByContextInput) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetPulumiResourceCountByContextInput) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

// PulumiResourceCountDetailed provides a detailed accounting of Pulumi resources within a specific
// context defined by a combination of organization and environment identifiers. This message
// is designed to offer granular insights into the types and counts of resources deployed, aiding in
// infrastructure management and analysis.
type PulumiResourceCountDetailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// org_id uniquely identifies a organization within the system. This string identifier
	// ensures that resources are accurately associated with the correct corporate entity.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// environment_id specifies the deployment environment of the Pulumi resources, such as
	// development, testing, or production. This differentiation allows for environment-specific
	// resource tracking and management.
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// resource_id provides a unique identifier for each Pulumi resource within the given context.
	// This ID facilitates precise tracking and operations on individual resources.
	ResourceId string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// resource_kind describes the type of the Pulumi resource (e.g., vm, network, database), offering
	// insights into the infrastructure composition and enabling type-specific management practices.
	ResourceKind string `protobuf:"bytes,4,opt,name=resource_kind,json=resourceKind,proto3" json:"resource_kind,omitempty"`
	// resource_count represents the number of instances of the resource kind present within the
	// specified context. Note: Despite being a string, this field should contain a numeric value.
	ResourceCount int32 `protobuf:"varint,5,opt,name=resource_count,json=resourceCount,proto3" json:"resource_count,omitempty"`
}

func (x *PulumiResourceCountDetailed) Reset() {
	*x = PulumiResourceCountDetailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiResourceCountDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiResourceCountDetailed) ProtoMessage() {}

func (x *PulumiResourceCountDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiResourceCountDetailed.ProtoReflect.Descriptor instead.
func (*PulumiResourceCountDetailed) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{8}
}

func (x *PulumiResourceCountDetailed) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *PulumiResourceCountDetailed) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *PulumiResourceCountDetailed) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PulumiResourceCountDetailed) GetResourceKind() string {
	if x != nil {
		return x.ResourceKind
	}
	return ""
}

func (x *PulumiResourceCountDetailed) GetResourceCount() int32 {
	if x != nil {
		return x.ResourceCount
	}
	return 0
}

// PulumiResourceCountDetailedList encapsulates a list of PulumiResourceCountDetailed messages,
// providing a collection of detailed information about Pulumi resources count for each planton-cloud resource id
type PulumiResourceCountDetailedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entries is a repeated field containing PulumiResourceCountDetailed messages. Each entry
	// in this list represents detailed information about a specific planton-cloud resource, including
	// its organization, environment identifiers, resource kind, and count.
	Entries []*PulumiResourceCountDetailed `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PulumiResourceCountDetailedList) Reset() {
	*x = PulumiResourceCountDetailedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiResourceCountDetailedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiResourceCountDetailedList) ProtoMessage() {}

func (x *PulumiResourceCountDetailedList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiResourceCountDetailedList.ProtoReflect.Descriptor instead.
func (*PulumiResourceCountDetailedList) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{9}
}

func (x *PulumiResourceCountDetailedList) GetEntries() []*PulumiResourceCountDetailed {
	if x != nil {
		return x.Entries
	}
	return nil
}

// GetStackJobMinutesByContextInput is intended for requests to retrieve the total minutes of stack job
// processing or usage associated with a given organization or environment. It focuses on identifying the organization or environment
// in question, facilitating the aggregation or reporting of stack job minutes at the organization/ environment level.
type GetStackJobMinutesByContextInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// org_id uniquely identifies a organization within the system.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// environment_id uniquely identifies a environment associated with a organization within the system.
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *GetStackJobMinutesByContextInput) Reset() {
	*x = GetStackJobMinutesByContextInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStackJobMinutesByContextInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStackJobMinutesByContextInput) ProtoMessage() {}

func (x *GetStackJobMinutesByContextInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStackJobMinutesByContextInput.ProtoReflect.Descriptor instead.
func (*GetStackJobMinutesByContextInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{10}
}

func (x *GetStackJobMinutesByContextInput) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetStackJobMinutesByContextInput) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

// PulumiResourceCountTimeSeries represents a single data point in a time series for tracking the count
// of Pulumi resources. Each entry correlates a specific timestamp with a resource count, allowing for
// detailed analysis of resource usage trends over time.
type PulumiResourceCountTimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// interval_timestamp marks the specific point in time this data point represents. The use of
	// google.protobuf.Timestamp ensures precise temporal tracking, enabling accurate historical analysis
	// and forecasting.
	IntervalTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=interval_timestamp,json=intervalTimestamp,proto3" json:"interval_timestamp,omitempty"`
	// resource_count is the number of Pulumi resources recorded at the specified interval_timestamp.
	// This double value allows for precise representation of resource counts, including fractional parts
	// if applicable, accommodating scenarios where resource counts are averaged or otherwise not whole numbers.
	ResourceCount float64 `protobuf:"fixed64,2,opt,name=resource_count,json=resourceCount,proto3" json:"resource_count,omitempty"`
}

func (x *PulumiResourceCountTimeSeries) Reset() {
	*x = PulumiResourceCountTimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiResourceCountTimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiResourceCountTimeSeries) ProtoMessage() {}

func (x *PulumiResourceCountTimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiResourceCountTimeSeries.ProtoReflect.Descriptor instead.
func (*PulumiResourceCountTimeSeries) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{11}
}

func (x *PulumiResourceCountTimeSeries) GetIntervalTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.IntervalTimestamp
	}
	return nil
}

func (x *PulumiResourceCountTimeSeries) GetResourceCount() float64 {
	if x != nil {
		return x.ResourceCount
	}
	return 0
}

// PulumiResourceCountTimeSeriesList aggregates multiple PulumiResourceCountTimeSeries entries into a
// single collection. This facilitates the management and analysis of time series data for Pulumi resources,
// supporting operations that require data across multiple time intervals, such as trend analysis and
// resource utilization studies.
type PulumiResourceCountTimeSeriesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entries is a repeated field that holds a sequence of PulumiResourceCountTimeSeries messages,
	// each representing a distinct time series data point. This collection models the fluctuation of resource
	// counts over time, enabling comprehensive temporal analysis and visualization of resource metrics.
	Entries []*PulumiResourceCountTimeSeries `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PulumiResourceCountTimeSeriesList) Reset() {
	*x = PulumiResourceCountTimeSeriesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiResourceCountTimeSeriesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiResourceCountTimeSeriesList) ProtoMessage() {}

func (x *PulumiResourceCountTimeSeriesList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiResourceCountTimeSeriesList.ProtoReflect.Descriptor instead.
func (*PulumiResourceCountTimeSeriesList) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{12}
}

func (x *PulumiResourceCountTimeSeriesList) GetEntries() []*PulumiResourceCountTimeSeries {
	if x != nil {
		return x.Entries
	}
	return nil
}

// GetPulumiResourceCountTimeSeriesByContextInput defines the input parameters for a query
// to retrieve time-series data of Pulumi resource counts within a specific context, identified
// by organization and environment. This message enables clients to request temporal patterns of resource
// usage, facilitating trend analysis and resource planning based on historical data. The inclusion
// of start and end timestamps allows for the querying of data within a specific time range, offering
// targeted insights into resource utilization over defined periods.
type GetPulumiResourceCountTimeSeriesByContextInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// org_id uniquely identifies a organization within the system. This string identifier is used
	// to filter the query to only include resources associated with the specified organization, ensuring
	// that the time series data returned is relevant to the querying entity's scope of interest.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// environment_id uniquely identifies a environment associated with a organization within the system. Specifying
	// this identifier allows the query to further narrow down the set of resources considered, focusing
	// the resulting time series on a particular environment.
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// start_timestamp specifies the beginning of the time range for which resource count time series data
	// is requested. This field allows clients to define a specific time window, enhancing the precision of
	// the analysis by focusing on the changes and trends within this defined period.
	StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// end_timestamp defines the end of the time range for the query. Together with start_timestamp, it
	// delineates the temporal boundaries of the data retrieval, enabling focused analysis on resource
	// utilization and trends over specific intervals, aiding in more accurate forecasting and strategic planning.
	EndTimestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) Reset() {
	*x = GetPulumiResourceCountTimeSeriesByContextInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPulumiResourceCountTimeSeriesByContextInput) ProtoMessage() {}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPulumiResourceCountTimeSeriesByContextInput.ProtoReflect.Descriptor instead.
func (*GetPulumiResourceCountTimeSeriesByContextInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{13}
}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *GetPulumiResourceCountTimeSeriesByContextInput) GetEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

// GetPulumiResourceCountTimeSeriesByResourceIdInput defines the input parameters for a query
// to retrieve time-series data of Pulumi resource counts based on a unique resource identifier.
// This message is tailored for in-depth analysis of specific resources, enabling clients to
// observe temporal patterns and count variations of a single resource over time. By specifying
// a resource ID and a precise time window through start and end timestamps, clients can obtain
// detailed insights into resource dynamics, facilitating targeted management and optimization
// strategies.
type GetPulumiResourceCountTimeSeriesByResourceIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type of resource id.
	ResourceKind apiresourcekind.ApiResourceKind `protobuf:"varint,1,opt,name=resource_kind,json=resourceKind,proto3,enum=cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind" json:"resource_kind,omitempty"`
	// resource_id is a unique identifier for a Pulumi resource. This field targets the query to
	// retrieve time series data specifically for the resource specified, allowing for granular analysis
	// of its utilization and count changes over time. Such specificity is vital for detailed resource
	// tracking, performance evaluation, and planning of scaling or optimization efforts.
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// start_timestamp specifies the beginning of the time range for which resource count time series data
	// is requested. This field enables clients to demarcate the start of a period of interest, ensuring
	// that the analysis focuses on relevant temporal segments. Precision in defining this start point
	// enhances the utility of the data in understanding resource trends and making informed decisions.
	StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// end_timestamp defines the end of the time range for the query. In conjunction with start_timestamp,
	// it establishes a clear and focused window for data retrieval. This precision allows for the
	// extraction of time-bound insights into resource behavior, supporting accurate forecasting,
	// trend analysis, and strategic resource planning. The ability to specify an end point ensures
	// that the analysis is both relevant and confined to specific operational periods.
	EndTimestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) Reset() {
	*x = GetPulumiResourceCountTimeSeriesByResourceIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPulumiResourceCountTimeSeriesByResourceIdInput) ProtoMessage() {}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPulumiResourceCountTimeSeriesByResourceIdInput.ProtoReflect.Descriptor instead.
func (*GetPulumiResourceCountTimeSeriesByResourceIdInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{14}
}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) GetResourceKind() apiresourcekind.ApiResourceKind {
	if x != nil {
		return x.ResourceKind
	}
	return apiresourcekind.ApiResourceKind(0)
}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *GetPulumiResourceCountTimeSeriesByResourceIdInput) GetEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

// input for rpc to get recommendation to resolve an error in stack-job
type GetErrorResolutionRecommendationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the stack-job
	StackJobId string `protobuf:"bytes,1,opt,name=stack_job_id,json=stackJobId,proto3" json:"stack_job_id,omitempty"`
	// error message for which the recommendation is to be queried from chat-gpt
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *GetErrorResolutionRecommendationInput) Reset() {
	*x = GetErrorResolutionRecommendationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetErrorResolutionRecommendationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetErrorResolutionRecommendationInput) ProtoMessage() {}

func (x *GetErrorResolutionRecommendationInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetErrorResolutionRecommendationInput.ProtoReflect.Descriptor instead.
func (*GetErrorResolutionRecommendationInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP(), []int{15}
}

func (x *GetErrorResolutionRecommendationInput) GetStackJobId() string {
	if x != nil {
		return x.StackJobId
	}
	return ""
}

func (x *GetErrorResolutionRecommendationInput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_cloud_planton_apis_iac_v1_stackjob_model_io_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDesc = []byte{
	0x0a, 0x31, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x6a, 0x6f, 0x62, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x28, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x54, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x67, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x68, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f,
	0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x5d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f,
	0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62,
	0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbd,
	0x04, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x73,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x72, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x74, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a,
	0x6f, 0x62, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f,
	0x62, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7d,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x4c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x4a, 0x6f, 0x62, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x40, 0x0a,
	0x27, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22,
	0x92, 0x01, 0x0a, 0x26, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f, 0x62, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x75, 0x6d,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x1f, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x5f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75,
	0x6c, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x60, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4a, 0x6f,
	0x62, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x21, 0x50, 0x75, 0x6c,
	0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x61,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xce, 0x02, 0x0a, 0x31, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x72,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6e, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x4a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0xe5, 0x02, 0x0a, 0x36, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69,
	0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x07, 0x49, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7a, 0x7a, 0x67, 0x6f,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x6a, 0x6f, 0x62, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0xa2, 0x02, 0x07, 0x43, 0x50, 0x41, 0x49,
	0x56, 0x53, 0x4d, 0xaa, 0x02, 0x28, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x2e, 0x49, 0x61, 0x63, 0x2e, 0x56, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0xca, 0x02,
	0x28, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41,
	0x70, 0x69, 0x73, 0x5c, 0x49, 0x61, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x6a, 0x6f, 0x62, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0xe2, 0x02, 0x34, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49,
	0x61, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x49, 0x61, 0x63, 0x3a, 0x3a, 0x56, 0x31,
	0x3a, 0x3a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescData = file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDesc
)

func file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescData)
	})
	return file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDescData
}

var file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_goTypes = []interface{}{
	(*StackJobId)(nil),                                         // 0: cloud.planton.apis.iac.v1.stackjob.model.StackJobId
	(*ListStackJobsByFiltersQueryInput)(nil),                   // 1: cloud.planton.apis.iac.v1.stackjob.model.ListStackJobsByFiltersQueryInput
	(*StackJobList)(nil),                                       // 2: cloud.planton.apis.iac.v1.stackjob.model.StackJobList
	(*GetStackJobMinutesByOrganizationIdInput)(nil),            // 3: cloud.planton.apis.iac.v1.stackjob.model.GetStackJobMinutesByOrganizationIdInput
	(*StackJobMinutesCurrentAndPreviousMonth)(nil),             // 4: cloud.planton.apis.iac.v1.stackjob.model.StackJobMinutesCurrentAndPreviousMonth
	(*GetPulumiResourceCountByOrganizationIdInput)(nil),        // 5: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountByOrganizationIdInput
	(*TotalPulumiResourceCount)(nil),                           // 6: cloud.planton.apis.iac.v1.stackjob.model.TotalPulumiResourceCount
	(*GetPulumiResourceCountByContextInput)(nil),               // 7: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountByContextInput
	(*PulumiResourceCountDetailed)(nil),                        // 8: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountDetailed
	(*PulumiResourceCountDetailedList)(nil),                    // 9: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountDetailedList
	(*GetStackJobMinutesByContextInput)(nil),                   // 10: cloud.planton.apis.iac.v1.stackjob.model.GetStackJobMinutesByContextInput
	(*PulumiResourceCountTimeSeries)(nil),                      // 11: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountTimeSeries
	(*PulumiResourceCountTimeSeriesList)(nil),                  // 12: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountTimeSeriesList
	(*GetPulumiResourceCountTimeSeriesByContextInput)(nil),     // 13: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByContextInput
	(*GetPulumiResourceCountTimeSeriesByResourceIdInput)(nil),  // 14: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByResourceIdInput
	(*GetErrorResolutionRecommendationInput)(nil),              // 15: cloud.planton.apis.iac.v1.stackjob.model.GetErrorResolutionRecommendationInput
	(*rpc.PageInfo)(nil),                                       // 16: cloud.planton.apis.commons.rpc.PageInfo
	(apiresourcekind.ApiResourceKind)(0),                       // 17: cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind
	(stackjoboperationtype.StackJobOperationType)(0),           // 18: cloud.planton.apis.iac.v1.stackjob.enums.operationtype.StackJobOperationType
	(stackjobprogressstatustype.StackJobProgressStatusType)(0), // 19: cloud.planton.apis.iac.v1.stackjob.enums.stackjobprogressstatustype.StackJobProgressStatusType
	(*StackJob)(nil),                                           // 20: cloud.planton.apis.iac.v1.stackjob.model.StackJob
	(*timestamppb.Timestamp)(nil),                              // 21: google.protobuf.Timestamp
}
var file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_depIdxs = []int32{
	16, // 0: cloud.planton.apis.iac.v1.stackjob.model.ListStackJobsByFiltersQueryInput.page_info:type_name -> cloud.planton.apis.commons.rpc.PageInfo
	17, // 1: cloud.planton.apis.iac.v1.stackjob.model.ListStackJobsByFiltersQueryInput.resource_kind:type_name -> cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind
	18, // 2: cloud.planton.apis.iac.v1.stackjob.model.ListStackJobsByFiltersQueryInput.operation_type:type_name -> cloud.planton.apis.iac.v1.stackjob.enums.operationtype.StackJobOperationType
	19, // 3: cloud.planton.apis.iac.v1.stackjob.model.ListStackJobsByFiltersQueryInput.progress_status:type_name -> cloud.planton.apis.iac.v1.stackjob.enums.stackjobprogressstatustype.StackJobProgressStatusType
	20, // 4: cloud.planton.apis.iac.v1.stackjob.model.StackJobList.entries:type_name -> cloud.planton.apis.iac.v1.stackjob.model.StackJob
	8,  // 5: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountDetailedList.entries:type_name -> cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountDetailed
	21, // 6: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountTimeSeries.interval_timestamp:type_name -> google.protobuf.Timestamp
	11, // 7: cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountTimeSeriesList.entries:type_name -> cloud.planton.apis.iac.v1.stackjob.model.PulumiResourceCountTimeSeries
	21, // 8: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByContextInput.start_timestamp:type_name -> google.protobuf.Timestamp
	21, // 9: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByContextInput.end_timestamp:type_name -> google.protobuf.Timestamp
	17, // 10: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByResourceIdInput.resource_kind:type_name -> cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind
	21, // 11: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByResourceIdInput.start_timestamp:type_name -> google.protobuf.Timestamp
	21, // 12: cloud.planton.apis.iac.v1.stackjob.model.GetPulumiResourceCountTimeSeriesByResourceIdInput.end_timestamp:type_name -> google.protobuf.Timestamp
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_init() }
func file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_init() {
	if File_cloud_planton_apis_iac_v1_stackjob_model_io_proto != nil {
		return
	}
	file_cloud_planton_apis_iac_v1_stackjob_model_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackJobId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStackJobsByFiltersQueryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackJobList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStackJobMinutesByOrganizationIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StackJobMinutesCurrentAndPreviousMonth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPulumiResourceCountByOrganizationIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalPulumiResourceCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPulumiResourceCountByContextInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulumiResourceCountDetailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulumiResourceCountDetailedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStackJobMinutesByContextInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulumiResourceCountTimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PulumiResourceCountTimeSeriesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPulumiResourceCountTimeSeriesByContextInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPulumiResourceCountTimeSeriesByResourceIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetErrorResolutionRecommendationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_depIdxs,
		MessageInfos:      file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_msgTypes,
	}.Build()
	File_cloud_planton_apis_iac_v1_stackjob_model_io_proto = out.File
	file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_rawDesc = nil
	file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_goTypes = nil
	file_cloud_planton_apis_iac_v1_stackjob_model_io_proto_depIdxs = nil
}
