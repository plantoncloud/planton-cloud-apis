// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/iam/v1/iamrole/model/io.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// wrapper for iam role id
type IamRoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IamRoleId) Reset() {
	*x = IamRoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamRoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamRoleId) ProtoMessage() {}

func (x *IamRoleId) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamRoleId.ProtoReflect.Descriptor instead.
func (*IamRoleId) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP(), []int{0}
}

func (x *IamRoleId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// wrapper for iam resource type input
type IamApiResourceKindInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IamApiResourceKindInput) Reset() {
	*x = IamApiResourceKindInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamApiResourceKindInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamApiResourceKindInput) ProtoMessage() {}

func (x *IamApiResourceKindInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamApiResourceKindInput.ProtoReflect.Descriptor instead.
func (*IamApiResourceKindInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP(), []int{1}
}

func (x *IamApiResourceKindInput) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// response for rpc query to list all iam roles.
type IamRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of iam role entries
	Entries []*IamRole `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *IamRoles) Reset() {
	*x = IamRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamRoles) ProtoMessage() {}

func (x *IamRoles) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamRoles.ProtoReflect.Descriptor instead.
func (*IamRoles) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP(), []int{2}
}

func (x *IamRoles) GetEntries() []*IamRole {
	if x != nil {
		return x.Entries
	}
	return nil
}

// response for paginated rpc query to list iam roles.
type IamRoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of iam role entries
	Entries []*IamRole `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// total number of pages available to get roles data
	TotalPages int32 `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
}

func (x *IamRoleList) Reset() {
	*x = IamRoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IamRoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamRoleList) ProtoMessage() {}

func (x *IamRoleList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IamRoleList.ProtoReflect.Descriptor instead.
func (*IamRoleList) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP(), []int{3}
}

func (x *IamRoleList) GetEntries() []*IamRole {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *IamRoleList) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

// input to pass resource type and principal type
type ApiResourceKindAndPrincipalTypeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type of the resource the role belongs to
	// examples: organization/ connection etc
	ResourceKind string `protobuf:"bytes,1,opt,name=resource_kind,json=resourceKind,proto3" json:"resource_kind,omitempty"`
	// type of the principal that is allowed to link with the resource
	// examples: user/ organization etc
	PrincipalType string `protobuf:"bytes,2,opt,name=principal_type,json=principalType,proto3" json:"principal_type,omitempty"`
	// flag to get only roles that can be publicly granted
	IsPublic bool `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *ApiResourceKindAndPrincipalTypeInput) Reset() {
	*x = ApiResourceKindAndPrincipalTypeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiResourceKindAndPrincipalTypeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResourceKindAndPrincipalTypeInput) ProtoMessage() {}

func (x *ApiResourceKindAndPrincipalTypeInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResourceKindAndPrincipalTypeInput.ProtoReflect.Descriptor instead.
func (*ApiResourceKindAndPrincipalTypeInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP(), []int{4}
}

func (x *ApiResourceKindAndPrincipalTypeInput) GetResourceKind() string {
	if x != nil {
		return x.ResourceKind
	}
	return ""
}

func (x *ApiResourceKindAndPrincipalTypeInput) GetPrincipalType() string {
	if x != nil {
		return x.PrincipalType
	}
	return ""
}

func (x *ApiResourceKindAndPrincipalTypeInput) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

// response to rpc query to get list of all principal types
type PrincipalTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of principal types
	Entries []string `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PrincipalTypes) Reset() {
	*x = PrincipalTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrincipalTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrincipalTypes) ProtoMessage() {}

func (x *PrincipalTypes) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrincipalTypes.ProtoReflect.Descriptor instead.
func (*PrincipalTypes) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP(), []int{5}
}

func (x *PrincipalTypes) GetEntries() []string {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_cloud_planton_apis_iam_v1_iamrole_model_io_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDesc = []byte{
	0x0a, 0x30, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x72,
	0x6f, 0x6c, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x27, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x61,
	0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x33, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x21, 0x0a, 0x09, 0x49, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x49, 0x61, 0x6d, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x08, 0x49, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x61,
	0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x61, 0x6d, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x0b,
	0x49, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x61, 0x6d, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x24, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x2a, 0x0a, 0x0e, 0x50, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0xdf, 0x02, 0x0a, 0x35, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x69, 0x61, 0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x42, 0x07, 0x49, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x57, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0xa2, 0x02, 0x07, 0x43, 0x50, 0x41, 0x49, 0x56, 0x49, 0x4d, 0xaa, 0x02,
	0x27, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x41,
	0x70, 0x69, 0x73, 0x2e, 0x49, 0x61, 0x6d, 0x2e, 0x56, 0x31, 0x2e, 0x49, 0x61, 0x6d, 0x72, 0x6f,
	0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0xca, 0x02, 0x27, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49, 0x61,
	0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x49, 0x61, 0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x5c, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0xe2, 0x02, 0x33, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49, 0x61, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x49,
	0x61, 0x6d, 0x72, 0x6f, 0x6c, 0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x2d, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a,
	0x3a, 0x49, 0x61, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x49, 0x61, 0x6d, 0x72, 0x6f, 0x6c,
	0x65, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescData = file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDesc
)

func file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescData)
	})
	return file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDescData
}

var file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_goTypes = []interface{}{
	(*IamRoleId)(nil),                            // 0: cloud.planton.apis.iam.v1.iamrole.model.IamRoleId
	(*IamApiResourceKindInput)(nil),              // 1: cloud.planton.apis.iam.v1.iamrole.model.IamApiResourceKindInput
	(*IamRoles)(nil),                             // 2: cloud.planton.apis.iam.v1.iamrole.model.IamRoles
	(*IamRoleList)(nil),                          // 3: cloud.planton.apis.iam.v1.iamrole.model.IamRoleList
	(*ApiResourceKindAndPrincipalTypeInput)(nil), // 4: cloud.planton.apis.iam.v1.iamrole.model.ApiResourceKindAndPrincipalTypeInput
	(*PrincipalTypes)(nil),                       // 5: cloud.planton.apis.iam.v1.iamrole.model.PrincipalTypes
	(*IamRole)(nil),                              // 6: cloud.planton.apis.iam.v1.iamrole.model.IamRole
}
var file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_depIdxs = []int32{
	6, // 0: cloud.planton.apis.iam.v1.iamrole.model.IamRoles.entries:type_name -> cloud.planton.apis.iam.v1.iamrole.model.IamRole
	6, // 1: cloud.planton.apis.iam.v1.iamrole.model.IamRoleList.entries:type_name -> cloud.planton.apis.iam.v1.iamrole.model.IamRole
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_init() }
func file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_init() {
	if File_cloud_planton_apis_iam_v1_iamrole_model_io_proto != nil {
		return
	}
	file_cloud_planton_apis_iam_v1_iamrole_model_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamRoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamApiResourceKindInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IamRoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiResourceKindAndPrincipalTypeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrincipalTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_depIdxs,
		MessageInfos:      file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_msgTypes,
	}.Build()
	File_cloud_planton_apis_iam_v1_iamrole_model_io_proto = out.File
	file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_rawDesc = nil
	file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_goTypes = nil
	file_cloud_planton_apis_iam_v1_iamrole_model_io_proto_depIdxs = nil
}
