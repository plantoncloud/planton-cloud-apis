// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/iam/v1/iampolicy/enums/apiresourceiampermission/api_resource_iam_permission.proto

package apiresourceiampermission

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApiResourceIamPermission int32

const (
	ApiResourceIamPermission_unspecified ApiResourceIamPermission = 0
	ApiResourceIamPermission_create      ApiResourceIamPermission = 2000
	ApiResourceIamPermission_delete      ApiResourceIamPermission = 1
	ApiResourceIamPermission_get         ApiResourceIamPermission = 2
	ApiResourceIamPermission_restore     ApiResourceIamPermission = 3
	ApiResourceIamPermission_update      ApiResourceIamPermission = 4
	// list_associates
	ApiResourceIamPermission_list_associates ApiResourceIamPermission = 5
	// login_to_back_office
	ApiResourceIamPermission_login_to_back_office                 ApiResourceIamPermission = 6
	ApiResourceIamPermission_platform_microservice_account        ApiResourceIamPermission = 7
	ApiResourceIamPermission_back_office_admin                    ApiResourceIamPermission = 8
	ApiResourceIamPermission_platform                             ApiResourceIamPermission = 9
	ApiResourceIamPermission_config_map_create                    ApiResourceIamPermission = 10
	ApiResourceIamPermission_aws_credential_create                ApiResourceIamPermission = 11
	ApiResourceIamPermission_azure_credential_create              ApiResourceIamPermission = 12
	ApiResourceIamPermission_gcp_credential_create                ApiResourceIamPermission = 13
	ApiResourceIamPermission_kubernetes_cluster_credential_create ApiResourceIamPermission = 14
	ApiResourceIamPermission_kubernetes_docker_credential_create  ApiResourceIamPermission = 15
)

// Enum value maps for ApiResourceIamPermission.
var (
	ApiResourceIamPermission_name = map[int32]string{
		0:    "unspecified",
		2000: "create",
		1:    "delete",
		2:    "get",
		3:    "restore",
		4:    "update",
		5:    "list_associates",
		6:    "login_to_back_office",
		7:    "platform_microservice_account",
		8:    "back_office_admin",
		9:    "platform",
		10:   "config_map_create",
		11:   "aws_credential_create",
		12:   "azure_credential_create",
		13:   "gcp_credential_create",
		14:   "kubernetes_cluster_credential_create",
		15:   "kubernetes_docker_credential_create",
	}
	ApiResourceIamPermission_value = map[string]int32{
		"unspecified":                          0,
		"create":                               2000,
		"delete":                               1,
		"get":                                  2,
		"restore":                              3,
		"update":                               4,
		"list_associates":                      5,
		"login_to_back_office":                 6,
		"platform_microservice_account":        7,
		"back_office_admin":                    8,
		"platform":                             9,
		"config_map_create":                    10,
		"aws_credential_create":                11,
		"azure_credential_create":              12,
		"gcp_credential_create":                13,
		"kubernetes_cluster_credential_create": 14,
		"kubernetes_docker_credential_create":  15,
	}
)

func (x ApiResourceIamPermission) Enum() *ApiResourceIamPermission {
	p := new(ApiResourceIamPermission)
	*p = x
	return p
}

func (x ApiResourceIamPermission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiResourceIamPermission) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_enumTypes[0].Descriptor()
}

func (ApiResourceIamPermission) Type() protoreflect.EnumType {
	return &file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_enumTypes[0]
}

func (x ApiResourceIamPermission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiResourceIamPermission.Descriptor instead.
func (ApiResourceIamPermission) EnumDescriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescGZIP(), []int{0}
}

var File_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDesc = []byte{
	0x0a, 0x64, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x61, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x42, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x69, 0x61, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x61, 0x6d,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x9a, 0x03, 0x0a, 0x18, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x61, 0x6d, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x10, 0xd0, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x65, 0x73, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10,
	0x0a, 0x12, 0x19, 0x0a, 0x15, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x0c, 0x12, 0x19, 0x0a, 0x15, 0x67, 0x63, 0x70,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x10, 0x0d, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x0e, 0x12, 0x27,
	0x0a, 0x23, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x0f, 0x42, 0x99, 0x04, 0x0a, 0x50, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x61, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69,
	0x61, 0x6d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x1d, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x61, 0x6d, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x72, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x69, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0xa2, 0x02, 0x08, 0x43, 0x50, 0x41, 0x49, 0x56, 0x49, 0x45, 0x41, 0xaa, 0x02, 0x42, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x69,
	0x73, 0x2e, 0x49, 0x61, 0x6d, 0x2e, 0x56, 0x31, 0x2e, 0x49, 0x61, 0x6d, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x69, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0xca, 0x02, 0x42, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49, 0x61, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x49, 0x61,
	0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x5c, 0x41, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0xe2, 0x02, 0x4e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49, 0x61, 0x6d, 0x5c,
	0x56, 0x31, 0x5c, 0x49, 0x61, 0x6d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x45, 0x6e, 0x75,
	0x6d, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x61,
	0x6d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x49, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a,
	0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a, 0x3a,
	0x49, 0x61, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x49, 0x61, 0x6d, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x3a, 0x3a, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x61, 0x6d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescData = file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDesc
)

func file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescData)
	})
	return file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDescData
}

var file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_goTypes = []interface{}{
	(ApiResourceIamPermission)(0), // 0: cloud.planton.apis.iam.v1.iampolicy.enums.apiresourceiampermission.ApiResourceIamPermission
}
var file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_init()
}
func file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_init() {
	if File_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_depIdxs,
		EnumInfos:         file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_enumTypes,
	}.Build()
	File_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto = out.File
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_rawDesc = nil
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_goTypes = nil
	file_cloud_planton_apis_iam_v1_iampolicy_enums_apiresourceiampermission_api_resource_iam_permission_proto_depIdxs = nil
}
