// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: cloud/planton/apis/iam/v1/identityaccount/model/io.proto

package model

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions"
	_ "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions"
	rpc "github.com/plantoncloud/planton-cloud-apis/zzgo/cloud/planton/apis/commons/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// wrapper to get list of identity accounts
type IdentityAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*IdentityAccount `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *IdentityAccounts) Reset() {
	*x = IdentityAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityAccounts) ProtoMessage() {}

func (x *IdentityAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityAccounts.ProtoReflect.Descriptor instead.
func (*IdentityAccounts) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{0}
}

func (x *IdentityAccounts) GetEntries() []*IdentityAccount {
	if x != nil {
		return x.Entries
	}
	return nil
}

// wrapper for user identity account id.
type IdentityAccountId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IdentityAccountId) Reset() {
	*x = IdentityAccountId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityAccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityAccountId) ProtoMessage() {}

func (x *IdentityAccountId) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityAccountId.ProtoReflect.Descriptor instead.
func (*IdentityAccountId) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{1}
}

func (x *IdentityAccountId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// wrapper for email of the identity account.
type IdentityAccountEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IdentityAccountEmail) Reset() {
	*x = IdentityAccountEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityAccountEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityAccountEmail) ProtoMessage() {}

func (x *IdentityAccountEmail) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityAccountEmail.ProtoReflect.Descriptor instead.
func (*IdentityAccountEmail) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{2}
}

func (x *IdentityAccountEmail) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// input for paginated queries that require identity account id as input.
type ListWithIdentityAccountIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// identity account id
	IdentityAccountId string        `protobuf:"bytes,1,opt,name=identity_account_id,json=identityAccountId,proto3" json:"identity_account_id,omitempty"`
	Page              *rpc.PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListWithIdentityAccountIdReq) Reset() {
	*x = ListWithIdentityAccountIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithIdentityAccountIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithIdentityAccountIdReq) ProtoMessage() {}

func (x *ListWithIdentityAccountIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithIdentityAccountIdReq.ProtoReflect.Descriptor instead.
func (*ListWithIdentityAccountIdReq) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{3}
}

func (x *ListWithIdentityAccountIdReq) GetIdentityAccountId() string {
	if x != nil {
		return x.IdentityAccountId
	}
	return ""
}

func (x *ListWithIdentityAccountIdReq) GetPage() *rpc.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

// response for paginated rpc query to list identity accounts.
type IdentityAccountsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries    []*IdentityAccount `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	TotalPages int32              `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
}

func (x *IdentityAccountsList) Reset() {
	*x = IdentityAccountsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityAccountsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityAccountsList) ProtoMessage() {}

func (x *IdentityAccountsList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityAccountsList.ProtoReflect.Descriptor instead.
func (*IdentityAccountsList) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{4}
}

func (x *IdentityAccountsList) GetEntries() []*IdentityAccount {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *IdentityAccountsList) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

// wrapper for client_secret of the machine account
type MachineAccountClientSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MachineAccountClientSecret) Reset() {
	*x = MachineAccountClientSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineAccountClientSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineAccountClientSecret) ProtoMessage() {}

func (x *MachineAccountClientSecret) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineAccountClientSecret.ProtoReflect.Descriptor instead.
func (*MachineAccountClientSecret) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{5}
}

func (x *MachineAccountClientSecret) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// wrapper for machine account company id.
type MachineAccountCompanyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MachineAccountCompanyId) Reset() {
	*x = MachineAccountCompanyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineAccountCompanyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineAccountCompanyId) ProtoMessage() {}

func (x *MachineAccountCompanyId) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineAccountCompanyId.ProtoReflect.Descriptor instead.
func (*MachineAccountCompanyId) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{6}
}

func (x *MachineAccountCompanyId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// wrapper for identity account company id.
type ListWithIdentityCompanyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string        `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Page      *rpc.PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListWithIdentityCompanyId) Reset() {
	*x = ListWithIdentityCompanyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithIdentityCompanyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithIdentityCompanyId) ProtoMessage() {}

func (x *ListWithIdentityCompanyId) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithIdentityCompanyId.ProtoReflect.Descriptor instead.
func (*ListWithIdentityCompanyId) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{7}
}

func (x *ListWithIdentityCompanyId) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ListWithIdentityCompanyId) GetPage() *rpc.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetByCompanyByNameQueryInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetByCompanyByNameQueryInput) Reset() {
	*x = GetByCompanyByNameQueryInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByCompanyByNameQueryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByCompanyByNameQueryInput) ProtoMessage() {}

func (x *GetByCompanyByNameQueryInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByCompanyByNameQueryInput.ProtoReflect.Descriptor instead.
func (*GetByCompanyByNameQueryInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{8}
}

func (x *GetByCompanyByNameQueryInput) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetByCompanyByNameQueryInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MembersCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *MembersCount) Reset() {
	*x = MembersCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembersCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembersCount) ProtoMessage() {}

func (x *MembersCount) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembersCount.ProtoReflect.Descriptor instead.
func (*MembersCount) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{9}
}

func (x *MembersCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// MembersCountByCompanyIdInput is designed for requests that need to determine the number of members
// associated exclusively with a given company. This simplified input focuses solely on company identification,
// making it suitable to aggregate members count at the company level.
type MembersCountByCompanyIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// company_id uniquely identifies a company within the system. The field accepts a string format.
	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *MembersCountByCompanyIdInput) Reset() {
	*x = MembersCountByCompanyIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembersCountByCompanyIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembersCountByCompanyIdInput) ProtoMessage() {}

func (x *MembersCountByCompanyIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembersCountByCompanyIdInput.ProtoReflect.Descriptor instead.
func (*MembersCountByCompanyIdInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{10}
}

func (x *MembersCountByCompanyIdInput) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// MembersCountByProductIdInput is designed for requests that need to determine the number of members
// associated exclusively with a given environment. This simplified input focuses solely on environment identification,
// making it suitable to aggregate members count at the environment level.
type MembersCountByEnvironmentIdInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// environment_id uniquely identifies a environment within the system. The field accepts a string format.
	EnvironmentId string `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *MembersCountByEnvironmentIdInput) Reset() {
	*x = MembersCountByEnvironmentIdInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembersCountByEnvironmentIdInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembersCountByEnvironmentIdInput) ProtoMessage() {}

func (x *MembersCountByEnvironmentIdInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembersCountByEnvironmentIdInput.ProtoReflect.Descriptor instead.
func (*MembersCountByEnvironmentIdInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{11}
}

func (x *MembersCountByEnvironmentIdInput) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

// input for rpc to create access token for machine identity account
type CreateMachineAccessTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email of machine identity account
	MachineAccountEmail string `protobuf:"bytes,1,opt,name=machine_account_email,json=machineAccountEmail,proto3" json:"machine_account_email,omitempty"`
	// client secret of the machine identity account
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *CreateMachineAccessTokenInput) Reset() {
	*x = CreateMachineAccessTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMachineAccessTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMachineAccessTokenInput) ProtoMessage() {}

func (x *CreateMachineAccessTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMachineAccessTokenInput.ProtoReflect.Descriptor instead.
func (*CreateMachineAccessTokenInput) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{12}
}

func (x *CreateMachineAccessTokenInput) GetMachineAccountEmail() string {
	if x != nil {
		return x.MachineAccountEmail
	}
	return ""
}

func (x *CreateMachineAccessTokenInput) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

// wrapper for access token
type AccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AccessToken) Reset() {
	*x = AccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessToken) ProtoMessage() {}

func (x *AccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessToken.ProtoReflect.Descriptor instead.
func (*AccessToken) Descriptor() ([]byte, []int) {
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP(), []int{13}
}

func (x *AccessToken) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_cloud_planton_apis_iam_v1_identityaccount_model_io_proto protoreflect.FileDescriptor

var file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDesc = []byte{
	0x0a, 0x38, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x67, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x6b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x10,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x5a, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x11,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x14, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5a, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x1a, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f,
	0x0a, 0x17, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x78, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24,
	0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x1c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x20, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x78,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x8f, 0x03,
	0x0a, 0x3d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42,
	0x07, 0x49, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x7a, 0x7a, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69,
	0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0xa2, 0x02, 0x07, 0x43, 0x50,
	0x41, 0x49, 0x56, 0x49, 0x4d, 0xaa, 0x02, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x2e, 0x49, 0x61, 0x6d, 0x2e, 0x56,
	0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0xca, 0x02, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5c,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49, 0x61, 0x6d,
	0x5c, 0x56, 0x31, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0xe2, 0x02, 0x3b, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x49,
	0x61, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x35, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x3a,
	0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x3a, 0x3a,
	0x49, 0x61, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescOnce sync.Once
	file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescData = file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDesc
)

func file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescGZIP() []byte {
	file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescOnce.Do(func() {
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescData)
	})
	return file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDescData
}

var file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_goTypes = []interface{}{
	(*IdentityAccounts)(nil),                 // 0: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccounts
	(*IdentityAccountId)(nil),                // 1: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccountId
	(*IdentityAccountEmail)(nil),             // 2: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccountEmail
	(*ListWithIdentityAccountIdReq)(nil),     // 3: cloud.planton.apis.iam.v1.identityaccount.model.ListWithIdentityAccountIdReq
	(*IdentityAccountsList)(nil),             // 4: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccountsList
	(*MachineAccountClientSecret)(nil),       // 5: cloud.planton.apis.iam.v1.identityaccount.model.MachineAccountClientSecret
	(*MachineAccountCompanyId)(nil),          // 6: cloud.planton.apis.iam.v1.identityaccount.model.MachineAccountCompanyId
	(*ListWithIdentityCompanyId)(nil),        // 7: cloud.planton.apis.iam.v1.identityaccount.model.ListWithIdentityCompanyId
	(*GetByCompanyByNameQueryInput)(nil),     // 8: cloud.planton.apis.iam.v1.identityaccount.model.GetByCompanyByNameQueryInput
	(*MembersCount)(nil),                     // 9: cloud.planton.apis.iam.v1.identityaccount.model.MembersCount
	(*MembersCountByCompanyIdInput)(nil),     // 10: cloud.planton.apis.iam.v1.identityaccount.model.MembersCountByCompanyIdInput
	(*MembersCountByEnvironmentIdInput)(nil), // 11: cloud.planton.apis.iam.v1.identityaccount.model.MembersCountByEnvironmentIdInput
	(*CreateMachineAccessTokenInput)(nil),    // 12: cloud.planton.apis.iam.v1.identityaccount.model.CreateMachineAccessTokenInput
	(*AccessToken)(nil),                      // 13: cloud.planton.apis.iam.v1.identityaccount.model.AccessToken
	(*IdentityAccount)(nil),                  // 14: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccount
	(*rpc.PageInfo)(nil),                     // 15: cloud.planton.apis.commons.rpc.PageInfo
}
var file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_depIdxs = []int32{
	14, // 0: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccounts.entries:type_name -> cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccount
	15, // 1: cloud.planton.apis.iam.v1.identityaccount.model.ListWithIdentityAccountIdReq.page:type_name -> cloud.planton.apis.commons.rpc.PageInfo
	14, // 2: cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccountsList.entries:type_name -> cloud.planton.apis.iam.v1.identityaccount.model.IdentityAccount
	15, // 3: cloud.planton.apis.iam.v1.identityaccount.model.ListWithIdentityCompanyId.page:type_name -> cloud.planton.apis.commons.rpc.PageInfo
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_init() }
func file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_init() {
	if File_cloud_planton_apis_iam_v1_identityaccount_model_io_proto != nil {
		return
	}
	file_cloud_planton_apis_iam_v1_identityaccount_model_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityAccountId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityAccountEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithIdentityAccountIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityAccountsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineAccountClientSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineAccountCompanyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithIdentityCompanyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByCompanyByNameQueryInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembersCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembersCountByCompanyIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembersCountByEnvironmentIdInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMachineAccessTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_goTypes,
		DependencyIndexes: file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_depIdxs,
		MessageInfos:      file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_msgTypes,
	}.Build()
	File_cloud_planton_apis_iam_v1_identityaccount_model_io_proto = out.File
	file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_rawDesc = nil
	file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_goTypes = nil
	file_cloud_planton_apis_iam_v1_identityaccount_model_io_proto_depIdxs = nil
}
