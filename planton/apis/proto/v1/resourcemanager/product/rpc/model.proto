syntax = "proto3";

package planton.apis.proto.v1.resourcemanager.product.rpc;

import "planton/apis/proto/v1/commons/audit/model.proto";
import "planton/apis/proto/v1/commons/resource/field/options/resource_field_options.proto";
import "planton/apis/proto/v1/commons/resource/options/resource_options.proto";
import "planton/apis/proto/v1/commons/resource/metadata/options/resource_metadata_options.proto";
import "planton/apis/proto/v1/commons/resource/model.proto";
import "planton/apis/proto/v1/stack/rpc/model.proto";

//product
message Product {
  option (planton.apis.proto.v1.commons.resource.options.resource_type) = product;
  option (planton.apis.proto.v1.commons.resource.options.is_runnable) = false;
  option (planton.apis.proto.v1.commons.resource.options.owner).type = company;
  option (planton.apis.proto.v1.commons.resource.options.owner).id_field_path = "spec.company_id";

  option (planton.apis.proto.v1.commons.resource.metadata.options.is_id_required) = false;
  //id format "<company-id>-<product-key>"
  option (planton.apis.proto.v1.commons.resource.metadata.options.is_id_computed) = true;
  //resource api-version
  string api_version = 1 [
    (planton.apis.proto.v1.commons.resource.field.options.is_required) = true
  ];

  //resource kind
  string kind = 2 [
    (planton.apis.proto.v1.commons.resource.field.options.is_required) = true
  ];

  //resource metadata
  planton.apis.proto.v1.commons.resource.Metadata metadata = 3;

  //spec
  ProductSpec spec = 4;

  //status
  ProductStatus status = 5;
}

//product spec
message ProductSpec {
  //company to which the product belongs to.
  string company_id = 1 [
    (planton.apis.proto.v1.commons.resource.field.options.is_required) = true,
    (planton.apis.proto.v1.commons.resource.field.options.is_immutable) = true
  ];

  //product key is a three character key for the product.
  //this key is unique with in the company.
  //product key length should be minimum 2 chars and maximum of 4 chars.
  //product-key is suffixed to the company-id to create product-id
  string product_key = 2 [
    (planton.apis.proto.v1.commons.resource.field.options.is_required) = true,
    (planton.apis.proto.v1.commons.resource.field.options.is_immutable) = true,
    (planton.apis.proto.v1.commons.resource.field.options.string_regex) = "^[a-z0-9]{2,5}$"
  ];

  //product description.
  string description = 3;
}

//product status
message ProductStatus {
  // resource lifecycle
  planton.apis.proto.v1.commons.resource.ResourceLifecycle lifecycle = 99;

  // system audit info
  planton.apis.proto.v1.commons.audit.SysAudit sys_audit = 98;

  // stack-job
  planton.apis.proto.v1.stack.rpc.StackJob stack_job = 97;
}

//list of products
message Products {
  repeated Product entries = 1;
}

//wrapper for product id
message ProductId {
  string value = 1;
}

//response for paginated query to get list of products
message ProductList {
  int32 total_pages = 1;
  repeated Product entries = 2;
}
