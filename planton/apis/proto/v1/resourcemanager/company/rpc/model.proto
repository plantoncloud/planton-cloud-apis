syntax = "proto3";

package planton.apis.proto.v1.resourcemanager.company.rpc;

import "planton/apis/proto/v1/commons/audit/model.proto";
import "planton/apis/proto/v1/commons/resource/field/options/resource_field_options.proto";
import "planton/apis/proto/v1/commons/resource/metadata/options/resource_metadata_options.proto";
import "planton/apis/proto/v1/commons/resource/model.proto";
import "planton/apis/proto/v1/commons/resource/options/resource_options.proto";
import "planton/apis/proto/v1/stack/rpc/model.proto";

// company on planton-cloud
message Company {
  option (planton.apis.proto.v1.commons.resource.options.resource_type) = company;
  option (planton.apis.proto.v1.commons.resource.options.is_runnable) = false;
  option (planton.apis.proto.v1.commons.resource.options.owner).type = identity_account;
  option (planton.apis.proto.v1.commons.resource.options.owner).id_field_path = "status.sys_audit.created_by";

  option (planton.apis.proto.v1.commons.resource.metadata.options.is_id_required) = true;
  //https://regex101.com/r/Ub9D3w/1
  option (planton.apis.proto.v1.commons.resource.metadata.options.id_regex) = "^[a-z0-9]{2,9}$";
  option (planton.apis.proto.v1.commons.resource.metadata.options.id_min_length) = 2;
  option (planton.apis.proto.v1.commons.resource.metadata.options.id_max_length) = 9;
  option (planton.apis.proto.v1.commons.resource.metadata.options.id_constraints_description) = "Id must be 2-9 lowercase letters or numbers";

  // resource api-version
  string api_version = 1 [
    (planton.apis.proto.v1.commons.resource.field.options.is_required) = true
  ];

  // resource kind
  string kind = 2 [
    (planton.apis.proto.v1.commons.resource.field.options.is_required) = true
  ];

  // metadata for the resource
  // id for this resource should not exceed 9 characters.
  planton.apis.proto.v1.commons.resource.Metadata metadata = 3;

  // company spec
  CompanySpec spec = 4;

  // company status
  CompanyStatus status = 5;
}

// CompanySpec is a message type that defines the specifications for a company.
message CompanySpec {
  // description for the company
  string description = 1;
}

// company status
message CompanyStatus {
  // resource lifecycle
  planton.apis.proto.v1.commons.resource.ResourceLifecycle lifecycle = 99;

  // system audit info
  planton.apis.proto.v1.commons.audit.SysAudit sys_audit = 98;

  // stack-job
  planton.apis.proto.v1.stack.rpc.StackJob stack_job = 97;

  // id of the service-account created on google-cloud for this company.
  // this service-account should be granted the required roles for planton-cloud to
  // be able to create resource in the customer's google-cloud account.
  string gcp_service_account_id = 1;

  // id of the secret on secrets-manager containing the service-account key credential.
  string gcp_service_account_key_secret_name = 2;
}

// list of companies
message Companies {
  repeated Company entries = 2;
}

//response for paginated list query
message CompanyList {
  int32 total_pages = 1;
  repeated Company entries = 2;
}

// wrapper for company id
message CompanyId {
  string value = 1;
}
