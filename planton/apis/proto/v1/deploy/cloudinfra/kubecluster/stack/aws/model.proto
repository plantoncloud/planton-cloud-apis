syntax = "proto3";

package planton.apis.proto.v1.deploy.cloudinfra.kubecluster.stack.aws;

import "planton/apis/proto/v1/commons/pulumi/operation/rpc/model.proto";
import "planton/apis/proto/v1/stack/rpc/model.proto";
import "planton/apis/proto/v1/resourcemanager/cloudaccount/rpc/model.proto";
import "planton/apis/proto/v1/deploy/cloudinfra/kubecluster/rpc/enums/enums.proto";
import "planton/apis/proto/v1/deploy/cloudinfra/kubecluster/rpc/model.proto";
import "planton/apis/proto/v1/deploy/cloudinfra/kubecluster/state/model.proto";

message KubeClusterAwsStackInput {
  // pulumi stack input
  planton.apis.proto.v1.commons.pulumi.operation.rpc.StackOperationInput operation_input = 1;
  // pulumi stack credentials
  KubeClusterAwsStackCredentialsInput credentials_input = 2;
  // inputs used for creating stack resources
  KubeClusterAwsStackResourceInput resource_input = 3;
}

// stack credentials input
message KubeClusterAwsStackCredentialsInput {
  //aws provider credential input
  planton.apis.proto.v1.commons.pulumi.operation.rpc.AwsProviderCredential aws = 1;
}

// stack resource input
message KubeClusterAwsStackResourceInput {
  //details of the kube-cluster
  planton.apis.proto.v1.deploy.cloudinfra.kubecluster.state.KubeClusterState kube_cluster = 1;
}

// stack outputs
message KubeClusterAwsStackOutputs {
  // id of the vpc in which the kube-cluster is created
  string cluster_vpc_id = 1;
  // kube-cluster endpoint
  string cluster_endpoint = 2;
  // kube-cluster ca data
  string cluster_ca_data = 3;
}

//stack response
message KubeClusterAwsStackResponse {
  //stack progress
  planton.apis.proto.v1.stack.rpc.StackProgress progress = 1;
  //stack outputs
  KubeClusterAwsStackOutputs outputs = 3;
}
