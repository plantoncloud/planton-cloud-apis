syntax = "proto3";

package planton.apis.proto.v1.integration.kubernetes.cost.rpc;

import "google/protobuf/timestamp.proto";
import "planton/apis/proto/v1/commons/audit/model.proto";
import "planton/apis/proto/v1/commons/resource/enums/enums.proto";
import "planton/apis/proto/v1/commons/rpc/pagination/model.proto";

//cost allocation
message CostAllocation {
  // system audit info
  planton.apis.proto.v1.commons.audit.SysAudit sys_audit = 99;

  string company_id = 1;
  string product_id = 2;
  string kube_cluster_id = 3;
  string environment_id = 4;
  string resource_type = 5;
  string resource_id = 6;
  string name = 7;
  string start_ts = 8;
  string end_ts = 9;
  double minutes = 10;
  double cpu_cores = 11;
  double cpu_core_request_average = 12;
  double cpu_core_usage_average = 13;
  double cpu_core_hours = 14;
  double cpu_cost = 15;
  double cpu_cost_adjustment = 16;
  double cpu_efficiency = 17;
  double gpu_count = 18;
  double gpu_hours = 19;
  double gpu_cost = 20;
  double gpu_cost_adjustment = 21;
  double network_transfer_bytes = 22;
  double network_receive_bytes = 23;
  double network_cost = 24;
  double network_cross_zone_cost = 25;
  double network_cross_region_cost = 26;
  double network_internet_cost = 27;
  double network_cost_adjustment = 28;
  double load_balancer_cost = 29;
  double load_balancer_cost_adjustment = 30;
  double pv_bytes = 31;
  double pv_byte_hours = 32;
  double pv_cost = 33;
  double pv_cost_adjustment = 34;
  double ram_bytes = 35;
  double ram_byte_request_average = 36;
  double ram_byte_usage_average = 37;
  double ram_byte_hours = 38;
  double ram_cost = 39;
  double ram_cost_adjustment = 40;
  double ram_efficiency = 41;
  double external_cost = 42;
  double shared_cost = 43;
  double total_cost = 44;
  double total_efficiency = 45;
}

//list of cost allocations
message CostAllocations {
  repeated CostAllocation entries = 1;
}

//response for paginated query to list cost allocations
message CostAllocationList {
  int32 total_pages = 1;
  repeated CostAllocation entries = 2;
}

//input for paginated rpc to get list of cost allocations for a resources based on provided filters.
message ListByCostAllocationFiltersInput {
  // page info
  planton.apis.proto.v1.commons.rpc.pagination.PageInfo page_info = 1;
  // start timestamp
  google.protobuf.Timestamp start_ts = 2;
  // end timestamp
  google.protobuf.Timestamp end_ts = 3;
  // id of the product
  string product_id = 4;
  // id of the environment for which the cost allocations are filtered for the resource requested.
  string environment_id = 5;
  // type of the resource on planton cloud.
  planton.apis.proto.v1.commons.resource.enums.ResourceType resource_type = 6;
  // id of the resource on planton cloud.
  // ex: ms-planton-pcs-product which is the id of the microservice.
  string resource_id = 7;
}

message GetCostAggregateInput {
  // type of the resource on planton cloud.
  planton.apis.proto.v1.commons.resource.enums.ResourceType resource_type = 1;
  // id of the resource on planton cloud.
  // ex: ms-planton-pcs-product which is the id of the microservice.
  string resource_id = 2;
  //start timestamp
  google.protobuf.Timestamp start_ts = 3;
  //end timestamp
  google.protobuf.Timestamp end_ts = 4;
}

// wrapper for cost aggregate
message CostAggregate {
  double value = 1;
}
