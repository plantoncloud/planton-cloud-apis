syntax = "proto3";

package planton.product.proto.v1.artifactstore.stack.gcp;

import "planton/apis/proto/v1/commons/pulumi/operation/rpc/model.proto";
import "planton/apis/proto/v1/stack/rpc/model.proto";
import "planton/apis/proto/v1/develop/artifactstore/state/model.proto";

//gcp artifact repo stack input
message ArtifactStoreGcpStackInput {
  //pulumi operation input
  planton.apis.proto.v1.commons.pulumi.operation.rpc.StackOperationInput operation_input = 1;
  //pulumi stack credentials
  ArtifactStoreGcpStackCredentialsInput credentials_input = 2;
  //inputs used for creating stack resources
  ArtifactStoreGcpStackResourceInput resource_input = 3;
}

//stack credentials input
message ArtifactStoreGcpStackCredentialsInput {
  //google provider credential input
  //this is only populated when the artifact-store repo provider is gcp.
  planton.apis.proto.v1.commons.pulumi.operation.rpc.GoogleProviderCredential google = 1;
}

//stack resource input
message ArtifactStoreGcpStackResourceInput {
  planton.product.proto.v1.artifactstore.state.ArtifactStoreState artifact_store = 1;
}

//gcp artifact repo stack outputs
message ArtifactStoreGcpStackOutputs {
  planton.product.proto.v1.artifactstore.state.ArtifactStoreGcpArtifactRegistryStatusState gcp_artifact_registry_status = 1;
}

//stack response
message ArtifactStoreGcpStackResponse {
  //stack progress
  planton.apis.proto.v1.stack.rpc.StackProgress progress = 1;
  //stack outputs
  ArtifactStoreGcpStackOutputs outputs = 3;
}
