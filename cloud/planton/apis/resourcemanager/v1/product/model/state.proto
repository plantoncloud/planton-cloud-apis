syntax = "proto3";

package cloud.planton.apis.resourcemanager.v1.product.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadataoptions/api_resource_metadata_message_options.proto";

//product
message Product {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = product;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = company;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.company_id";

  //id format "<company-id>-<product-key>"
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemetadataoptions.is_id_computed) = true;

  // resource api-version
  string api_version = 1 [
    (buf.validate.field).string.const = "resource-manager.planton.cloud/v1"
  ];

  // resource kind
  string kind = 2 [
    (buf.validate.field).string.const = "Product"
  ];

  //resource metadata
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3;

  //spec
  ProductSpec spec = 4;

  //status
  ProductStatus status = 5;
}

//product spec
message ProductSpec {
  //company to which the product belongs to.
  string company_id = 1 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_required) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_immutable) = true
  ];

  //product key is a three character key for the product.
  //this key is unique with in the company.
  //product key length should be minimum 2 chars and maximum of 4 chars.
  //product-key is suffixed to the company-id to create product-id
  string product_key = 2 [
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 5,
    (buf.validate.field).cel = {
      id: "spec.product_key",
      message: "Only lowercase letters and numbers are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.matches('^[a-z0-9]+$')"
    }
  ];

  //product description.
  string description = 3;

  // public url for the product logo
  string logo_url = 4;
}

//product status
message ProductStatus {
  // resource lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  // id of the stack-job
  string stack_job_id = 97;
}
