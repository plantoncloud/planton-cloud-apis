syntax = "proto3";

package cloud.planton.apis.integration.v1.gitlab.service;

import "cloud/planton/apis/code2cloud/v1/codeproject/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/codeproject/model/state.proto";
import "cloud/planton/apis/code2cloud/v1/codeserver/model/state.proto";
import "cloud/planton/apis/integration/v1/gitlab/model/io.proto";

//gitlab proxy query controller
service GitlabQueryController {
  //list projects for the requested group, including projects in sub-groups on gitlab
  //https://docs.gitlab.com/ee/api/groups.html#list-a-groups-projects
  //todo: we have to add pagination support for response.
  rpc listProjects(cloud.planton.apis.integration.v1.gitlab.model.ListProjectsQueryInput)
      returns (cloud.planton.apis.code2cloud.v1.codeproject.model.CodeProjectList);
  //get details of a project on gitlab
  rpc getProject(cloud.planton.apis.integration.v1.gitlab.model.GetProjectQueryInput)
      returns (cloud.planton.apis.code2cloud.v1.codeproject.model.CodeProject);
  //get details of a group on gitlab
  rpc getGroup(cloud.planton.apis.integration.v1.gitlab.model.GetGroupQueryInput)
      returns (cloud.planton.apis.code2cloud.v1.codeserver.model.CodeServer);
  //get code project profile of a code-project hosted on gitlab
  rpc getGitlabCodeProjectProfile(cloud.planton.apis.integration.v1.gitlab.model.GetGitlabCodeProjectProfileQueryInput)
      returns (cloud.planton.apis.code2cloud.v1.codeproject.model.CodeProjectProfile);
}
