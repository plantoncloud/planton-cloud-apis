syntax = "proto3";

package cloud.planton.apis.audit.v1.apiresourceversion.service;

import "cloud/planton/apis/audit/v1/apiresourceversion/model/state.proto";
import "cloud/planton/apis/audit/v1/apiresourceversion/model/io.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";

//api-resource-version query controller
service ApiResourceVersionQueryController {
  //look up a cloud-account by id
  //todo: add authorization
  rpc getById(cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourceVersionId)
      returns (cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourceVersion);

  // list of api-resource-versions
  rpc listByFilters(cloud.planton.apis.audit.v1.apiresourceversion.model.ListApiResourceVersionsInput)
      returns(cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourceVersionList);
  // look up api-resource-version by version-id
  rpc getByIdWithContextSize(cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourceVersionWithContextSizeInput)
      returns(cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourceVersion);
  // count of api-resource-versions
  rpc getCount(cloud.planton.apis.audit.v1.apiresourceversion.model.GetApiResourceVersionCountInput)
      returns(cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourceVersionCount);

  // getResourceCountByCompanyId retrieves detailed information about the count of different resources
  // associated with a given company. The request requires a GetResourceCountByCompanyIdInput message
  // containing the company_id of interest. It returns a ResourceCount message, which includes the type
  // and name of the resource along with its total count within the specified company.
  rpc getResourceCountByCompanyId(cloud.planton.apis.audit.v1.apiresourceversion.model.GetResourceCountByCompanyIdInput)
      returns (cloud.planton.apis.audit.v1.apiresourceversion.model.ApiResourcesCount) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = company;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = company_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "company_id";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to get resource count";
  }
}
