syntax = "proto3";

package cloud.planton.apis.auditing.v1.apiresourceversion.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/enums/apiresourcekind/api_resource_kind.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadataoptions/api_resource_metadata_message_options.proto";
import "cloud/planton/apis/iac/v1/stackjob/enums/stackjobexecutionstatustype/stack_job_execution_status_type.proto";

// The ApiResourceVersion message represents a record of a resource state modification
// in a system's resource. It stores the original and new states of the resource,
// the differences between them in a unified diff format, as well as audit and
// identification information.
message ApiResourceVersion {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = api_resource_version;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.is_runnable) = false;

  option (cloud.planton.apis.commons.apiresource.options.apiresourcemetadataoptions.id_prefix) = "ver";

  //resource api-version
  string api_version = 1 [
    (buf.validate.field).string.const = "auditing.planton.cloud/v1"
  ];

  //resource kind
  string kind = 2 [
    (buf.validate.field).string.const = "ApiResourceVersion"
  ];

  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3;

  // spec
  ApiResourceVersionSpec spec = 4;

  // status
  ApiResourceVersionSpec status = 5;
}

message ApiResourceVersionSpec {
  // The ID of the company to which the api-resource-version belongs.
  string company_id = 1;
  // The ID of the product to which the api-resource-version belongs.
  // This attribute is always empty for company level state.
  string product_id = 2;
  // The ID of the product environment to which the api-resource-version belongs.
  // This attribute is always empty for company level state.
  string environment_id = 3;
  // The type of the resource for which the version was created.
  // Resource types are defined in the ApiResourceKind enum.
  cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind resource_kind = 4;
  // The ID of the resource for which the version was created.
  string resource_id = 5;
  // The original state of the resource, represented as a YAML string.
  string original_state_yaml = 6;
  // The new state of the resource, represented as a YAML string.
  string new_state_yaml = 7;
  // The differences between the original and new state, represented in a unified diff format.
  string diff_unified_format = 8;
  // operation done on the state which ended up in creating this new version.
  string operation_type = 9;
  // unique identifier for the stack job.
  string stack_job_id = 10;
}

// api-resource-version status
message ApiResourceVersionStatus {
  // resource lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  // represents the current status of the stack job.
  cloud.planton.apis.iac.v1.stackjob.enums.stackjobexecutionstatustype.StackJobExecutionStatusType  status = 1;
}
