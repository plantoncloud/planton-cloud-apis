syntax = "proto3";

package cloud.planton.apis.iam.v1.identityaccount.model;

import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/rpc/pagination.proto";
import "cloud/planton/apis/iam/v1/identityaccount/model/state.proto";
import "buf/validate/validate.proto";

// wrapper to get list of identity accounts
message IdentityAccounts {
  repeated IdentityAccount entries = 1;
}

// wrapper for user identity account id.
message IdentityAccountId {
  string value = 1;
}

// wrapper for email of the identity account.
message IdentityAccountEmail {
  string value = 1;
}

// input for paginated queries that require identity account id as input.
message ListWithIdentityAccountIdReq {
  // identity account id
  string identity_account_id = 1;
  cloud.planton.apis.commons.rpc.PageInfo page = 2;
}

// response for paginated rpc query to list identity accounts.
message IdentityAccountsList {
  repeated IdentityAccount entries = 1;
  int32 total_pages = 2;
}

// wrapper for client_secret of the machine account
message MachineAccountClientSecret {
  string value = 1;
}

// wrapper for machine account organization id.
message MachineAccountOrgId {
  string value = 1;
}

// wrapper for identity account organization id.
message ListWithIdentityOrgId {
  string org_id = 1;
  cloud.planton.apis.commons.rpc.PageInfo page = 2;
}

message GetByOrganizationByNameQueryInput {
  string org_id = 1 [
    (buf.validate.field).string.min_len = 1
  ];
  string name = 2 [
    (buf.validate.field).string.min_len = 1
  ];
}

message MembersCount {
  int32 count = 1;
}

// MembersCountByOrgIdInput is designed for requests that need to determine the number of members
// associated exclusively with a given organization. This simplified input focuses solely on organization identification,
// making it suitable to aggregate members count at the organization level.
message MembersCountByOrgIdInput {
  // org_id uniquely identifies a organization within the system. The field accepts a string format.
  string org_id = 1;
}

// MembersCountByProductIdInput is designed for requests that need to determine the number of members
// associated exclusively with a given environment. This simplified input focuses solely on environment identification,
// making it suitable to aggregate members count at the environment level.
message MembersCountByEnvIdInput {
  // env_id uniquely identifies a environment within the system. The field accepts a string format.
  string env_id = 1;
}

// input for rpc to create access token for machine identity account
message CreateMachineAccessTokenInput {
  // email of machine identity account
  string machine_account_email = 1;
  // client secret of the machine identity account
  string client_secret = 2;
}

// wrapper for access token
message AccessToken {
  string value = 1;
}
