syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.elasticsearchkubernetes.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/resourcemanager/v1/environment/model/state.proto";
import "cloud/planton/apis/code2cloud/v1/kubecluster/enums/kubernetesworkloadingresstype/kubernetes_workload_ingress_type.proto";
import "cloud/planton/apis/code2cloud/v1/kubecluster/model/state.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";

//elasticsearch-kubernetes
message ElasticsearchKubernetes {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = elasticsearch_kubernetes;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = environment;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.environment_info.env_id";

  //id format "<id-prefix>-<env-id>-<normalized-resource-name>"
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemetadatamessageoptions.is_id_computed) = true;

  //resource api-version
  string api_version = 1;

  //resource kind
  string kind = 2;

  //resource metadata
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  ElasticsearchKubernetesSpec spec = 4;

  //status
  ElasticsearchKubernetesStatus status = 5;
}

//elasticsearch-kubernetes spec
message ElasticsearchKubernetesSpec {
  //environment-info
  cloud.planton.apis.resourcemanager.v1.environment.model.ApiResourceEnvironmentInfo environment_info = 1;

  //elasticsearch-container spec
  ElasticsearchKubernetesSpecContainerSpec container = 2 [
    (buf.validate.field).required = true
  ];

  //elasticsearch-kubernetes ingress-spec
  code2cloud.v1.kubecluster.model.IngressSpec ingress = 3;
}

//elasticsearch-kubernetes status.
message ElasticsearchKubernetesStatus {
  // resource lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  // id of the stack-job
  string stack_job_id = 97;

  ElasticsearchKubernetesStatusStackOutputs outputs = 1;
}

// elasticsearch-kubernetes kubernetes elasticsearch-container spec
message ElasticsearchKubernetesSpecContainerSpec {
  option (buf.validate.message).cel = {
    id: "spec.kubernetes.container.disk_size.mandatory",
    expression: "this.is_persistence_enabled && size(this.disk_size) == 0"
        "? 'disk size is mandatory to enable persistence'"
        ": ''"
  };
  //number of elasticsearch pods.
  //recommended default 1
  int32 replicas = 1 [
    (buf.validate.field).required = true
  ];

  //elasticsearch container cpu and memory resources.
  //recommended default "cpu-requests: 50m, memory-requests: 256Mi, cpu-limits: 1, memory-limits: 1Gi"
  cloud.planton.apis.code2cloud.v1.kubecluster.model.ContainerResources resources = 2 [
    (buf.validate.field).required = true
  ];

  //flag to toggle persistence for elasticsearch data.
  //when enabled, elasticsearch in-memory data will be persisted to a storage volume.
  //the backup data from persistent volume is restored into elasticsearch memory between pod restarts.
  //defaults to false.
  bool is_persistence_enabled = 3;

  //size of persistent volume attached to each elasticsearch pod
  //if the client does not provide a value, the default value is configured.
  //this attribute is ignored when persistence is not enabled.
  //this persistent volume is used for backing up in-memory data.
  //data from the persistent volume will be restored into memory between pod restarts.
  //this value can not be modified as kubernetes does not allow updating the stateful-set specification after creation.
  string disk_size = 4[
    (buf.validate.field).cel = {
      id: "spec.kubernetes.container.disk_size.is_valid",
      message: "disk size value is invalid",
      // https://regex101.com/r/EqH2xa/1
      expression: "this.matches('^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$') && size(this) > 0"
    }
  ];
}

message ElasticsearchKubernetesStatusStackOutputs {
  //kubernetes namespace in which elasticsearch-kubernetes is created.
  string namespace = 1;

  //kubernetes service name for elasticsearch-kubernetes.
  //ex: main-elasticsearch-kubernetes
  //in the above example, "main" is the name of the elasticsearch-kubernetes
  string service = 2;

  //command to setup port-forwarding to open elasticsearch-kubernetes from developers laptop.
  //this might come handy when elasticsearch-kubernetes ingress is disabled for security reasons.
  //this is rendered by combining elasticsearch_kubernetes_kubernetes_service and kubernetes_namespace
  //ex: kubectl port-forward svc/elasticsearch_kubernetes_kubernetes_service -n kubernetes_namespace 6379:6379
  //running the command from this attribute makes it possible to access elasticsearch-kubernetes using http://localhost:8080/elasticsearch
  string port_forward_command = 3;

  //kubernetes endpoint to connect to elasticsearch-kubernetes from the web browser.
  //ex: main-elasticsearch-kubernetes.namespace.svc.cluster.local:6379
  string kube_endpoint = 4;

  //public endpoint to open elasticsearch-kubernetes from clients outside kubernetes.
  //ex: https://elsk8s-planton-pcs-dev-main.data.dev.planton.live
  string external_hostname = 5;

  //internal endpoint to open elasticsearch-kubernetes from clients inside kubernetes.
  //ex: https://elsk8s-planton-pcs-dev-main.data-internal.dev.planton.live
  string internal_hostname = 6;
}
