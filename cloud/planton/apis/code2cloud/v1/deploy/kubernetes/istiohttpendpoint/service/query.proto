syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.customendpoint.service;

import "cloud/planton/apis/code2cloud/v1/customendpoint/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/customendpoint/model/state.proto";
import "cloud/planton/apis/commons/rpc/pagination.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/integration/v1/kubernetes/apiresources/model/io.proto";

//istio-http-endpoint query controller
service IstioHttpEndpointQueryController {
  //look up istio-http-endpoint using istio-http-endpoint id
  rpc getById(cloud.planton.apis.code2cloud.v1.customendpoint.model.IstioHttpEndpointId)
      returns (cloud.planton.apis.code2cloud.v1.customendpoint.model.IstioHttpEndpoint) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = istio_http_endpoint;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = istio_http_endpoint_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view istio-http-endpoint";
  }

  //check cert status for istio-http-endpoint
  rpc getIstioHttpEndpointCertStatus(cloud.planton.apis.code2cloud.v1.customendpoint.model.IstioHttpEndpointId)
      returns (cloud.planton.apis.code2cloud.v1.customendpoint.model.IstioHttpEndpointCertStatus) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = istio_http_endpoint;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = istio_http_endpoint_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to check istio-http-endpoint certificate status";
  }

  //check status of dns resolution for istio-http-endpoint.
  //confirms if the dns of the istio-http-endpoint domain is resolving to the correct address.
  rpc getIstioHttpEndpointDsnResolutionStatus(cloud.planton.apis.code2cloud.v1.customendpoint.model.IstioHttpEndpointId)
      returns (cloud.planton.apis.code2cloud.v1.customendpoint.model.IstioHttpEndpointDnsResolutionStatus) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = istio_http_endpoint;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = istio_http_endpoint_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to check istio-http-endpoint dnszone status";
  }
}
