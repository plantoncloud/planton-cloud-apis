syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.deploy.gcp.gcpartifactregistry.stack.gcp.model;

import "cloud/planton/apis/code2cloud/v1/deploy/gcp/gcpartifactregistry/model/state.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/credentials/io.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/progress/io.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/state.proto";

//gcp artifact repo stack input
message GcpArtifactRegistryGcpStackInput {
  //stack job
  cloud.planton.apis.iac.v1.stackjob.model.StackJob stack_job = 1;
  //pulumi stack credentials
  GcpArtifactRegistryGcpStackCredentialsInput credentials_input = 2;
  //inputs used for creating stack resources
  GcpArtifactRegistryGcpStackResourceInput resource_input = 3;
}

//stack credentials input
message GcpArtifactRegistryGcpStackCredentialsInput {
  //google provider credential input
  //this is only populated when the gcp-artifact-registry repo provider is gcp.
  cloud.planton.apis.iac.v1.stackjob.model.credentials.GoogleProviderCredential google = 1;
}

//stack resource input
message GcpArtifactRegistryGcpStackResourceInput {
  cloud.planton.apis.code2cloud.v1.deploy.gcp.gcpartifactregistry.model.GcpArtifactRegistry gcp_artifact_registry = 1;
}

//gcp artifact repo stack outputs
message GcpArtifactRegistryGcpStackOutputs {
  cloud.planton.apis.code2cloud.v1.deploy.gcp.gcpartifactregistry.model.GcpArtifactRegistryGcpArtifactRegistryStatus gcp_artifact_registry_status = 1;
}

//stack response
message GcpArtifactRegistryGcpStackResponse {
  //stack-job progress event
  cloud.planton.apis.iac.v1.stackjob.model.progress.StackJobProgressEvent progress_event = 1;
  //stack outputs
  GcpArtifactRegistryGcpStackOutputs outputs = 3;
}
