syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.deploy.aws.ekscluster.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/code2cloud/v1/deploy/aws/ekscluster/enums/eksworkersmanagementmode/eks_workers_management_mode.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";

// eks-cluster
message EksCluster {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = eks_cluster;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = organization;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.org_id";

  //id format "<id-prefix>-<env-id>-<normalized-resource-name>"
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemetadatamessageoptions.is_id_computed) = true;

  //resource api-version
  string api_version = 1;

  //resource kind
  string kind = 2;

  // resource metadata
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  // resource spec
  EksClusterSpec spec = 4;

  // resource status
  EksClusterStatus status = 5;
}

// EksClusterSpec is a message type that defines the specifications for a eks-cluster on Planton Cloud.
message EksClusterSpec {
  // org_id is a required, immutable field that uniquely identifies the organization associated with the eks-cluster.
  string org_id = 1  [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];

  //id of the aws cloud account to be used for creating eks-cluster resources.
  string aws_credential_id = 2 [
    (buf.validate.field).required = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_immutable) = true
  ];

  // valid aws region in which to create the eks-cluster.
  // warning: eks-cluster will recreated if this value is updated.
  // https://aws.amazon.com/about-aws/global-infrastructure/regions_az/
  string region = 3 [
    (buf.validate.field).required = true
  ];

  // (optional) id of the vpc to be used for creating eks-cluster.
  // if an id is not provided, a new vpc will be created.
  // warning: eks-cluster will be recreated if this is updated.
  string vpc_id = 4;

  // aws eks worker node-groups management mode
  cloud.planton.apis.code2cloud.v1.deploy.aws.ekscluster.enums.eksworkersmanagementmode.EksWorkersManagementMode workers_management_mode = 5 [
    (buf.validate.field).required = true
  ];
}

// eks-cluster status
message EksClusterStatus {
  // resource lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  // id of the stack-job
  string stack_job_id = 97;

  //stack-outputs
  //  eks-cluster stack-outputs
  EksClusterStatusStackOutputs stack_outputs = 1;
}

// eks-cluster stack-outputs
message EksClusterStatusStackOutputs {
  // id of the vpc in which the eks-cluster is created
  string cluster_vpc_id = 1;

  // eks-cluster endpoint.
  string cluster_endpoint = 2;

  // eks-cluster certificate-authority-data.
  // this value is updated upon successful eks-cluster creation stack-job.
  string cluster_ca_data = 3;
}
