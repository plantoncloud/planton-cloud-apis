syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.solrcloud.service;

import "cloud/planton/apis/code2cloud/v1/environment/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/kubecluster/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/solrcloud/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/solrcloud/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcerpcmethodoptions/api_resource_rpc_method_options.proto";
import "cloud/planton/apis/commons/rpc/pagination.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/integration/v1/kubernetes/apiresources/model/io.proto";
import "cloud/planton/apis/resourcemanager/v1/product/model/io.proto";

//solr-cloud query controller
service SolrCloudQueryController {
  //look up solr-cloud using solr-cloud id
  rpc getById(cloud.planton.apis.code2cloud.v1.solrcloud.model.SolrCloudId)
      returns (cloud.planton.apis.code2cloud.v1.solrcloud.model.SolrCloud) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = solr_cloud;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = solr_cloud_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view solr-cloud";
  }

  //look up solr-cloud sasl password
  //password is retrieved from the kubernetes cloud.
  rpc getPassword(cloud.planton.apis.code2cloud.v1.solrcloud.model.SolrCloudId)
      returns (cloud.planton.apis.code2cloud.v1.solrcloud.model.SolrCloudPassword) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = solr_cloud;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = solr_cloud_update;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view solr-cloud password";
  }
}
