syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.mongodbcluster.service;

import "cloud/planton/apis/code2cloud/v1/environment/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/kubecluster/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/mongodbcluster/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/mongodbcluster/model/state.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/rpc/pagination.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/integration/v1/kubernetes/apiresources/model/io.proto";
import "cloud/planton/apis/resourcemanager/v1/product/model/io.proto";

//mongodb-cluster query controller
service MongodbClusterQueryController {
  //list all mongodb-clusters on planton cluster for the requested page.
  rpc list(cloud.planton.apis.commons.rpc.PageInfo)
      returns (cloud.planton.apis.code2cloud.v1.mongodbcluster.model.MongodbClusterList) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = platform;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = back_office_admin;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_id = "planton-cloud";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view kube-clusters";
  }

  //look up mongodb-cluster using mongodb-cluster id
  rpc getById(cloud.planton.apis.code2cloud.v1.mongodbcluster.model.MongodbClusterId)
      returns (cloud.planton.apis.code2cloud.v1.mongodbcluster.model.MongodbCluster) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = mongodb_cluster;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = mongodb_cluster_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view mongodb-cluster";
  }

  //look up mongodb-cluster sasl password
  //password is retrieved from the kubernetes cluster.
  rpc getPassword(cloud.planton.apis.code2cloud.v1.mongodbcluster.model.MongodbClusterId)
      returns (cloud.planton.apis.code2cloud.v1.mongodbcluster.model.MongodbClusterPassword) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = mongodb_cluster;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = mongodb_cluster_update;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view mongodb-cluster password";
  }

  //lookup pods of a mongodb-cluster deployed to a environment
  rpc findPods(cloud.planton.apis.code2cloud.v1.mongodbcluster.model.MongodbClusterId)
      returns (cloud.planton.apis.integration.v1.kubernetes.apiresources.model.Pods) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = mongodb_cluster;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = mongodb_cluster_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view mongodb-cluster pods";
  }
}
