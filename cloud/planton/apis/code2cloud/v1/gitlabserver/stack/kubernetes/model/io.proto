syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.gitlabserver.stack.kubernetes.model;

import "cloud/planton/apis/code2cloud/v1/gitlabserver/model/state.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/credentials/io.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/state.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/progress/io.proto";

//input for gitlab-server stack
message GitLabServerKubernetesStackInput {
  //stack job
  cloud.planton.apis.iac.v1.stackjob.model.StackJob stack_job = 1;
  //pulumi stack credentials
  GitLabServerKubernetesStackCredentialsInput credentials_input = 2;
  //inputs used for creating stack resources
  GitLabServerKubernetesStackResourceInput resource_input = 3;
}

//stack credentials input
message GitLabServerKubernetesStackCredentialsInput {
  //kubernetes provider credential for creating gitlab-server resources on kubernetes cluster
  cloud.planton.apis.iac.v1.stackjob.model.credentials.KubernetesProviderCredential kubernetes = 1;
}

//stack resource input
message GitLabServerKubernetesStackResourceInput {
  //gitlab-server
  cloud.planton.apis.code2cloud.v1.gitlabserver.model.GitLabServer gitlab_server = 1;}

//gitlab-server stack outputs
message GitLabServerKubernetesStackOutputs {
  //status of the gitlab-server upon stack-job
  cloud.planton.apis.code2cloud.v1.gitlabserver.model.GitLabServerStatus gitlab_server_status = 1;
}

//stack response
message GitLabServerKubernetesStackResponse {
  //stack-job progress event
  cloud.planton.apis.iac.v1.stackjob.model.progress.StackJobProgressEvent progress_event = 1;
  //stack outputs
  GitLabServerKubernetesStackOutputs outputs = 3;
}
