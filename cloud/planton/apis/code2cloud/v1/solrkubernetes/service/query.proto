syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.solrkubernetes.service;

import "cloud/planton/apis/code2cloud/v1/environment/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/kubecluster/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/solrkubernetes/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/solrkubernetes/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcerpcmethodoptions/api_resource_rpc_method_options.proto";
import "cloud/planton/apis/commons/rpc/pagination.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/integration/v1/kubernetes/apiresources/model/io.proto";
import "cloud/planton/apis/resourcemanager/v1/product/model/io.proto";


//solr-kubernetes query controller
service SolrKubernetesQueryController {
  //look up solr-kubernetes using solr-kubernetes id
  rpc getById(cloud.planton.apis.code2cloud.v1.solrkubernetes.model.SolrKubernetesId)
      returns (cloud.planton.apis.code2cloud.v1.solrkubernetes.model.SolrKubernetes) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = solr_kubernetes;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = solr_kubernetes_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view solr-kubernetes";

    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.api_resource_state_operation_type) = read;
  }

  //look up solr-kubernetes sasl password
  //password is retrieved from the kubernetes cloud.
  rpc getPassword(cloud.planton.apis.code2cloud.v1.solrkubernetes.model.SolrKubernetesId)
      returns (cloud.planton.apis.code2cloud.v1.solrkubernetes.model.SolrKubernetesPassword) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = solr_kubernetes;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = solr_kubernetes_update;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view solr-kubernetes password";
  }
}
