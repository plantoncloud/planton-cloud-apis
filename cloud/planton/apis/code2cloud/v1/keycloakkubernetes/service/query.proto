syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.keycloakkubernetes.service;

import "cloud/planton/apis/code2cloud/v1/environment/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/kubecluster/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/keycloakkubernetes/model/io.proto";
import "cloud/planton/apis/code2cloud/v1/keycloakkubernetes/model/state.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/rpc/pagination.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/integration/v1/kubernetes/apiresources/model/io.proto";

//keycloak-kubernetes query controller
service KeycloakKubernetesQueryController {
  //look up keycloak-kubernetes using keycloak-kubernetes id
  rpc getById(cloud.planton.apis.code2cloud.v1.keycloakkubernetes.model.KeycloakKubernetesId)
      returns (cloud.planton.apis.code2cloud.v1.keycloakkubernetes.model.KeycloakKubernetes) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = keycloak_kubernetes;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = keycloak_kubernetes_get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view keycloak-kubernetes";
  }

  //look up keycloak-kubernetes sasl password
  //password is retrieved from the kubernetes cluster.
  rpc getPassword(cloud.planton.apis.code2cloud.v1.keycloakkubernetes.model.KeycloakKubernetesId)
      returns (cloud.planton.apis.code2cloud.v1.keycloakkubernetes.model.KeycloakKubernetesPassword) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = keycloak_kubernetes;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = keycloak_kubernetes_update;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to view keycloak-kubernetes password";
  }
}
