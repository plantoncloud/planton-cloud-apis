syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.kubernetes.istiohttpendpoint.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";

//istio-http-endpoint
message IstioHttpEndpoint {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = istio_http_endpoint;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = environment;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.environment_info.env_id";

  //id format "<id-prefix>-<env-id>-<normalized-resource-name>"
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemetadatamessageoptions.is_id_computed) = true;

  //resource api-version
  string api_version = 1;

  //resource kind
  string kind = 2;

  //resource metadata
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name should be any valid DNS Domain Name",
      // https://regex101.com/library/SEg6KL
      expression: "this.name.matches('^(?:[_a-z0-9](?:[_a-z0-9-]{0,61}[a-z0-9])?[.])+(?:[a-z](?:[a-z0-9-]{0,61}[a-z0-9])?)?$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 65 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 65"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  IstioHttpEndpointSpec spec = 4;

  //status
  IstioHttpEndpointStatus status = 5;
}

//istio-http-endpoint spec
message IstioHttpEndpointSpec {
  //the organization to which the istio-http-endpoint to be added.
  string org_id = 1 [
    (buf.validate.field).required = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_immutable) = true
  ];

  //the kube-cluster in which the istio-http-endpoint resources are created in.
  //value is computed from the backend-environment.
  string kube_cluster_id = 2 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];

  //istio-http-endpoint to which the requests to the endpoint domain are to be routed to.
  string backend_env_id = 3 [
    (buf.validate.field).required = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_immutable) = true
  ];

  //(optional for create) flag to toggle tls for istio-http-endpoint.
  //defaults to "false".
  //(important note) certificates are not created for endpoints that do not need tls.
  //(important note) endpoint domains with out tls enabled are not eligible to be used for
  //creating endpoints for postgres-clusters or kafka-clusters.
  bool is_tls_enabled = 4;

  //flag to control virtual service configuration compatible for grpc-web clients.
  //grpc-web clients would rely on extra headers added by envoy proxy.
  bool is_grpc_web_compatible = 5;

  //id of the project on google cloud containing the dns zone for the endpoint-domain.
  //this value is looked up from the dns-domains in the organization dns data.
  //this value is required for configuring the cert-issuer to perform dns validations.
  string dns_zone_gcp_project_id = 6 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];

  //external ingress ip.
  //ingress ip address configured for the ingress-endpoint-domain.
  //this value is computed from the kube-cluster.
  string external_ingress_ip = 7 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];

  //email of the service account created for cert-manager component on the kube-cluster in which the
  //istio-http-endpoint that the istio-http-endpoint belongs to.
  //this value is used for ensuring that the service account has required permissions to insert dns records in
  //the dns zone to be able to complete dns01 challenges.
  //this attribute is only populated if the istio-http-endpoint is hosted in a gcp kube-cluster.
  //this value is computed from the kube-cluster.
  string cert_manager_gsa_email = 8 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];

  //routes to configure backends for url paths of the domain.
  //routes allow configuring requests to be routed to different microservices based on the url path.
  //ex: if the endpoint domain name is console.example.com, then console.example.com/public/api/* can be
  //to be sent to public-api microservice and console.example.com/private/api/* can be configured to route to
  //route to private-api microservice.
  repeated IstioHttpEndpointRoute routes = 9;
}

//istio-http-endpoint status
message IstioHttpEndpointStatus {
  // resource lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  // id of the stack-job
  string stack_job_id = 97;

  //stack-outputs
  IstioHttpEndpointStackOutputs stack_outputs = 1;
}

//istio-http-endpoint stack-outputs
message IstioHttpEndpointStackOutputs {
  //name of the VirtualService resource created on kubernetes
  string virtual_service_name = 1;
  //name of the Secret resource created on kubernetes that contain cert secret
  string cert_secret_name = 2;
}

//istio-http-endpoint route
message IstioHttpEndpointRoute {
  string id = 1 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];
  //url path for the istio-http-endpoint route.
  //(important) url path prefix combined with istio_http_endpoint_id combined form the composite key.
  //(note) if endpoint domain name is console.example.com, and if the url_path_prefix is /api, then
  //all requests that match console.example.com/api/* are forwarded to the backend microservice configured in
  //this route.
  string url_path_prefix = 2 [
    (buf.validate.field).required = true
  ];

  //id of the backend microservice-instance to configure the forwarding rule.
  //ex: msi-planton-pcs-prod-organization-main
  string backend_microservice_instance_id = 3 [
    (buf.validate.field).required = true
  ];

  //service port to which the requests matching the url
  //defaults to 80 if the input contains 0.
  int32 backend_microservice_service_port = 4 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.int32_default) = 80
  ];

  //backend kubernetes endpoint to configure the forwarding rule.
  //this value is computed from the status of the configured microservice-instance
  string backend_kubernetes_endpoint = 5 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];
}
