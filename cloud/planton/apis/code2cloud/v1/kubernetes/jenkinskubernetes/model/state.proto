syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.kubernetes.jenkinskubernetes.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";
import "cloud/planton/apis/commons/kubernetes/model/state.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/state.proto";
import "cloud/planton/apis/resourcemanager/v1/environment/model/state.proto";

//jenkins-kubernetes
message JenkinsKubernetes {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = jenkins_kubernetes;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = environment;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.environment_info.env_id";

  //api-version
  string api_version = 1 [
    (buf.validate.field).string.const = 'code2cloud.planton.cloud/v1'
  ];

  //resource-kind
  string kind = 2;

  //metadata
  //id format "<id-prefix>-<env-id>-<normalized-resource-name>"
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  JenkinsKubernetesSpec spec = 4;

  //status
  JenkinsKubernetesStatus status = 5;
}

//jenkins-kubernetes spec
message JenkinsKubernetesSpec {
  //environment-info
  cloud.planton.apis.resourcemanager.v1.environment.model.ApiResourceEnvironmentInfo environment_info = 99;

  //stack-job settings
  cloud.planton.apis.iac.v1.stackjob.model.StackJobSettings stack_job_settings = 98;

  //kubernetes-cluster-credential-id to be used for setting up kubernetes-provider in stack-job
  string kubernetes_cluster_credential_id = 97;

  //jenkins-container spec
  JenkinsKubernetesSpecContainerSpec container = 1 [
    (buf.validate.field).required = true
  ];

  // helm_values is a map of key-value pairs that provide additional customization options for the Helm chart used
  // to deploy the Jenkins Kubernetes. These values allow for further refinement of the deployment, such as customizing
  // resource limits, setting environment variables, or specifying version tags. For detailed information on the available
  // options, refer to the Helm chart documentation at:
  // https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/values.yaml
  map<string, string> helm_values = 3;

  //jenkins-kubernetes ingress-spec
  cloud.planton.apis.commons.kubernetes.model.IngressSpec ingress = 4;
}

//jenkins-kubernetes status.
message JenkinsKubernetesStatus {
  //lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  //audit-info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  //stack-job id
  string stack_job_id = 97;

  //stack-outputs
  JenkinsKubernetesStackOutputs stack_outputs = 1;
}

// jenkins-kubernetes jenkins-container spec
message JenkinsKubernetesSpecContainerSpec {
  //jenkins container cpu and memory resources.
  //recommended default "cpu-requests: 50m, memory-requests: 256Mi, cpu-limits: 1, memory-limits: 1Gi"
  cloud.planton.apis.commons.kubernetes.model.ContainerResources resources = 1 [
    (buf.validate.field).required = true
  ];
}

//jenkins-kubernetes stack outputs.
message JenkinsKubernetesStackOutputs {
  //kubernetes namespace in which jenkins-kubernetes is created.
  string namespace = 1;

  string admin_username = 2;
  //kubernetes secret name for the admin credentials.
  string admin_password_secret_name = 3;

  //kubernetes service name for jenkins-kubernetes.
  //ex: main-jenkins-kubernetes
  //in the above example, "main" is the name of the jenkins-kubernetes
  string service = 4;

  //command to setup port-forwarding to open jenkins-kubernetes from developers laptop.
  //this might come handy when jenkins-kubernetes ingress is disabled for security reasons.
  //this is rendered by combining jenkins_kubernetes_kubernetes_service and kubernetes_namespace
  //ex: kubectl port-forward svc/jenkins_kubernetes_kubernetes_service -n kubernetes_namespace 8080:8080
  //running the command from this attribute makes it possible to access jenkins-kubernetes using http://localhost:8080
  string port_forward_command = 5;

  //kubernetes endpoint to connect to jenkins-kubernetes from the web browser.
  //ex: main-jenkins-kubernetes.namespace.svc.cluster.local:8080
  string kube_endpoint = 6;

  //public endpoint to open jenkins-kubernetes from clients outside kubernetes.
  //ex: https://jnk-planton-pcs-dev-main.data.dev.planton.live:8080
  string external_hostname = 7;

  //internal postgres-kubernetes hostname.
  //ex: https://jnk-planton-pcs-dev-main.data-internal.dev.planton.live:8080
  string internal_hostname = 8;
}
