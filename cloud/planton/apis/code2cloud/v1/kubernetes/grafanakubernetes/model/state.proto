syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.kubernetes.grafanakubernetes.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";
import "cloud/planton/apis/commons/kubernetes/model/state.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/state.proto";
import "cloud/planton/apis/resourcemanager/v1/environment/model/state.proto";

//grafana-kubernetes
message GrafanaKubernetes {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = grafana_kubernetes;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = environment;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.environment_info.env_id";

  //id format "<id-prefix>-<env-id>-<normalized-resource-name>"
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemetadatamessageoptions.is_id_computed) = true;

  //resource api-version
  string api_version = 1;

  //resource kind
  string kind = 2;

  //resource metadata
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  GrafanaKubernetesSpec spec = 4;

  //status
  GrafanaKubernetesStatus status = 5;
}

//grafana-kubernetes spec
message GrafanaKubernetesSpec {
  //environment-info
  cloud.planton.apis.resourcemanager.v1.environment.model.ApiResourceEnvironmentInfo environment_info = 99;

  //stack-job settings
  cloud.planton.apis.iac.v1.stackjob.model.StackJobSettings stack_job_settings = 98;

  //kubernetes-cluster-credential-id to be used for setting up kubernetes-provider in stack-job
  string kubernetes_cluster_credential_id = 97;

  //grafana-container spec
  GrafanaKubernetesSpecContainerSpec container = 1 [
    (buf.validate.field).required = true
  ];

  //grafana-kubernetes ingress-spec
  cloud.planton.apis.commons.kubernetes.model.IngressSpec ingress = 3;
}

//grafana-kubernetes status.
message GrafanaKubernetesStatus {
  // resource lifecycle
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.commons.apiresource.model.ApiResourceAudit audit = 98;

  // id of the stack-job
  string stack_job_id = 97;

  //stack-outputs
  GrafanaKubernetesStatusStackOutputs stack_outputs = 1;
}

// grafana-kubernetes kubernetes grafana-container spec
message GrafanaKubernetesSpecContainerSpec {
  //grafana container cpu and memory resources.
  //recommended default "cpu-requests: 50m, memory-requests: 256Mi, cpu-limits: 1, memory-limits: 1Gi"
  cloud.planton.apis.commons.kubernetes.model.ContainerResources resources = 1 [
    (buf.validate.field).required = true
  ];
}

//grafana-kubernetes stack outputs.
message GrafanaKubernetesStatusStackOutputs {
  //kubernetes namespace in which grafana-kubernetes is created.
  string namespace = 1;

  //kubernetes service name for grafana-kubernetes.
  //ex: main-grafana-kubernetes
  //in the above example, "main" is the name of the grafana-kubernetes
  string service = 2;

  //command to setup port-forwarding to open grafana-kubernetes from developers laptop.
  //this might come handy when grafana-kubernetes ingress is disabled for security reasons.
  //this is rendered by combining grafana_kubernetes_kubernetes_service and kubernetes_namespace
  //ex: kubectl port-forward svc/grafana_kubernetes_kubernetes_service -n kubernetes_namespace 6379:6379
  //running the command from this attribute makes it possible to access grafana-kubernetes using http://localhost:8080/grafana
  string port_forward_command = 3;

  //kubernetes endpoint to connect to grafana-kubernetes from the web browser.
  //ex: main-grafana-kubernetes.namespace.svc.cluster.local:6379
  string kube_endpoint = 4;

  //public endpoint to open grafana-kubernetes from clients outside kubernetes.
  //ex: https://gfnk8s-planton-pcs-dev-main.data.dev.planton.live
  string external_hostname = 5;

  //internal endpoint to open grafana-kubernetes from clients outside kubernetes.
  //ex: https://gfnk8s-planton-pcs-dev-main.data-internal.dev.planton.live
  string internal_hostname = 6;
}
