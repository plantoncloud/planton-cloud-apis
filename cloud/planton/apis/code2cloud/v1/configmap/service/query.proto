syntax = "proto3";

package cloud.planton.apis.code2cloud.v1.configmap.service;

import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/code2cloud/v1/configmap/model/state.proto";
import "cloud/planton/apis/code2cloud/v1/configmap/model/io.proto";

//config-map query controller
service ConfigMapQueryController {
  // lookup a config-map using config-map
  rpc getById(cloud.planton.apis.code2cloud.v1.configmap.model.ConfigMapId) returns (cloud.planton.apis.code2cloud.v1.configmap.model.ConfigMap) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = config_map;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = get;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).field_path = "value";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized lookup config-map";
  }
}
