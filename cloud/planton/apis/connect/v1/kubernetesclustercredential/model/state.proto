syntax = "proto3";

package cloud.planton.apis.connect.v1.kubernetesclustercredential.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";
import "cloud/planton/apis/connect/v1/kubernetesclustercredential/enums/kubernetesprovider/kubernetes_provider.proto";

//kubernetes-cluster-credential
message KubernetesClusterCredential {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = kubernetes_cluster_credential;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = organization;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.org_id";

  //api-version
  string api_version = 1;

  //resource-kind
  string kind = 2;

  //metadata
  //id format "<id-prefix>-<org-id>-<normalized-resource-name>"
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name Must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  KubernetesClusterCredentialSpec spec = 4;

  //status
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycleAndAuditStatus status = 5;
}

//kubernetes-cluster-credential spec
message KubernetesClusterCredentialSpec {
  // if of organization to which the credential belongs to
  string org_id = 1 [
    (buf.validate.field).required = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_immutable) = true,
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).cel = {
      id: "spec.gcp.org_id",
      message: "Only numbers (0-9) are allowed",
      expression: "this.matches('^[0-9]+$')"
    }
  ];

  // The DNS domain of the Google Cloud Organization, optional during creation.
  string org_domain = 2;

  // The GCP Billing Account ID that will be linked to the projects created for shared services. Required during creation.
  string billing_account_id = 3 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).cel = {
      id: "spec.gcp.billing_account_id",
      message: "Only alphanumeric characters (A-Z,a-z, 0-9) and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.matches('^[A-Za-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "spec.gcp.billing_account_id",
      message: "Must not start with a hyphen",
      // https://regex101.com/r/t1LOCE/1
      expression: "this.matches('^[^-].*$')"
    },
    (buf.validate.field).cel = {
      id: "spec.gcp.billing_account_id",
      message: "Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.matches('[^-]$')"
    }
  ];

  // Name of the secret containing the value of the service-account key in the secrets manager.
  // name of the secret is in the format `projects/<project-id>/secrets/<secret-name>`
  // This is computed automatically by the Platon Cloud system.
  // The value is derived from the organization-status object
  string service_account_key_secret_name = 4 [
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_computed) = true
  ];
}

