syntax = "proto3";

package cloud.planton.apis.connect.v1.pulumibackendcredential.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/enums/apiresourcekind/api_resource_kind.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";
import "cloud/planton/apis/connect/v1/pulumibackendcredential/enums/pulumibackendtype/pulumi_backend_type.proto";

//pulumi-backend-credential
message PulumiBackendCredential {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = pulumi_backend_credential;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = organization;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.org_id";

  //api-version
  string api_version = 1 [
    (buf.validate.field).string.const = 'connect.planton.cloud/v1'
  ];

  //resource-kind
  string kind = 2;

  //metadata
  //id format "<id-prefix>-<org-id>-<normalized-resource-name>"
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3;

  //spec
  PulumiBackendCredentialSpec spec = 4;

  //status
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycleAndAuditStatus status = 5;
}

//pulumi-backend-credential spec
message PulumiBackendCredentialSpec {
  // id of the organization to which the pulumi-backend-credential belongs to.
  string org_id = 1 [
    (buf.validate.field).required = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourcefieldoptions.is_immutable) = true
  ];

  //name of the pulumi organization
  string pulumi_organization = 2 [
    (buf.validate.field).required = true
  ];

  // provider for pulumi-backend-credential
  // https://www.pulumi.com/docs/concepts/state
  cloud.planton.apis.connect.v1.pulumibackendcredential.enums.pulumibackendtype.PulumiBackendType pulumi_backend_type = 3;

  // local-file-system backend spec
  PulumiBackendCredentialLocalFileSystemBackendSpec local_file_system_backend = 4;

  // http backend spec
  PulumiBackendCredentialHttpBackendSpec http_backend = 5;

  // aws-s3 backend spec
  PulumiBackendCredentialAwsS3BackendSpec aws_s3_backend = 6;

  // google-cloud-storage backend spec
  PulumiBackendCredentialGcsBucketBackendSpec google_cloud_storage_backend = 7;

  // azure-blob-storage backend spec
  PulumiBackendCredentialAzureBlobStorageBackendSpec azure_blob_storage_backend = 8;
}

//pulumi-backend-credential spec for local-file-system backend
//https://www.pulumi.com/docs/concepts/state/#local-filesystem
message PulumiBackendCredentialLocalFileSystemBackendSpec {
  //state-file path
  string state_file_path = 1;
}

//pulumi-backend-credential spec for http backend
// hosted http backend provided by Pulumi Inc is is https://pulumi.cloud
message PulumiBackendCredentialHttpBackendSpec {
  //api base url
  //this will be https://api.pulumi.com for Hosted Pulumi Cloud
  string api_url = 1;
  //access token to be used for authorization
  string access_token = 2;
}

//pulumi-backend-credential spec for aws-s3 backend
//https://www.pulumi.com/docs/concepts/state/#aws-s3
message PulumiBackendCredentialAwsS3BackendSpec {
  //name of s3-bucket
  string s3_bucket = 1;
  //aws region
  string region = 2;
  //aws-access-key-id
  string aws_access_key_id = 3;
  //aws-secret-key-id
  string aws_secret_key_id = 4;
}

//pulumi-backend-credential spec for google-cloud-storage backend
//https://www.pulumi.com/docs/concepts/state/#google-cloud-storage
message PulumiBackendCredentialGcsBucketBackendSpec {
  //name of gcs-bucket
  string gcs_bucket = 1;
  //base64 encoded gcp service-account-key
  string gcp_service_account_key_base64 = 2;
}

//pulumi-backend-credential spec for azure-blob-storage backend
// https://www.pulumi.com/docs/concepts/state/#azure-blob-storage
message PulumiBackendCredentialAzureBlobStorageBackendSpec {
  //name of azure blob storage container
  string blob_storage_container = 1;
  //azure storage-account-name
  string storage_account_name = 2;
  //azure storage-account-key
  string storage_account_key = 3;
}
