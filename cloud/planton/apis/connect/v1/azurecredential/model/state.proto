syntax = "proto3";

package cloud.planton.apis.connect.v1.azurecredential.model;

import "buf/validate/validate.proto";
import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcefieldoptions/api_resource_field_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemessageoptions/api_resource_message_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcemetadatamessageoptions/api_resource_metadata_message_options.proto";
import "cloud/planton/apis/resourcemanager/v1/environment/model/state.proto";

//azure-credential
message AzureCredential {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.resource_kind) = azure_credential;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).resource_kind = environment;
  option (cloud.planton.apis.commons.apiresource.options.apiresourcemessageoptions.owner).id_field_path = "spec.environment_info.env_id";

  //api-version
  string api_version = 1 [
    (buf.validate.field).string.const = 'connect.planton.cloud/v1'
  ];

  //resource-kind
  string kind = 2;

  //metadata
  //id format "<id-prefix>-<org-id>-<normalized-resource-name>"
  cloud.planton.apis.commons.apiresource.model.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Only lowercase letters, numbers, and hyphens are allowed",
      // https://regex101.com/r/NKTohE/1
      expression: "this.name.matches('^[a-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name Must start with a lowercase letter",
      // https://regex101.com/r/qpK7XF/1
      expression: "this.name.matches('^[a-z].*$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name Must not end with a hyphen",
      // https://regex101.com/r/reQjcB/1
      expression: "this.name.matches('[^-]$')"
    },
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 1 and 30 characters long",
      expression: "size(this.name) > 0 && size(this.name) <= 30"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  //spec
  AzureCredentialSpec spec = 4;

  //status
  cloud.planton.apis.commons.apiresource.model.ApiResourceLifecycleAndAuditStatus status = 5;
}

//azure-credential spec
message AzureCredentialSpec {
  //environment-info
  cloud.planton.apis.resourcemanager.v1.environment.model.ApiResourceEnvironmentInfo environment_info = 99;

  // azure client id
  string client_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).ignore_empty = true
  ];

  // azure client secret
  string client_secret = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).ignore_empty = true
  ];

  // azure tenant id
  string tenant_id = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).ignore_empty = true
  ];

  // azure subscription id
  string subscription_id = 4 [
    (buf.validate.field).required = true,
    (buf.validate.field).ignore_empty = true
  ];
}
