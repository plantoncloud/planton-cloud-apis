syntax = "proto3";

package cloud.planton.apis.v1.stack.state;

import "cloud/planton/apis/v1/commons/rpc/pagination/model.proto";
import "cloud/planton/apis/v1/commons/audit/model.proto";
import "cloud/planton/apis/v1/commons/resource/enums/enums.proto";
import "cloud/planton/apis/v1/stack/rpc/enums/enums.proto";

// stack-job state
message StackJobState {
  // system-audit information
  cloud.planton.apis.v1.commons.audit.SysAudit sys_audit = 99;
  // unique identifier(uuid) for stack-job
  string id = 1;
  // id of the company to which the stack-job belongs to
  string company_id = 2;
  // id of the product to which the stack-job belongs to
  // note: this attribute is always empty for company level stacks
  string product_id = 3;
  // id of the product-env to which the stack-job belongs to
  // note: this attribute is always empty for company level stacks
  string environment_id = 4;
  // resource type for which the stack is executed
  string resource_type = 5;
  // id of the resource for which the stack is executed
  string resource_id = 6;
  // name of the stack
  string stack_name = 7;
  // (required) stack operation type
  string operation_type = 8;
  // path of the log file in the storage bucket
  string log_file = 9;
  // status of the stack-job
  string status = 10;
  // url of the stack-job on pulumi web console.
  // note: this value is not persisted in the database.
  // the value of this attributes is rendered by replacing the placeholders in
  // "https://app.pulumi.com/${pulumiOrgName}/${pulumiProject}/${pulumiStackName}"
  // value of pulumiOrgName is same for every single stack for each planton-cloud environment.
  // value of pulumiProject is the company-id on planton-cloud.
  // value of pulumiStack is stack_name attribute in this object.
  // ex: https://app.pulumi.com/plantonstack-prod/cookie/afs-cookie-shop-main.ca-planton-hosting-gcp-main.artifact-store
  string web_url = 11;
  // content of the log file.
  // note: log content is not persisted in the database.
  // log-content will only be included in response for stack-job details rpc calls.
  string log_content = 12;
  // error message from stack-job. this attribute is only populated when stack-job-status is "failed"
  string error_message = 13;
  // resource-count
  int32 resource_count = 14;
}
