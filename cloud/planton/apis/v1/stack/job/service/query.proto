syntax = "proto3";

package cloud.planton.apis.v1.stack.job.service;

import "cloud/planton/apis/v1/commons/grpc/stream/model.proto";
import "cloud/planton/apis/v1/commons/resource/model/state.proto";
import "cloud/planton/apis/v1/stack/job/model/io.proto";
import "cloud/planton/apis/v1/stack/job/model/state.proto";
import "cloud/planton/apis/v1/stack/job/progress/model/io.proto";
import "cloud/planton/apis/v1/stack/job/progress/snapshot/model/io.proto";
import "cloud/planton/apis/v1/stack/pulumi/engine/model/io.proto";

service StackJobQueryController {
  //list of stack-jobs
  //todo: need to add authorization
  rpc listByFilters(cloud.planton.apis.v1.stack.job.model.ListStackJobsByFiltersQueryInput)
      returns(cloud.planton.apis.v1.stack.job.model.StackJobList);
  //look up stack-job by stack-job-id
  //todo: need to add authorization
  rpc getById(cloud.planton.apis.v1.stack.job.model.StackJobId)
      returns(cloud.planton.apis.v1.stack.job.model.StackJob);
  //rpc to get stack-job progress event stream
  //this rpc is required to support pulumi progress or diff view in the cli client which is an interactive client.
  rpc getProgressEventStream(cloud.planton.apis.v1.stack.job.model.StackJobId)
      returns(stream cloud.planton.apis.v1.stack.job.progress.model.StackJobProgressEvent);
  //rpc to get snapshot of stack-job log
  //response is optimized to display the stack-job log on non-interactive client-apps
  rpc getStackJobLogSnapshotStream(cloud.planton.apis.v1.stack.job.model.StackJobId)
      returns (stream cloud.planton.apis.v1.stack.job.progress.snapshot.model.StackJobLogSnapshot);
  // getStackJobMinutesMTBByCompanyId retrieves the total running minutes of stack jobs associated with a specific company.
  // This call is essential for systems needing to monitor, report, or bill based on the duration of stack jobs executed
  // within the context of a company. It requires a GetStackJobMinutesByCompanyIdInput message containing the company_id
  // for which the stack job minutes are being queried and returns a StackJobMinutesMTB message containing the total minutes.
  rpc getStackJobMinutesMTDByCompanyId(cloud.planton.apis.v1.stack.job.model.GetStackJobMinutesByCompanyIdInput)
      returns (cloud.planton.apis.v1.stack.job.model.StackJobMinutesMTD);
  // getResourceCountByCompanyId retrieves detailed information about the count of different resources
  // associated with a given company. The request requires a GetResourceCountByCompanyIdInput message
  // containing the company_id of interest. It returns a ResourceCount message, which includes the type
  // and name of the resource along with its total count within the specified company.
  rpc getResourceCountByCompanyId(cloud.planton.apis.v1.stack.job.model.GetResourceCountByCompanyIdInput)
      returns (cloud.planton.apis.v1.stack.job.model.ResourcesCount);
  // getPulumiResourceCountByCompanyId is an RPC that queries the total count of Pulumi resources
  // associated with a specified company. This operation requires an input of type
  // GetPulumiResourceCountByCompanyIdInput, which includes the company_id to identify the target
  // company. It returns a TotalPulumiResourceCount message, encapsulating the aggregate count of
  // Pulumi resources managed under the given company's account. This service is essential for
  // organizations utilizing Pulumi for infrastructure as code (IaC) to monitor and manage their
  // cloud resource utilization, facilitating effective resource planning, auditing, and optimization.
  rpc getPulumiResourceCountByCompanyId(cloud.planton.apis.v1.stack.job.model.GetPulumiResourceCountByCompanyIdInput)
      returns (cloud.planton.apis.v1.stack.job.model.TotalPulumiResourceCount);
}
