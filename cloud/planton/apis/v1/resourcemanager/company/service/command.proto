syntax = "proto3";

package cloud.planton.apis.v1.resourcemanager.company.service;

import "cloud/planton/apis/v1/commons/resource/model/io.proto";
import "cloud/planton/apis/v1/iam/authz/extensions/extensions.proto";
import "cloud/planton/apis/v1/resourcemanager/company/model/state.proto";

//company command controller
service CompanyCommandController {
  //create a new company on planton cloud
  rpc create(cloud.planton.apis.v1.resourcemanager.company.model.Company) returns (cloud.planton.apis.v1.resourcemanager.company.model.Company);
  //update an existing company on planton cloud
  rpc update(cloud.planton.apis.v1.resourcemanager.company.model.Company) returns (cloud.planton.apis.v1.resourcemanager.company.model.Company) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = company;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = company_update;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "metadata.id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to update company";
  }
  //delete an existing company on planton cloud using company id
  rpc delete(cloud.planton.apis.v1.commons.resource.model.ApiResourceRefreshCommandInput) returns (cloud.planton.apis.v1.resourcemanager.company.model.Company) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = company;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = company_delete;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "resource_id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to delete company";
  }
  //restore a previously deleted company.
  rpc restore(cloud.planton.apis.v1.resourcemanager.company.model.Company) returns (cloud.planton.apis.v1.resourcemanager.company.model.Company) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = company;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = company_restore;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "metadata.id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to restore company";
  }
}
