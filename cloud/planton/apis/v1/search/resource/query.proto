syntax = "proto3";

package cloud.planton.apis.v1.search.resource;

import "cloud/planton/apis/v1/commons/rpc/pagination/io.proto";
import "cloud/planton/apis/v1/search/resource/io.proto";

// SearchQueryController is a service that provides search functionality
// related to specific companies and products.
// It defines an RPC method, SearchByText, which accepts a text-based search
// input and returns a response.
service SearchQueryController {
  // SearchByText is an RPC method that takes a SearchByTextInput message
  // containing the company identifier, product identifier, and search text.
  // This method is responsible for performing a text-based search query
  // related to the specified company and product, and it returns a response
  // containing the search results.
  rpc searchByText(SearchByTextInput) returns (ResourceList);

  // The `searchByResourceTypeInput` RPC service method enables clients to execute a search operation
  // based on a specific resource type within a specified company's product.

  // The input parameters for this operation are packaged into a `SearchByResourceTypeInput` message,
  // which includes the unique identifiers for the company and the product, the resource type, and
  // pagination information for retrieving specific paginated data.

  // This method returns a `ResourceList` message, which encapsulates a list of resources that match
  // the input search parameters. Each resource in the list should match the specified resource type,
  // and be associated with the specified company and product.
  rpc searchByResourceType(SearchByResourceTypeInput) returns (ResourceList);
  // The `searchIdentityAccountByEmail` RPC service method enables clients to execute a search operation
  // based on a specific email within a specified company's context.

  // The input parameters for this operation are packaged into a `SearchIdentityAccountByEmailInput` message,
  // which includes the unique identifier for the company, the email (or part of it) to be used for the search,
  // and pagination information for retrieving specific paginated data.

  // This method returns a `ResourceList` message, which encapsulates a list of identities that match
  // the input search parameters. Each identity in the list should be associated with the specified company
  // and match the specified email or part thereof.
  rpc searchIdentityAccountByEmail(SearchIdentityAccountByEmailInput) returns (ResourceList);

}
