syntax = "proto3";

package cloud.planton.apis.v1.code2cloud.develop.sourcecode.pipeline.service;

import "cloud/planton/apis/v1/code2cloud/develop/sourcecode/project/model/io.proto";
import "cloud/planton/apis/v1/code2cloud/develop/sourcecode/project/model/state.proto";
import "cloud/planton/apis/v1/iam/authz/extensions/extensions.proto";

//code pipeline command controller
service CodePipelineCommandController {
  //add or update magic pipeline for a code project
  rpc addOrUpdatePipeline(cloud.planton.apis.v1.code2cloud.develop.sourcecode.project.model.CodeProjectId)
      returns (cloud.planton.apis.v1.code2cloud.develop.sourcecode.project.model.CodeProject)  {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = code_project;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = code_project_update;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "value";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to integration code pipeline for code project";
  }
}
