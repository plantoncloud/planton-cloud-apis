syntax = "proto3";

package cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.state;

import "cloud/planton/apis/v1/commons/audit/model.proto";
import "cloud/planton/apis/v1/commons/resource/model.proto";
import "cloud/planton/apis/v1/commons/resource/options/resource_options.proto";
import "cloud/planton/apis/v1/stack/state/model.proto";
import "cloud/planton/apis/v1/code2cloud/develop/sourcecode/server/state/enums/enums.proto";

//code-server state
message CodeServerState {
  option (cloud.planton.apis.v1.commons.resource.options.resource_type) = code_server;
  option (cloud.planton.apis.v1.commons.resource.options.is_runnable) = false;
  option (cloud.planton.apis.v1.commons.resource.options.owner).type = product;
  option (cloud.planton.apis.v1.commons.resource.options.owner).id_field_path = "spec.product_id";

  //event-type
  cloud.planton.apis.v1.code2cloud.develop.sourcecode.server.state.enums.CodeServerEventType event_type = 99;

  //resource api version
  string api_version = 1;

  //resource kind
  string kind = 2;

  //resource metadata
  cloud.planton.apis.v1.commons.resource.Metadata metadata = 3;

  //spec
  CodeServerSpecState spec = 4;

  //status
  CodeServerStatusState status = 5;
}

//code-server spec state
message CodeServerSpecState {
  //Specifies the company to which the code server belongs.
  //This value is computed from the product.
  string company_id = 1;

  //Specifies the product to which the code server belongs.
  string product_id = 2;

  //Specifies the host of the code server, such as "https://github.com".
  string code_server_host = 3;

  //Specifies the provider for the code server.
  string code_server_provider = 4;

  //github spec
  CodeServerGithubSpecState github = 5;

  //gitlab spec
  CodeServerGitlabSpecState gitlab = 6;
}

//github code-server spec
message CodeServerGithubSpecState {
  //id of the github organization
  string org_id = 1;

  //ID of the Github App installation provided by Github after successful app installation via OAuth flow.
  int64 app_install_id = 2;

  //Specifies the owner type for Github App installation: User or Org.
  string app_install_owner_type = 3;
}

//gitlab code-server spec
message CodeServerGitlabSpecState {
  //name or numerical identifier for gitlab group
  //This value is primarily used in the code project synchronization process.
  string group_id = 1;

  //Access Token to integrate with the Gitlab server.
  //This value is acquired by browser authorization flow when code server is added via Planton Cloud Console App.
  string access_token = 2;

  //Refresh token used to fetch a new access token when the current one expires.
  string refresh_token = 3;
}

//code-server status state
message CodeServerStatusState {
  // resource lifecycle
  cloud.planton.apis.v1.commons.resource.ResourceLifecycle lifecycle = 99;

  // system audit info
  cloud.planton.apis.v1.commons.audit.SysAudit sys_audit = 98;

  // stack-job info
  cloud.planton.apis.v1.stack.state.ResourceStackJobInfoState stack_job_info = 97;
}
