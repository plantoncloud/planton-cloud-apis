syntax = "proto3";

package cloud.planton.apis.v1.code2cloud.develop.sourcecode.server;

import "cloud/planton/apis/v1/code2cloud/develop/sourcecode/server/model/io.proto";
import "cloud/planton/apis/v1/code2cloud/develop/sourcecode/server/model/state.proto";
import "cloud/planton/apis/v1/commons/rpc/pagination/model.proto";
import "cloud/planton/apis/v1/iam/authz/extensions/extensions.proto";
import "cloud/planton/apis/v1/resourcemanager/product/model/io.proto";

//code server query controller
service CodeServerQueryController {
  //list all code servers on planton cloud for the requested page. This is intended for use on portal.
  rpc list(cloud.planton.apis.v1.commons.pagination.PageInfo) returns(CodeServerList);

  //look up a code server using code server id
  rpc getById(CodeServerId) returns (CodeServer) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = code_server;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = code_server_get;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "value";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to view code server";
  }

  //find code servers by product id.
  //response contains only objects that the authenticated user account id has viewer access to.
  rpc findByProductId(cloud.planton.apis.v1.resourcemanager.product.model.ProductId) returns (CodeServers);
}
