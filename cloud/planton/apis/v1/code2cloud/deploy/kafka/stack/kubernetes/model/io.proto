syntax = "proto3";

package cloud.planton.apis.v1.code2cloud.deploy.kafka.stack.kubernetes.model;

import "cloud/planton/apis/v1/code2cloud/deploy/kafka/model/state.proto";
import "cloud/planton/apis/v1/commons/pulumi/operation/model/io.proto";
import "cloud/planton/apis/v1/stack/job/model/state.proto";
import "cloud/planton/apis/v1/stack/job/progress/model/io.proto";

//input for kafka-cluster kubernetes stack
message KafkaClusterKubernetesStackInput {
  //stack job
  cloud.planton.apis.v1.stack.job.model.StackJob stack_job = 1;
  //pulumi stack credentials
  KafkaClusterKubernetesStackCredentialsInput credentials_input = 2;
  //inputs used for creating stack resources
  KafkaClusterKubernetesStackResourceInput resource_input = 3;
}

//stack credentials input
message KafkaClusterKubernetesStackCredentialsInput {
  //kubernetes provider credential for creating kafka-cluster resources on kubernetes cluster
  cloud.planton.apis.v1.commons.pulumi.operation.model.KubernetesProviderCredential kubernetes = 1;
}

//stack resource input
message KafkaClusterKubernetesStackResourceInput {
  //kafka-cluster
  cloud.planton.apis.v1.code2cloud.deploy.kafka.KafkaCluster kafka_cluster = 1;
}

//kafka-cluster kubernetes stack outputs
message KafkaClusterKubernetesStackOutputs {
  //kafka-cluster status
  cloud.planton.apis.v1.code2cloud.deploy.kafka.KafkaClusterStatus kafka_cluster_status = 1;
}

//stack response
message KafkaClusterKubernetesStackResponse {
  //stack-job progress event
  cloud.planton.apis.v1.stack.job.progress.model.StackJobProgressEvent progress_event = 1;
  //stack outputs
  KafkaClusterKubernetesStackOutputs outputs = 3;
}
