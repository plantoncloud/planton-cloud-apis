syntax = "proto3";

package cloud.planton.apis.v1.code2cloud.deploy.redis.stack.kubernetes;

import "cloud/planton/apis/v1/commons/pulumi/operation/model.proto";
import "cloud/planton/apis/v1/stack/model.proto";
import "cloud/planton/apis/v1/code2cloud/deploy/kubecluster/enums/enums.proto";
import "cloud/planton/apis/v1/code2cloud/deploy/redis/model.proto";

//input for redis-cluster stack
message RedisClusterKubernetesStackInput {
  //stack job
  cloud.planton.apis.v1.stack.StackJob stack_job = 1;
  //pulumi stack credentials
  RedisClusterKubernetesStackCredentialsInput credentials_input = 2;
  //inputs used for creating stack resources
  RedisClusterKubernetesStackResourceInput resource_input = 3;
}

//stack credentials input
message RedisClusterKubernetesStackCredentialsInput {
  //kubernetes provider credential for creating redis-cluster resources on container cluster
  cloud.planton.apis.v1.commons.pulumi.operation.KubernetesProviderCredential kubernetes = 1;
}

//stack resource input
message RedisClusterKubernetesStackResourceInput {
  //redis-cluster
  cloud.planton.apis.v1.code2cloud.deploy.redis.RedisCluster redis_cluster = 1;}

//redis-cluster stack outputs
message RedisClusterKubernetesStackOutputs {
  //status of the redis-cluster upon stack-job
  cloud.planton.apis.v1.code2cloud.deploy.redis.RedisClusterStatus redis_cluster_status = 1;
}

//stack response
message RedisClusterKubernetesStackResponse {
//stack-job progress event
  cloud.planton.apis.v1.stack.StackJobProgressEvent progress_event = 1;
  //stack outputs
  RedisClusterKubernetesStackOutputs outputs = 3;
}
