syntax = "proto3";

package cloud.planton.apis.v1.code2cloud.deploy.solr.stack.kubernetes.model;

import "cloud/planton/apis/v1/code2cloud/deploy/solr/model/state.proto";
import "cloud/planton/apis/v1/commons/pulumi/operation/model/io.proto";
import "cloud/planton/apis/v1/stack/job/model/state.proto";
import "cloud/planton/apis/v1/stack/job/progress/model/io.proto";

//input for solr-cloud stack
message SolrCloudKubernetesStackInput {
  //stack job
  cloud.planton.apis.v1.stack.job.model.StackJob stack_job = 1;
  //pulumi stack credentials
  SolrCloudKubernetesStackCredentialsInput credentials_input = 2;
  //inputs used for creating stack resources
  SolrCloudKubernetesStackResourceInput resource_input = 3;
}

//stack credentials input
message SolrCloudKubernetesStackCredentialsInput {
  //kubernetes provider credential for creating solr-cloud resources on container cloud
  cloud.planton.apis.v1.commons.pulumi.operation.model.KubernetesProviderCredential kubernetes = 1;
}

//stack resource input
message SolrCloudKubernetesStackResourceInput {
  //solr-cloud
  cloud.planton.apis.v1.code2cloud.deploy.solr.model.SolrCloud solr_cloud = 1;
}

//solr-cloud stack outputs
message SolrCloudKubernetesStackOutputs {
  //status of the solr-cloud upon stack-job
  cloud.planton.apis.v1.code2cloud.deploy.solr.model.SolrCloudStatus solr_cloud_status = 1;
}

//stack response
message SolrCloudKubernetesStackResponse {
  //stack-job progress event
  cloud.planton.apis.v1.stack.job.progress.model.StackJobProgressEvent progress_event = 1;
  //stack outputs
  SolrCloudKubernetesStackOutputs outputs = 3;
}
