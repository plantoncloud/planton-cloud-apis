syntax = "proto3";

package cloud.planton.apis.v1.iam.identity.account;

import "cloud/planton/apis/v1/commons/resource/io.proto";
import "cloud/planton/apis/v1/commons/rpc/pagination/io.proto";
import "cloud/planton/apis/v1/iam/authz/extensions/extensions.proto";
import "cloud/planton/apis/v1/iam/identity/account/io.proto";
import "cloud/planton/apis/v1/iam/identity/account/state.proto";

// machine-account command controller
service MachineAccountCommandController {
  // create new machine account
  rpc create(IdentityAccount) returns (IdentityAccount) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = company;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = identity_account_create;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "spec.company_id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to create machine account";
  }
  // update an existing machine account
  rpc update(IdentityAccount) returns (IdentityAccount) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = identity_account;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = identity_account_update;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "metadata.id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to update machine account";
  }
  // delete an existing machine account
  rpc delete(cloud.planton.apis.v1.commons.resource.ApiResourceDeleteCommandInput) returns (IdentityAccount) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = identity_account;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = identity_account_delete;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "resource_id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to delete machine account";
  }
  // restore an existing machine account
  rpc restore(IdentityAccount) returns (IdentityAccount) {
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).resource_type = identity_account;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).permission = identity_account_restore;
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).field_path = "metadata.id";
    option (cloud.planton.apis.v1.iam.authz.extensions.authorization_config).error_msg = "unauthorized to restore machine account";
  }
}
