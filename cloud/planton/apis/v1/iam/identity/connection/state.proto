syntax = "proto3";

package cloud.planton.apis.v1.iam.identity.connection;

import "cloud/planton/apis/v1/commons/audit/model.proto";
import "cloud/planton/apis/v1/commons/resource/field/options/resource_field_options.proto";
import "cloud/planton/apis/v1/commons/resource/model.proto";
import "cloud/planton/apis/v1/commons/resource/options/resource_options.proto";
import "cloud/planton/apis/v1/commons/rpc/pagination/model.proto";
import "cloud/planton/apis/v1/iam/identity/connection/provider/enums/enums.proto";

//identity-connection used for linking a company's identity provider with planton cloud
message IdentityConnection {
  option (cloud.planton.apis.v1.commons.resource.options.resource_type) = identity_connection;
  option (cloud.planton.apis.v1.commons.resource.options.owner).type = company;
  option (cloud.planton.apis.v1.commons.resource.options.owner).id_field_path = "spec.company_id";

  // resource api version
  string api_version = 1 [
    (cloud.planton.apis.v1.commons.resource.field.options.is_required) = true
  ];

  // resource kind
  string kind = 2[
    (cloud.planton.apis.v1.commons.resource.field.options.is_required) = true
  ];

  // metadata for the resource
  // id:
  //
  // naming convention "<idc>-<company_id>-<connection_name>".
  // backend ignores the value provided by the client.
  //
  // name:
  //
  // a user preferred name of the identity connection.
  // (important) spaces and special characters are not allowed except for hyphens.
  cloud.planton.apis.v1.commons.resource.Metadata metadata = 3;

  // resource spec
  IdentityConnectionSpec spec = 4;

  // resource status
  IdentityConnectionStatus status = 5;
}

//specification for identity-connection
message IdentityConnectionSpec {
  // id of the company owning the identity connection.
  string company_id = 1;

  // type of the identity connection.
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.IdentityConnectionType connection_type = 2;

  // (read-only) id assigned by auth0 upon successful creation of the enterprise connection.
  // this value is required to query auth0 system to get the details of the connection.
  string identity_connection_id_on_idp = 5;

  // (read-only) url of the identity connection on idp.
  // this is constructed when a client requests for the account object.
  // the format of the url for machine accounts is https://manage.auth0.com/dashboard/us/<tenant>/connections/enterprise/<connection-type-on-auth0>/<connection-id-on-auth0>/settings
  // ex: https://manage.auth0.com/dashboard/us/planton-pcs-dev/connections/enterprise/google-apps/con_DBlqRlQ8dsPCvZnj/settings
  string idp_url = 6;

  // saml connection details.
  // this is conditionally required only when the connection type is "saml"
  SamlConnection saml_connection = 7;

  // ldap connection details.
  // this is conditionally required only when the connection type is "ldap"
  LdapConnection ldap_connection = 8;

  // adfs connection details.
  // this is conditionally required only when the connection type is "adfs"
  AdfsConnection adfs_connection = 9;

  // openid connection details.
  // this is conditionally required only when the connection type is "openid"
  OpenidConnection openid_connection = 10;

  // okta workforce connection details.
  // this is conditionally required only when the connection type is "okta_workforce"
  OktaWorkforceConnection okta_workforce_connection = 11;

  // azure active identity native connection details.
  // this is conditionally required only when the connection type is "azure_active_identity_native"
  AzureActiveDirectoryNativeConnection azure_active_identity_native_connection = 12;

  // ping federate connection details.
  // this is conditionally required only when the connection type is "ping_federate"
  PingFederateConnection ping_federate_connection = 13;
}

//status for identity-connection
message IdentityConnectionStatus {
  // lifecycle of the resource
  cloud.planton.apis.v1.commons.resource.ResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.v1.commons.audit.ResourceAudit audit = 98;
}

message SamlConnection {
  string sign_in_url = 1;
  string x509_signing_cert_base64 = 2;
  bool enable_sign_out = 3;
  string sign_out_url = 4;
  string user_id_attribute = 5;
  bool sign_request = 6;
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.SamlSignRequestAlgorithm sign_request_algorithm = 7;
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.SamlSignRequestAlgorithmDigest sign_request_algorithm_digest = 8;
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.SamlProtocolBinding protocol_binding = 9;
}

message PingFederateConnection {
  string server_url = 1;
  string x509_signing_cert_base64 = 2;
  bool sign_request = 3;
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.SamlSignRequestAlgorithm sign_request_algorithm = 4;
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.SamlSignRequestAlgorithmDigest sign_request_algorithm_digest = 5;
}

message LdapConnection {
  repeated string idp_domains = 1;
  bool is_cache_disabled = 2;
  bool is_client_ssl_certificate_authentication_required = 3;
  bool is_kerberos_enabled = 4;
}

message OpenidConnection {
  string issue_url = 1;
  string client_id = 2;
  string callback_url = 3;
}

//active identity federation services connection
message AdfsConnection {
  string adfs_metadata_url = 1;
  string adfs_metadata_federation_file_base64 = 2;
}

message OktaWorkforceConnection {
  string okta_domain = 1;
  string client_id = 2;
  string client_secret = 3;
  string callback_url = 4;
}

message AzureActiveDirectoryNativeConnection {
  string microsoft_azure_ad_domain = 1;
  string client_id = 2;
  string client_secret = 3;
  bool use_common_endpoint = 4;
  cloud.planton.apis.v1.iam.identity.connection.provider.enums.MicrosoftIdentityApi identity_api = 5;
}
