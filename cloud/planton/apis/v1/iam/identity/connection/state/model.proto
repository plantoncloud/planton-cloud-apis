syntax = "proto3";

package cloud.planton.apis.v1.iam.identity.connection.state;

import "cloud/planton/apis/v1/commons/audit/model.proto";
import "cloud/planton/apis/v1/commons/resource/model.proto";
import "cloud/planton/apis/v1/commons/resource/options/resource_options.proto";
import "cloud/planton/apis/v1/stack/state/model.proto";
import "cloud/planton/apis/v1/iam/identity/connection/state/enums/enums.proto";

message IdentityConnectionState {
  option (cloud.planton.apis.v1.commons.resource.options.resource_type) = identity_connection;
  option (cloud.planton.apis.v1.commons.resource.options.owner).type = company;
  option (cloud.planton.apis.v1.commons.resource.options.owner).id_field_path = "spec.company_id";

  // event_type is event that resulted in the new state which often is a result of processing a command
  cloud.planton.apis.v1.iam.identity.connection.state.enums.IdentityConnectionEventType event_type = 99;
  // resource api version
  string api_version = 1;

  // resource kind
  string kind = 2;

  // metadata for the resource
  // id:
  //
  // naming convention "<idc>-<company_id>-<connection_name>".
  // backend ignores the value provided by the client.
  //
  // name:
  //
  // a user preferred name of the identity connection.
  // (important) spaces and special characters are not allowed except for hyphens.
  cloud.planton.apis.v1.commons.resource.Metadata metadata = 3;

  // resource spec
  IdentityConnectionSpecState spec = 4;

  // resource status
  IdentityConnectionStatusState status = 5;
}

// identity connection used for linking a company's identity provider with planton cloud.
message IdentityConnectionSpecState {
  // id of the company owning the identity connection.
  string company_id = 1;
  // type of the identity connection.
  string connection_type = 2;
  // a user preferred name of the identity connection.
  // (important) spaces and special characters are not allowed except for hyphens.
  string connection_name = 3;
  // (read-only) this is generated by planton cloud.
  // naming convention "<dc>-<company_id>-<connection_name>.
  // backend ignores the value provided by the client.
  string identity_connection_id = 4;
  // (read-only) id assigned by auth0 upon successful creation of the enterprise connection.
  // this value is required to query auth0 system to get the details of the connection.
  string identity_connection_id_on_idp = 5;
  // (read-only) url of the identity connection on idp.
  // this is constructed when a client requests for the account object.
  // the format of the url for machine accounts is https://manage.auth0.com/dashboard/us/<tenant>/connections/enterprise/<connection-type-on-auth0>/<connection-id-on-auth0>/settings
  // ex: https://manage.auth0.com/dashboard/us/planton-pcs-dev/connections/enterprise/google-apps/con_DBlqRlQ8dsPCvZnj/settings
  string idp_url = 6;
  // saml input for sign in url
  string sign_in_url = 7;
  // saml input for x509_signing_cert_base64
  // this is also used in ping federate
  string x509_signing_cert_base64 = 8;
  // saml input for enable_sign_out
  bool enable_sign_out = 9;
  // saml input for sign_out_url
  string sign_out_url = 10;
  // saml input for user_id_attribute
  string user_id_attribute = 11;
  // saml input for sign_request
  // this is also used in ping federate
  bool sign_request = 12;
  // saml input for sign_request_algorithm
  // this is also used in ping federate
  string sign_request_algorithm = 13;
  // saml input for sign_request_algorithm_digest
  // this is also used in ping federate
  string sign_request_algorithm_digest = 14;
  // saml input for protocol_binding
  string protocol_binding = 15;
  // ping federate input for server_url
  string ping_federate_server_url = 16;
  // ldap connection input for idp_domains
  repeated string idp_domains = 17;
  // ldap connection input for is_cache_disabled
  bool is_cache_disabled = 18;
  // ldap connection input for is_client_ssl_certificate_authentication_required
  bool is_client_ssl_certificate_authentication_required = 19;
  // ldap connection input for is_kerberos_enabled
  bool is_kerberos_enabled = 20;
  // open id connection input for issue_url
  string issue_url = 21;
  // open id connection input for client_id
  // this is also used in okta workforce / AzureActiveDirectoryNativeConnection
  string client_id = 22;
  // open id connection input for callback_url
  // this is also used in okta workforce
  string callback_url = 23;
  // adfs connection input for adfs_metadata_url
  string adfs_metadata_url = 24;
  // adfs connection input for adfs_metadata_federation_file
  string adfs_metadata_federation_file_base64 = 25;
  // okta workforce input for okta domain
  string okta_domain = 26;
  // okta workforce input for client_secret
  // this is also used in AzureActiveDirectoryNativeConnection
  string client_secret = 27;
  // azure active directory native connection input for microsoft_azure_ad_domain
  string microsoft_azure_ad_domain = 28;
  // azure active directory native connection input for use_common_endpoint
  bool use_common_endpoint = 29;
  // azure active directory native connection input for identity_api
  string identity_api = 30;
}

//status for identity-connection
message IdentityConnectionStatusState {
  // lifecycle of the resource
  cloud.planton.apis.v1.commons.resource.ResourceLifecycle lifecycle = 99;

  // system audit info
  cloud.planton.apis.v1.commons.audit.SysAudit sys_audit = 98;

  // info of the stack-job that produced the status
    string stack_job_id = 97;
}
