syntax = "proto3";

package cloud.planton.apis.v1.iam.authz.role.model;

import "cloud/planton/apis/v1/commons/audit/model/state.proto";
import "cloud/planton/apis/v1/commons/resource/enums/enums.proto";
import "cloud/planton/apis/v1/commons/resource/field/options/resource_field_options.proto";
import "cloud/planton/apis/v1/commons/resource/model/state.proto";

// iam-role
message IamRole {
  // resource api version
  string api_version = 1 [
    (cloud.planton.apis.v1.commons.resource.field.options.is_required) = true
  ];

  // resource kind
  string kind = 2[
    (cloud.planton.apis.v1.commons.resource.field.options.is_required) = true
  ];

  // metadata for the resource
  // id:
  // identifier for iam role
  //
  // name:
  //
  // name of the iam role.
  cloud.planton.apis.v1.commons.resource.model.Metadata metadata = 3;

  // resource spec
  IamRoleSpec spec = 4;

  // resource status
  IamRoleStatus status = 5;
}

//specification for iam-role
message IamRoleSpec {
  // code of role that is used in FGA model
  string role_code = 1;
  // identifies the principal type that would be used to create relation with the resource
  // example values are user/company etc.
  string principal_type = 2;
  // type of the resource the role belongs to
  cloud.planton.apis.v1.commons.resource.enums.ApiResourceKind resource_type = 3;
  // description of iam role
  string description = 4;
  // flag to identify if the role can be used to grant public access
  // by public it is to grant access to all companies in the platform
  bool is_public = 5;
}

//status for iam-role
message IamRoleStatus {
  // lifecycle of the resource
  cloud.planton.apis.v1.commons.resource.model.ResourceLifecycle lifecycle = 99;

  // resource audit info
  cloud.planton.apis.v1.commons.audit.model.ApiResourceAudit audit = 98;
}
