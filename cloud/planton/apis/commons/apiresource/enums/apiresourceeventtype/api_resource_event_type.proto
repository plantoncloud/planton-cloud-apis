syntax = "proto3";

package cloud.planton.apis.commons.apiresource.enums.apiresourceeventtype;

import "cloud/planton/apis/commons/apiresource/options/apiresourceeventtypeenumoptions/api_resource_event_type_enum_options.proto";

//enumeration of the union of all event types used across all the api resources.
//this is used for specifying the event type produced by rpc methods in command controllers.
//using different enum for these event types while specifying in rpc methods and individual api resource would
// work because the events are eventually converted to strings during message passing.
enum ApiResourceEventType {
  unspecified = 0;
  created = 1 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Created"
  ];
  updated = 2 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Updated"
  ];
  deleted = 3 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Deleted"
  ];
  restored = 4 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Restored"
  ];
  paused = 5 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Paused"
  ];
  unpaused = 6 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_spec_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Unpaused"
  ];
  stack_job_progress_updated = 7 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_event) = true
  ];
  stack_job_refresh_requested = 8 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Refresh"
  ];
  stack_job_refresh_completed = 9 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_event) = true
  ];
  stack_job_apply_preview_requested = 10 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Preview"
  ];
  stack_job_apply_requested = 11 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Apply"
  ];
  stack_job_apply_completed = 12 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_event) = true
  ];
  stack_job_destroy_preview_requested = 13 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Preview"
  ];
  stack_job_destroy_requested = 14 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_stack_event) = true,
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.display_name) = "Destroy"
  ];
  stack_job_destroy_completed = 15 [
    (cloud.planton.apis.commons.apiresource.options.apiresourceeventtypeenumoptions.is_status_event) = true
  ];
}
