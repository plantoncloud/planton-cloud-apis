syntax = "proto3";

package cloud.planton.apis.commons.apiresource.service;

import "cloud/planton/apis/commons/apiresource/model/io.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";

service ApiResourceListViewQueryController {
  // The `listByResourceKind` RPC service method enables clients to execute a search operation
  // based on a specific resource type within a specified organization and environment context.

  // The input parameters for this operation are packaged into a `GetByApiResourceKindInput` message,
  // which includes the unique identifiers for the organization and the environment, the resource type, and
  // pagination information for retrieving specific paginated data.

  // This method returns a `ResourceList` message, which encapsulates a list of resources that match
  // the input search parameters. Each resource in the list should match the specified resource type,
  // and be associated with the specified organization and environment.
  rpc listByResourceKind(cloud.planton.apis.commons.apiresource.model.GetByApiResourceKindInput)
      returns (cloud.planton.apis.commons.apiresource.model.ApiResourceRecordList) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.is_skip_authorization) = true;
  }

  // The `listByResourceKind` RPC service method enables clients to execute a search operation
  // based on a specific resource type.

  // The input parameters for this operation are packaged into a `ListByResourceKindWithoutContext` message,
  // which includes the resource type, and pagination information for retrieving specific paginated data.

  // This method returns a `ResourceList` message, which encapsulates a list of resources that match
  // the input search parameters. Each resource in the list should match the specified resource type,
  rpc listByResourceKindWithoutContext(cloud.planton.apis.commons.apiresource.model.ListByResourceKindWithoutContext)
      returns (cloud.planton.apis.commons.apiresource.model.ApiResourceRecordList) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = platform;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = back_office_admin;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_id = "planton-cloud";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to list resources by kind";
  }
}
