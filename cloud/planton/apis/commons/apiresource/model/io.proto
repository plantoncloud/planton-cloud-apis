syntax = "proto3";

package cloud.planton.apis.commons.apiresource.model;

import "cloud/planton/apis/commons/apiresource/enums/apiresourcekind/api_resource_kind.proto";

// A message defining the ownership of a resource.
message ApiResourceOwnerInfo {
  // The type of the owner, defined in the ApiResourceKind enum.
  cloud.planton.apis.commons.apiresource.enums.apiresourcekind.ApiResourceKind resource_kind = 1;
  // The field path of the owner id in a api-resource spec.
  string id_field_path = 2;
}

// wrapper for api-resource-id
message ApiResourceId {
  string value = 1;
}

// input for rpc to delete or previewing delete for any api resource
message ApiResourceDeleteCommandInput {
  //id of the resource.
  string resource_id = 1;
  // A descriptive message explaining the reason for deleting the resource. This is used for audit purposes.
  // For example, "Deleting as it is no longer needed".
  string version_message = 2;
}

// input for rpc to pause or previewing pause for any api resource
message ApiResourcePauseCommandInput {
  //id of the resource.
  string resource_id = 1;
  // A descriptive message explaining the reason for pausing the resource. This is used for audit purposes.
  // For example, "pause as it is temporarily not needed".
  string version_message = 2;
}

// input for rpc to un pause or previewing un pause for any api resource
message ApiResourceUnPauseCommandInput {
  //id of the resource.
  string resource_id = 1;
  // A descriptive message explaining the reason for un pausing the resource. This is used for audit purposes.
  // For example, "un pause as the resource is now required again".
  string version_message = 2;
}

// input for rpc to refresh or previewing refresh for any api resource
message ApiResourceRefreshCommandInput {
  //id of the resource.
  string resource_id = 1;
  // A descriptive message explaining the reason for refreshing the resource. This is used for audit purposes.
  // For example, "refreshing the state to update computed fields".
  string version_message = 2;
}


// resource group version kind
// this is only used in cli to load any api-resource yaml manifest and detect api-resource kind
message ResourceGroupVersionKind {
  string api_version = 1 [json_name = "apiVersion"];
  string kind = 2;
}
