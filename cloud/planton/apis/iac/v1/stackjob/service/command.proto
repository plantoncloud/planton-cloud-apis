syntax = "proto3";

package cloud.planton.apis.iac.v1.stackjob.service;

import "cloud/planton/apis/commons/apiresource/model/state.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/io.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/progress/io.proto";
import "cloud/planton/apis/iac/v1/stackjob/model/state.proto";
import "cloud/planton/apis/iam/v1/iampolicy/options/rpcauthorizationmethodoptions/rpc_authorization_method_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcerpcmethodoptions/api_resource_rpc_method_options.proto";
import "cloud/planton/apis/commons/apiresource/options/apiresourcerpcserviceoptions/api_resource_rpc_service_options.proto";

service StackJobCommandController {
  option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcserviceoptions.api_resource_kind) = stack_job;
  //create stack-job
  rpc create(cloud.planton.apis.iac.v1.stackjob.model.StackJob) returns (cloud.planton.apis.iac.v1.stackjob.model.StackJob) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = platform;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = platform_microservice_account;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_id = "planton-cloud";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to create stack job";

    // api resource rpc method options
    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.event_type) = created;
    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.api_resource_state_operation_type) = create;
    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.is_api_resource_new_version_required) = true;
  }
  //update stack-job
  rpc update(cloud.planton.apis.iac.v1.stackjob.model.StackJob) returns (cloud.planton.apis.iac.v1.stackjob.model.StackJob) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = platform;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = platform_microservice_account;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_id = "planton-cloud";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to update stack job";

    // api resource rpc method options
    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.event_type) = updated;
    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.api_resource_state_operation_type) = update;
    option (cloud.planton.apis.commons.apiresource.options.apiresourcerpcmethodoptions.is_api_resource_new_version_required) = true;
  }
  //rpc to notify that a stack-job started running.
  //since the start of running of a stack-job happens in other services, iac service is notified of that event.
  //upon receiving this notification, iac service starts a stack-job progress follower that
  // takes care of updating the status of stack-job in the database.
  rpc notifyRunning(cloud.planton.apis.iac.v1.stackjob.model.StackJobId) returns (cloud.planton.apis.iac.v1.stackjob.model.StackJob) {
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_kind = platform;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).permission = platform_microservice_account;
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).resource_id = "planton-cloud";
    option (cloud.planton.apis.iam.v1.iampolicy.options.rpcauthorizationmethodoptions.authorization_config).error_msg = "unauthorized to notify stack job running progress";
  }
}
